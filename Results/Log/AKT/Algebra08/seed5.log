nohup: ignoring input
	 max_iter 	 300
	 train_set 	 5
	 seed 	 224
	 optim 	 adam
	 batch_size 	 32
	 lr 	 1e-05
	 maxgradnorm 	 -1
	 final_fc_dim 	 512
	 d_model 	 256
	 d_ff 	 1024
	 dropout 	 0.05
	 n_block 	 1
	 n_head 	 8
	 kq_same 	 1
	 l2 	 1e-05
	 q_embed_dim 	 50
	 qa_embed_dim 	 256
	 memory_size 	 50
	 init_std 	 0.1
	 hidden_dim 	 512
	 lamda_r 	 0.1
	 lamda_w1 	 0.1
	 lamda_w2 	 0.1
	 model 	 akt_cid
	 dataset 	 Algebra08
	 n_question 	 424
	 seqlen 	 200
	 data_dir 	 data/Algebra08
	 data_name 	 Algebra08
	 save 	 Algebra08
	 load 	 Algebra08


train_q_data.shape (3445, 200)
train_qa_data.shape (3445, 200)
valid_q_data.shape (741, 200)
valid_qa_data.shape (741, 200)




/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 1
valid_auc	 0.5503862839175264 	train_auc	 0.5086183527984613
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8419522719044306
valid_loss	 0.4171093427088012 	train_loss	 0.5270104716113341
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 2
valid_auc	 0.6392139438020533 	train_auc	 0.5774734166767269
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8504224668008588
valid_loss	 0.39495614529794776 	train_loss	 0.4178800053094232
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 3
valid_auc	 0.6693379903812838 	train_auc	 0.6400283544633402
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8504224668008588
valid_loss	 0.3862124466497692 	train_loss	 0.4067313061623803
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 4
valid_auc	 0.6801539335279614 	train_auc	 0.65920175524954
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8504224668008588
valid_loss	 0.3824436130253596 	train_loss	 0.40139636838282067
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 5
valid_auc	 0.6844330765667763 	train_auc	 0.6669832769328302
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8504194869609656
valid_loss	 0.38051295338129215 	train_loss	 0.39891469447828076
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 6
valid_auc	 0.6869671115331684 	train_auc	 0.6707874780542138
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8504224668008588
valid_loss	 0.37941551377030175 	train_loss	 0.3975172287875389
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 7
valid_auc	 0.6890364900476369 	train_auc	 0.6738790846801638
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8504239567208054
valid_loss	 0.37862933067168647 	train_loss	 0.3965454819662926
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 8
valid_auc	 0.6904920417740799 	train_auc	 0.6760474860159805
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8504224668008588
valid_loss	 0.3780592645155647 	train_loss	 0.39585832742188565
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 9
valid_auc	 0.6917445639630198 	train_auc	 0.6774502681465401
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8504239567208054
valid_loss	 0.37757809954273175 	train_loss	 0.3953587091205964
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 10
valid_auc	 0.6927420750103738 	train_auc	 0.6789154725079788
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.850417997041019
valid_loss	 0.3771689537331594 	train_loss	 0.3948845620925892
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 11
valid_auc	 0.6933933018990195 	train_auc	 0.6800689078628397
valid_accuracy	 0.8589657025533616 	train_accuracy	 0.850432896240485
valid_loss	 0.3770109451515412 	train_loss	 0.3944802087033237
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 12
valid_auc	 0.6944109518087377 	train_auc	 0.6811973788521847
valid_accuracy	 0.8589725923578289 	train_accuracy	 0.8504522651997908
valid_loss	 0.37670033808061587 	train_loss	 0.3941286876194932
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 13
valid_auc	 0.694897576717491 	train_auc	 0.6815891200075713
valid_accuracy	 0.8589243637265574 	train_accuracy	 0.8504522651997908
valid_loss	 0.37638777429143894 	train_loss	 0.39394471944830817
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 14
valid_auc	 0.6956764396663185 	train_auc	 0.6823895445425882
valid_accuracy	 0.8590690496203718 	train_accuracy	 0.8505029224779752
valid_loss	 0.3761549784782689 	train_loss	 0.39368584793505346
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 15
valid_auc	 0.6961990130302225 	train_auc	 0.6830582005463943
valid_accuracy	 0.8590828292293065 	train_accuracy	 0.8505520898362131
valid_loss	 0.3759821511691252 	train_loss	 0.3934319660244427
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 16
valid_auc	 0.6964774595566487 	train_auc	 0.6840802139417368
valid_accuracy	 0.8590483802069697 	train_accuracy	 0.8506042370343442
valid_loss	 0.3758014657253187 	train_loss	 0.3931423002731129
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 17
valid_auc	 0.6971238949768153 	train_auc	 0.6845572100407104
valid_accuracy	 0.8591034986427085 	train_accuracy	 0.8506057269542907
valid_loss	 0.37557699508278486 	train_loss	 0.39296772191193796
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 18
valid_auc	 0.697390082554159 	train_auc	 0.6851890563333981
valid_accuracy	 0.8591034986427085 	train_accuracy	 0.850645954792849
valid_loss	 0.3756708833584499 	train_loss	 0.3927280841350595
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 19
valid_auc	 0.6978726103704007 	train_auc	 0.6855598220963497
valid_accuracy	 0.8592275151231208 	train_accuracy	 0.8506697935119946
valid_loss	 0.37534079366374995 	train_loss	 0.3926110252428193
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 20
valid_auc	 0.697980767852364 	train_auc	 0.686177004189368
valid_accuracy	 0.8593515316035331 	train_accuracy	 0.8506742632718344
valid_loss	 0.375395030005752 	train_loss	 0.39241048817099966
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 21
valid_auc	 0.6983871580490931 	train_auc	 0.6863565492762154
valid_accuracy	 0.8593033029722617 	train_accuracy	 0.8506802229516208
valid_loss	 0.3751403541718288 	train_loss	 0.39233499595276006
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 22
valid_auc	 0.6985069200738938 	train_auc	 0.6870277898432826
valid_accuracy	 0.8593722010169351 	train_accuracy	 0.8507279003899121
valid_loss	 0.37521868407737785 	train_loss	 0.3921129305463595
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 23
valid_auc	 0.6990030777615223 	train_auc	 0.687482710043561
valid_accuracy	 0.8594962174973474 	train_accuracy	 0.8507889871077227
valid_loss	 0.37496844041992 	train_loss	 0.3919700407617585
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 24
valid_auc	 0.6992692808173372 	train_auc	 0.6876917836424186
valid_accuracy	 0.8593515316035331 	train_accuracy	 0.850821765346548
valid_loss	 0.37483249038751343 	train_loss	 0.3918591034074602
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 25
valid_auc	 0.69962173951449 	train_auc	 0.6881078735118973
valid_accuracy	 0.859447988866076 	train_accuracy	 0.8508351746260674
valid_loss	 0.3747345951771474 	train_loss	 0.3917321774528205
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 26
valid_auc	 0.6996725425995414 	train_auc	 0.6881404743738032
valid_accuracy	 0.8595375563241515 	train_accuracy	 0.8508143157468149
valid_loss	 0.37474159879564745 	train_loss	 0.39170707630972834
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 27
valid_auc	 0.6999760803153521 	train_auc	 0.6888487316229737
valid_accuracy	 0.8595168869107495 	train_accuracy	 0.850896261343878
valid_loss	 0.37456980151498787 	train_loss	 0.39147273408775396
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 28
valid_auc	 0.7001594445533339 	train_auc	 0.6891239596753179
valid_accuracy	 0.8593584214080005 	train_accuracy	 0.8508694427848392
valid_loss	 0.37462196218114757 	train_loss	 0.3914023629987317
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 29
valid_auc	 0.7003221034952826 	train_auc	 0.6892653768238757
valid_accuracy	 0.8593653112124678 	train_accuracy	 0.8509588379816353
valid_loss	 0.37458672384858765 	train_loss	 0.3912887537723405
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 30
valid_auc	 0.7006666959942549 	train_auc	 0.6898156812778173
valid_accuracy	 0.8593928704303372 	train_accuracy	 0.8509826767007809
valid_loss	 0.37441037393384335 	train_loss	 0.39113776461295185
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 31
valid_auc	 0.7008409526214906 	train_auc	 0.6901229615357204
valid_accuracy	 0.8594548786705434 	train_accuracy	 0.8509498984619557
valid_loss	 0.3742972212208723 	train_loss	 0.3910460559427786
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 32
valid_auc	 0.7011444617315193 	train_auc	 0.6903908016400937
valid_accuracy	 0.8592344049275882 	train_accuracy	 0.8510050254999799
valid_loss	 0.37433660449646233 	train_loss	 0.3909283629939071
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 33
valid_auc	 0.7011153089129558 	train_auc	 0.6909048576477412
valid_accuracy	 0.8592688539499249 	train_accuracy	 0.8510378037388051
valid_loss	 0.374227969757768 	train_loss	 0.39075007095555836
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 34
valid_auc	 0.7014397739135048 	train_auc	 0.6908532294947063
valid_accuracy	 0.859330862190131 	train_accuracy	 0.8509647976614216
valid_loss	 0.3740893019938612 	train_loss	 0.39075751505128464
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 35
valid_auc	 0.7016012363108612 	train_auc	 0.6912095715177862
valid_accuracy	 0.8593722010169351 	train_accuracy	 0.8509960859803003
valid_loss	 0.37403473431781487 	train_loss	 0.3906229169221644
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 36
valid_auc	 0.7017142307170667 	train_auc	 0.6913461168555607
valid_accuracy	 0.8593722010169351 	train_accuracy	 0.8510452533385381
valid_loss	 0.3739310286194841 	train_loss	 0.39056334130326675
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 37
valid_auc	 0.7018839433354304 	train_auc	 0.691998934064456
valid_accuracy	 0.8593584214080005 	train_accuracy	 0.8510541928582177
valid_loss	 0.3738820135875656 	train_loss	 0.39037135544444257
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 38
valid_auc	 0.701971343991767 	train_auc	 0.6921515108145313
valid_accuracy	 0.8593584214080005 	train_accuracy	 0.8510005557401401
valid_loss	 0.3738346485106724 	train_loss	 0.3902953607306199
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 39
valid_auc	 0.7022350493317702 	train_auc	 0.6922777918137303
valid_accuracy	 0.8593997602348046 	train_accuracy	 0.8510780315773634
valid_loss	 0.3737627842844547 	train_loss	 0.39027594680141064
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 40
valid_auc	 0.7023721059029294 	train_auc	 0.6924510640916803
valid_accuracy	 0.8592344049275882 	train_accuracy	 0.8510229045393392
valid_loss	 0.3736980853608027 	train_loss	 0.39019034790250323
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 41
valid_auc	 0.7024759977925694 	train_auc	 0.6929337281765836
valid_accuracy	 0.8594342092571413 	train_accuracy	 0.8510735618175236
valid_loss	 0.37366908382426833 	train_loss	 0.3900117569094415
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 42
valid_auc	 0.7027048091727545 	train_auc	 0.6931177458959418
valid_accuracy	 0.8594135398437392 	train_accuracy	 0.8510735618175236
valid_loss	 0.3735323578334787 	train_loss	 0.38990046228631503
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 43
valid_auc	 0.7026318193648382 	train_auc	 0.6933510471762385
valid_accuracy	 0.8593515316035331 	train_accuracy	 0.8510616424579507
valid_loss	 0.3736079697899204 	train_loss	 0.3898491348641215
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 44
valid_auc	 0.7027752368038847 	train_auc	 0.6936341888147954
valid_accuracy	 0.8594410990616086 	train_accuracy	 0.8511629570143197
valid_loss	 0.3736434016036511 	train_loss	 0.389712370882676
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 45
valid_auc	 0.7028628631715967 	train_auc	 0.693700395124461
valid_accuracy	 0.8593170825811963 	train_accuracy	 0.8510378037388051
valid_loss	 0.37353065982966605 	train_loss	 0.38970926302832615
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 46
valid_auc	 0.7030795018119054 	train_auc	 0.6937231988333085
valid_accuracy	 0.8591655068829147 	train_accuracy	 0.8512061646927711
valid_loss	 0.3734558148191805 	train_loss	 0.3896847812518878
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 47
valid_auc	 0.703290686152499 	train_auc	 0.6941316738720359
valid_accuracy	 0.8593790908214025 	train_accuracy	 0.851139118295174
valid_loss	 0.37336202019562265 	train_loss	 0.3895617570757048
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 48
valid_auc	 0.7034752649606342 	train_auc	 0.6943001683225285
valid_accuracy	 0.8594273194526739 	train_accuracy	 0.851168916694106
valid_loss	 0.3735973538376104 	train_loss	 0.3894633793709267
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 49
valid_auc	 0.7033294512975231 	train_auc	 0.694448233523963
valid_accuracy	 0.8592481845365229 	train_accuracy	 0.8512210638922371
valid_loss	 0.3733547059738702 	train_loss	 0.38939775874261134
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 50
valid_auc	 0.7035019731604197 	train_auc	 0.6947928481103323
valid_accuracy	 0.8593584214080005 	train_accuracy	 0.8512598018108487
valid_loss	 0.37319492670542487 	train_loss	 0.38929283918231894
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 51
valid_auc	 0.7036455547888174 	train_auc	 0.6951190596604278
valid_accuracy	 0.8593170825811963 	train_accuracy	 0.8513030094893002
valid_loss	 0.37322427383185697 	train_loss	 0.3891434800431886
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 52
valid_auc	 0.7037873136802999 	train_auc	 0.6950018632477396
valid_accuracy	 0.8593446417990658 	train_accuracy	 0.8511882856534119
valid_loss	 0.3731655027318353 	train_loss	 0.3891806477997726
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 53
valid_auc	 0.7038880526641631 	train_auc	 0.6952098426489384
valid_accuracy	 0.8593928704303372 	train_accuracy	 0.8513402574879652
valid_loss	 0.3735263457615569 	train_loss	 0.3891017739535606
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 54
valid_auc	 0.7038898509098267 	train_auc	 0.6957874672903265
valid_accuracy	 0.8594824378884127 	train_accuracy	 0.8512717211704215
valid_loss	 0.37306442244755667 	train_loss	 0.38892282044852233
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 55
valid_auc	 0.7039903204899215 	train_auc	 0.6957275490680654
valid_accuracy	 0.8594617684750107 	train_accuracy	 0.8514087938055088
valid_loss	 0.37340880021500333 	train_loss	 0.38891465412606324
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 56
valid_auc	 0.7036381494180285 	train_auc	 0.6960846895262196
valid_accuracy	 0.8594204296482065 	train_accuracy	 0.8513566466073778
valid_loss	 0.37309583725920126 	train_loss	 0.38877862748284636
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 57
valid_auc	 0.7042508811532086 	train_auc	 0.6960832793662366
valid_accuracy	 0.8595720053464883 	train_accuracy	 0.851441572044334
valid_loss	 0.37295293615381175 	train_loss	 0.38875479513803407
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 58
valid_auc	 0.7044029453756092 	train_auc	 0.6960230211688287
valid_accuracy	 0.8591792864918494 	train_accuracy	 0.8512896002097807
valid_loss	 0.37290578582496503 	train_loss	 0.3888318130630184
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 59
valid_auc	 0.7042075504470107 	train_auc	 0.696584248132568
valid_accuracy	 0.8594066500392719 	train_accuracy	 0.8514520014839603
valid_loss	 0.3728732296258257 	train_loss	 0.3885926796041473
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 60
valid_auc	 0.7043359892324577 	train_auc	 0.6968814833085103
valid_accuracy	 0.8596340135866944 	train_accuracy	 0.8514579611637467
valid_loss	 0.3728396335606287 	train_loss	 0.3884652850335676
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 61
valid_auc	 0.7044586453394872 	train_auc	 0.6967453190783117
valid_accuracy	 0.8594548786705434 	train_accuracy	 0.8515309672411301
valid_loss	 0.37280572728079614 	train_loss	 0.3885172943068059
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 62
valid_auc	 0.7044711358778457 	train_auc	 0.6967115397819055
valid_accuracy	 0.8593790908214025 	train_accuracy	 0.8514281627648147
valid_loss	 0.3728954721300658 	train_loss	 0.3885048285785414
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 63
valid_auc	 0.7046434416299374 	train_auc	 0.6970821826013
valid_accuracy	 0.8592550743409902 	train_accuracy	 0.8514490216440671
valid_loss	 0.37277899110952123 	train_loss	 0.3884066702559936
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 64
valid_auc	 0.704355855752103 	train_auc	 0.6971449227141332
valid_accuracy	 0.8594962174973474 	train_accuracy	 0.8514952091624117
valid_loss	 0.3728209962771584 	train_loss	 0.38837361757233513
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 65
valid_auc	 0.7046896152806306 	train_auc	 0.6971069399696541
valid_accuracy	 0.8594617684750107 	train_accuracy	 0.8515473563605428
valid_loss	 0.3727184179201515 	train_loss	 0.3883494625020249
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 66
valid_auc	 0.7047186186045938 	train_auc	 0.6974059347741679
valid_accuracy	 0.8595720053464883 	train_accuracy	 0.8514207131650816
valid_loss	 0.3732323702073582 	train_loss	 0.3882915967403496
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 67
valid_auc	 0.7049484063040361 	train_auc	 0.6975319187717487
valid_accuracy	 0.8595513359330862 	train_accuracy	 0.8516054632384602
valid_loss	 0.37260557695143803 	train_loss	 0.3881869084134792
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 68
valid_auc	 0.7043357141467188 	train_auc	 0.6975688584592493
valid_accuracy	 0.859330862190131 	train_accuracy	 0.8515041486820913
valid_loss	 0.37282134537648465 	train_loss	 0.38814190136217563
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 69
valid_auc	 0.7050439911529652 	train_auc	 0.6981015356952637
valid_accuracy	 0.8595582257375536 	train_accuracy	 0.851550336200436
valid_loss	 0.37256302809370156 	train_loss	 0.3879714000323747
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 70
valid_auc	 0.7051135535571559 	train_auc	 0.6981577798858745
valid_accuracy	 0.8595375563241515 	train_accuracy	 0.8514892494826253
valid_loss	 0.37253481361568563 	train_loss	 0.3879887873351851
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 71
valid_auc	 0.7049094879417415 	train_auc	 0.6981307070078135
valid_accuracy	 0.8595788951509556 	train_accuracy	 0.851602483398567
valid_loss	 0.37265401424811756 	train_loss	 0.3879972654337005
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 72
valid_auc	 0.7048773274015412 	train_auc	 0.6982045189078309
valid_accuracy	 0.8596340135866944 	train_accuracy	 0.8516233422778194
valid_loss	 0.3726674065257864 	train_loss	 0.3879256257423755
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 73
valid_auc	 0.7049950260873701 	train_auc	 0.6986093713958864
valid_accuracy	 0.8595306665196841 	train_accuracy	 0.8516829390756835
valid_loss	 0.37258361973180626 	train_loss	 0.3877871879546722
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 74
valid_auc	 0.7049561682674496 	train_auc	 0.6987111000955374
valid_accuracy	 0.8594548786705434 	train_accuracy	 0.8517231669142417
valid_loss	 0.3725840414295758 	train_loss	 0.38773061102948936
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 75
valid_auc	 0.7050874182567297 	train_auc	 0.698509630464072
valid_accuracy	 0.8595513359330862 	train_accuracy	 0.851602483398567
valid_loss	 0.37247622838690364 	train_loss	 0.3878113480534891
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 76
valid_auc	 0.7051435672921986 	train_auc	 0.6985614843655603
valid_accuracy	 0.8595926747598903 	train_accuracy	 0.8516203624379262
valid_loss	 0.37246865727084083 	train_loss	 0.38775774536504276
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 77
valid_auc	 0.7052826119652045 	train_auc	 0.6986712033319054
valid_accuracy	 0.859034600598035 	train_accuracy	 0.8517172072344553
valid_loss	 0.372569268777679 	train_loss	 0.3876968210332978
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 78
valid_auc	 0.7051230990714819 	train_auc	 0.699255107719034
valid_accuracy	 0.8594617684750107 	train_accuracy	 0.8516501608368582
valid_loss	 0.37251046232972357 	train_loss	 0.38758012578342954
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 79
valid_auc	 0.7052014036769434 	train_auc	 0.699058560358436
valid_accuracy	 0.859310192776729 	train_accuracy	 0.8517261467541349
valid_loss	 0.37246288768793895 	train_loss	 0.38759344090978437
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 80
valid_auc	 0.7053255120172327 	train_auc	 0.6991521016105198
valid_accuracy	 0.8591517272739799 	train_accuracy	 0.8517410459536009
valid_loss	 0.3725994465326475 	train_loss	 0.38748453936645616
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 81
valid_auc	 0.7054882916520698 	train_auc	 0.6994072559030511
valid_accuracy	 0.859468658279478 	train_accuracy	 0.8517186971544018
valid_loss	 0.3724065922314626 	train_loss	 0.3874047982587311
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 82
valid_auc	 0.7051807444244637 	train_auc	 0.6994981853593089
valid_accuracy	 0.8593584214080005 	train_accuracy	 0.8517008181150427
valid_loss	 0.37262764146291205 	train_loss	 0.3874484987747111
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 83
valid_auc	 0.705394093987636 	train_auc	 0.6994675409752751
valid_accuracy	 0.8595375563241515 	train_accuracy	 0.851822991550664
valid_loss	 0.3723402230916139 	train_loss	 0.38739172390357873
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 84
valid_auc	 0.705400466219464 	train_auc	 0.6995922514556058
valid_accuracy	 0.859330862190131 	train_accuracy	 0.8518051125113048
valid_loss	 0.3723859168765816 	train_loss	 0.3873162839653873
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 85
valid_auc	 0.7055975441868783 	train_auc	 0.6996695796547907
valid_accuracy	 0.8595995645643577 	train_accuracy	 0.8517708443525329
valid_loss	 0.3723687192197688 	train_loss	 0.3873209109645692
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 86
valid_auc	 0.7052994960381849 	train_auc	 0.6999638758427487
valid_accuracy	 0.8594824378884127 	train_accuracy	 0.8518185217908242
valid_loss	 0.372366989797522 	train_loss	 0.3872097575683867
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 87
valid_auc	 0.705198270756028 	train_auc	 0.7001249342149182
valid_accuracy	 0.8594548786705434 	train_accuracy	 0.8517172072344553
valid_loss	 0.37241765691649376 	train_loss	 0.3871560205809362
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 88
valid_auc	 0.7054384039520414 	train_auc	 0.699986451586843
valid_accuracy	 0.859627123782227 	train_accuracy	 0.8518200117107708
valid_loss	 0.37234507154176205 	train_loss	 0.38722037546989724
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 89
valid_auc	 0.7054615963836652 	train_auc	 0.7002112763931432
valid_accuracy	 0.8594204296482065 	train_accuracy	 0.8519317557067658
valid_loss	 0.3724174602314031 	train_loss	 0.38714610824234985
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 90
valid_auc	 0.7054847451228962 	train_auc	 0.700733434058361
valid_accuracy	 0.8594135398437392 	train_accuracy	 0.8517589249929601
valid_loss	 0.37229827678679484 	train_loss	 0.3869903137374219
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 91
valid_auc	 0.7055058399277958 	train_auc	 0.7005287069810682
valid_accuracy	 0.85972358104477 	train_accuracy	 0.851845340349863
valid_loss	 0.37222242787543314 	train_loss	 0.387009789884641
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 92
valid_auc	 0.7055192391895567 	train_auc	 0.7005221664536316
valid_accuracy	 0.8592619641454575 	train_accuracy	 0.8518617294692756
valid_loss	 0.3723703855224979 	train_loss	 0.3869707454047895
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 93
valid_auc	 0.705747487270953 	train_auc	 0.7006007609627297
valid_accuracy	 0.8594273194526739 	train_accuracy	 0.8518885480283145
valid_loss	 0.37225196131109767 	train_loss	 0.387026852185684
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 94
valid_auc	 0.7056816751631502 	train_auc	 0.700865268424145
valid_accuracy	 0.8594204296482065 	train_accuracy	 0.8519108968275134
valid_loss	 0.37228423257864607 	train_loss	 0.38686476492675514
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 95
valid_auc	 0.7052006959777348 	train_auc	 0.7007779442157153
valid_accuracy	 0.859468658279478 	train_accuracy	 0.8517470056333873
valid_loss	 0.3723845905285981 	train_loss	 0.386930812334256
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 96
valid_auc	 0.7059119185958036 	train_auc	 0.700890173769773
valid_accuracy	 0.8592206253186535 	train_accuracy	 0.8517619048328533
valid_loss	 0.3723272436653148 	train_loss	 0.38687679245565193
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 97
valid_auc	 0.7055165900198446 	train_auc	 0.7009911422437063
valid_accuracy	 0.8595099971062822 	train_accuracy	 0.8517768040323194
valid_loss	 0.37225703090740436 	train_loss	 0.38682782445191305
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 98
valid_auc	 0.7057241561208797 	train_auc	 0.7012294276243983
valid_accuracy	 0.859447988866076 	train_accuracy	 0.8518498101097028
valid_loss	 0.3724224569124036 	train_loss	 0.38674832212869553
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 99
valid_auc	 0.705467981350944 	train_auc	 0.701162117763242
valid_accuracy	 0.8595720053464883 	train_accuracy	 0.8519511246660717
valid_loss	 0.372280942308229 	train_loss	 0.3867523246318997
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 100
valid_auc	 0.7057726433131719 	train_auc	 0.7017313064958995
valid_accuracy	 0.8593515316035331 	train_accuracy	 0.8519526145860183
valid_loss	 0.37231248679103635 	train_loss	 0.3865482990822862
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 101
valid_auc	 0.7056776533077638 	train_auc	 0.7014588243255166
valid_accuracy	 0.859627123782227 	train_accuracy	 0.8518319310703436
valid_loss	 0.3729888091102561 	train_loss	 0.38668151101845116
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 102
valid_auc	 0.70584115024238 	train_auc	 0.701617353681528
valid_accuracy	 0.8594066500392719 	train_accuracy	 0.8519824129849504
valid_loss	 0.372180354065802 	train_loss	 0.38660644276062545
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 103
valid_auc	 0.7057250309483898 	train_auc	 0.7021182668396768
valid_accuracy	 0.859447988866076 	train_accuracy	 0.8519734734652707
valid_loss	 0.3723201834963577 	train_loss	 0.3864234161805993
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 104
valid_auc	 0.7055073799377016 	train_auc	 0.7016767736900752
valid_accuracy	 0.8595651155420209 	train_accuracy	 0.8518423605099698
valid_loss	 0.37227460528629047 	train_loss	 0.38653907907299684
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 105
valid_auc	 0.7060647271563255 	train_auc	 0.7017780074306574
valid_accuracy	 0.8596753524134985 	train_accuracy	 0.8520241307434552
valid_loss	 0.37228854222527336 	train_loss	 0.38651381431361986
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 106
valid_auc	 0.7058589018934601 	train_auc	 0.7020828815810574
valid_accuracy	 0.8595788951509556 	train_accuracy	 0.8519243061070328
valid_loss	 0.37218053952800073 	train_loss	 0.3864012635807812
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 107
valid_auc	 0.7058412870015296 	train_auc	 0.7017974453916598
valid_accuracy	 0.8596202339777597 	train_accuracy	 0.8519600641857513
valid_loss	 0.37224424615791246 	train_loss	 0.3864886104093649
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 108
valid_auc	 0.7057223073252725 	train_auc	 0.7022478845915867
valid_accuracy	 0.8593722010169351 	train_accuracy	 0.8518989774679406
valid_loss	 0.3722798686541429 	train_loss	 0.38633826619767436
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 109
valid_auc	 0.7059316912649726 	train_auc	 0.7019087002188311
valid_accuracy	 0.8591792864918494 	train_accuracy	 0.8520256206634017
valid_loss	 0.37238416255589657 	train_loss	 0.38644421377091226
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 110
valid_auc	 0.7057475901342101 	train_auc	 0.7023717730777511
valid_accuracy	 0.859289523363327 	train_accuracy	 0.8520166811437222
valid_loss	 0.3722507174705417 	train_loss	 0.38630057719144406
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 111
valid_auc	 0.7059986621028752 	train_auc	 0.702467771228995
valid_accuracy	 0.8595444461286189 	train_accuracy	 0.8519243061070328
valid_loss	 0.3721829116433752 	train_loss	 0.38624341966434134
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 112
valid_auc	 0.7058798342723787 	train_auc	 0.7021256780326184
valid_accuracy	 0.8595237767152168 	train_accuracy	 0.8519526145860183
valid_loss	 0.37211378493390457 	train_loss	 0.38637936021830765
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 113
valid_auc	 0.7056886520349996 	train_auc	 0.7025224260185614
valid_accuracy	 0.8594617684750107 	train_accuracy	 0.8520807477014261
valid_loss	 0.37218459742011245 	train_loss	 0.3862546920598634
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 114
valid_auc	 0.7059020219748935 	train_auc	 0.7029413501776752
valid_accuracy	 0.8595306665196841 	train_accuracy	 0.8519421851463921
valid_loss	 0.37246340520513527 	train_loss	 0.38611628010249427
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 115
valid_auc	 0.7062028413576975 	train_auc	 0.7025241661279886
valid_accuracy	 0.8592275151231208 	train_accuracy	 0.8520256206634017
valid_loss	 0.37225455579566935 	train_loss	 0.38619891323015365
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 116
valid_auc	 0.7059529816080257 	train_auc	 0.7027322431074559
valid_accuracy	 0.8595720053464883 	train_accuracy	 0.8521209755399842
valid_loss	 0.3722710850648787 	train_loss	 0.38614972854827617
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 117
valid_auc	 0.7056898852185044 	train_auc	 0.7030216139269619
valid_accuracy	 0.8595788951509556 	train_accuracy	 0.8520479694626008
valid_loss	 0.3721875863061912 	train_loss	 0.3860291696194773
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 118
valid_auc	 0.7058118134455339 	train_auc	 0.7027384372028094
valid_accuracy	 0.8593653112124678 	train_accuracy	 0.8521016065806785
valid_loss	 0.37221348318720054 	train_loss	 0.3861076227867772
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 119
valid_auc	 0.7060892587695914 	train_auc	 0.7029261642488278
valid_accuracy	 0.8595099971062822 	train_accuracy	 0.8520971368208387
valid_loss	 0.3721141888708646 	train_loss	 0.3860694077880133
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 120
valid_auc	 0.7059409589505395 	train_auc	 0.7033384363151167
valid_accuracy	 0.8593790908214025 	train_accuracy	 0.8520598888221735
valid_loss	 0.372254886302318 	train_loss	 0.3859045654066321
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 121
valid_auc	 0.7059188741112816 	train_auc	 0.7029735556831173
valid_accuracy	 0.8596133441732924 	train_accuracy	 0.8520539291423872
valid_loss	 0.37233244995659465 	train_loss	 0.38605526788949746
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 122
valid_auc	 0.706050648801138 	train_auc	 0.7034915365307619
valid_accuracy	 0.859447988866076 	train_accuracy	 0.8521448142591299
valid_loss	 0.372094202673931 	train_loss	 0.38587770600675186
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 123
valid_auc	 0.7059759624352351 	train_auc	 0.7034259501655103
valid_accuracy	 0.859468658279478 	train_accuracy	 0.8519734734652707
valid_loss	 0.37207032066784756 	train_loss	 0.38589782213470236
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 124
valid_auc	 0.7057490004384471 	train_auc	 0.7032552271296348
valid_accuracy	 0.8594204296482065 	train_accuracy	 0.8521090561804114
valid_loss	 0.37237756822661877 	train_loss	 0.38591794615987424
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 125
valid_auc	 0.7062523238744581 	train_auc	 0.7037153307053233
valid_accuracy	 0.8593722010169351 	train_accuracy	 0.8520524392224406
valid_loss	 0.3723580407317518 	train_loss	 0.3857622620768632
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 126
valid_auc	 0.7061961538744779 	train_auc	 0.7035421121682794
valid_accuracy	 0.8594135398437392 	train_accuracy	 0.852036050103028
valid_loss	 0.37219459739391536 	train_loss	 0.3858201042035902
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 127
valid_auc	 0.7060247313748867 	train_auc	 0.7038119562526347
valid_accuracy	 0.8592826335588596 	train_accuracy	 0.8521165057801444
valid_loss	 0.3721308816349127 	train_loss	 0.3857405031323002
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 128
valid_auc	 0.7056992494975679 	train_auc	 0.7040380894959944
valid_accuracy	 0.8595168869107495 	train_accuracy	 0.8519943323445232
valid_loss	 0.37216616796705415 	train_loss	 0.3856714277626834
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 129
valid_auc	 0.7059787579646672 	train_auc	 0.7037456348786194
valid_accuracy	 0.8596133441732924 	train_accuracy	 0.8521716328181687
valid_loss	 0.3721077496779655 	train_loss	 0.3857091097118061
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 130
valid_auc	 0.7056192832096623 	train_auc	 0.704140491558119
valid_accuracy	 0.8595031073018148 	train_accuracy	 0.8522312296160327
valid_loss	 0.37214425232906445 	train_loss	 0.38563061855946873
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 131
valid_auc	 0.7058254801517632 	train_auc	 0.7038277395004422
valid_accuracy	 0.8594617684750107 	train_accuracy	 0.8519853928248435
valid_loss	 0.3721605103001874 	train_loss	 0.3857240780411403
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 132
valid_auc	 0.706200652427587 	train_auc	 0.7038583567391666
valid_accuracy	 0.8592275151231208 	train_accuracy	 0.8520986267407852
valid_loss	 0.37214711346471213 	train_loss	 0.38568585649919623
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 133
valid_auc	 0.7058854758811863 	train_auc	 0.7041774922985697
valid_accuracy	 0.8594548786705434 	train_accuracy	 0.8522193102564599
valid_loss	 0.3722342555654607 	train_loss	 0.3855762169726696
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 134
valid_auc	 0.7061042307615704 	train_auc	 0.7043076109691263
valid_accuracy	 0.8595582257375536 	train_accuracy	 0.852241659055659
valid_loss	 0.37204827533089835 	train_loss	 0.38555793691310947
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 135
valid_auc	 0.7059987275434997 	train_auc	 0.7041675676210198
valid_accuracy	 0.8594755480839453 	train_accuracy	 0.8522982760136298
valid_loss	 0.37208514866999315 	train_loss	 0.3855826089823429
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 136
valid_auc	 0.7062994628723277 	train_auc	 0.7043166333858114
valid_accuracy	 0.8592964131677943 	train_accuracy	 0.8521656731383823
valid_loss	 0.3723067678712272 	train_loss	 0.38549684403429935
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 137
valid_auc	 0.7058526867975029 	train_auc	 0.7041951918865375
valid_accuracy	 0.8594617684750107 	train_accuracy	 0.8521463041790764
valid_loss	 0.3720798986680781 	train_loss	 0.38554995428420646
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 138
valid_auc	 0.7059381698867978 	train_auc	 0.7046025912345817
valid_accuracy	 0.8595306665196841 	train_accuracy	 0.8521343848195037
valid_loss	 0.37209604877006097 	train_loss	 0.3853907760070892
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 139
valid_auc	 0.70536446858588 	train_auc	 0.704452226081167
valid_accuracy	 0.8595857849554229 	train_accuracy	 0.8522312296160327
valid_loss	 0.37229124615580467 	train_loss	 0.38546185016256296
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 140
valid_auc	 0.7062185627819779 	train_auc	 0.7046921619158533
valid_accuracy	 0.8594410990616086 	train_accuracy	 0.8522535784152317
valid_loss	 0.37214306964226257 	train_loss	 0.38535170578834815
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 141
valid_auc	 0.7061116098777376 	train_auc	 0.7046364172565203
valid_accuracy	 0.8594755480839453 	train_accuracy	 0.8521403444992901
valid_loss	 0.3725973668484676 	train_loss	 0.3854143018740915
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 142
valid_auc	 0.7061788893054113 	train_auc	 0.7043547247813319
valid_accuracy	 0.8592964131677943 	train_accuracy	 0.8522193102564599
valid_loss	 0.37217602430517827 	train_loss	 0.38548585099816784
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 143
valid_auc	 0.7059062352539031 	train_auc	 0.7050755790856471
valid_accuracy	 0.8595926747598903 	train_accuracy	 0.8522833768141638
valid_loss	 0.3721678103013457 	train_loss	 0.38524109492339376
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 144
valid_auc	 0.705714586703092 	train_auc	 0.7049704050694997
valid_accuracy	 0.8594755480839453 	train_accuracy	 0.8522818868942171
valid_loss	 0.37209039752612577 	train_loss	 0.38525328983930596
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 145
valid_auc	 0.7060008898271282 	train_auc	 0.7051203070249917
valid_accuracy	 0.8596546830000965 	train_accuracy	 0.8522163304165667
valid_loss	 0.3721690254287446 	train_loss	 0.38521280686647924
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 146
valid_auc	 0.7059909181650229 	train_auc	 0.7052327261948366
valid_accuracy	 0.8594342092571413 	train_accuracy	 0.8521477940990231
valid_loss	 0.3720985928323207 	train_loss	 0.3851954775640347
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 147
valid_auc	 0.7059929239005708 	train_auc	 0.7049363379682466
valid_accuracy	 0.8595375563241515 	train_accuracy	 0.852234209455926
valid_loss	 0.37205024822301763 	train_loss	 0.3852383056821559
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 148
valid_auc	 0.7060432414710489 	train_auc	 0.7052199275262191
valid_accuracy	 0.859447988866076 	train_accuracy	 0.8522759272144308
valid_loss	 0.37206892795009844 	train_loss	 0.38515156880845536
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 149
valid_auc	 0.7062658504907278 	train_auc	 0.7054800215233462
valid_accuracy	 0.8594893276928801 	train_accuracy	 0.8522059009769405
valid_loss	 0.37219328485970193 	train_loss	 0.38511459777329016
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 150
valid_auc	 0.7061829532857505 	train_auc	 0.7053273404064941
valid_accuracy	 0.8595237767152168 	train_accuracy	 0.8523548929716006
valid_loss	 0.37235787782468605 	train_loss	 0.3851047156209401
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 151
valid_auc	 0.705931567241274 	train_auc	 0.7055434525370881
valid_accuracy	 0.8595513359330862 	train_accuracy	 0.8522163304165667
valid_loss	 0.37258563404357015 	train_loss	 0.38501439947847704
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 152
valid_auc	 0.7060049391127166 	train_auc	 0.705533191714925
valid_accuracy	 0.8591517272739799 	train_accuracy	 0.8523608526513871
valid_loss	 0.3721659206281203 	train_loss	 0.3850423890096096
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 153
valid_auc	 0.7055478134267905 	train_auc	 0.7061604130437589
valid_accuracy	 0.8596684626090312 	train_accuracy	 0.8523623425713337
valid_loss	 0.3721587917273365 	train_loss	 0.3848002230823488
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 154
valid_auc	 0.706248350413785 	train_auc	 0.7057091829563924
valid_accuracy	 0.8594617684750107 	train_accuracy	 0.8522863566540569
valid_loss	 0.37207635741374107 	train_loss	 0.38496602962421134
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 155
valid_auc	 0.7059678593576683 	train_auc	 0.7058080849314948
valid_accuracy	 0.8594273194526739 	train_accuracy	 0.8522595380950182
valid_loss	 0.372403409882109 	train_loss	 0.38499933032464806
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 156
valid_auc	 0.7060810430322668 	train_auc	 0.7056118606969303
valid_accuracy	 0.859627123782227 	train_accuracy	 0.8524368385686637
valid_loss	 0.37206855330480293 	train_loss	 0.3849669711690335
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 157
valid_auc	 0.7059568953100447 	train_auc	 0.7058179148927697
valid_accuracy	 0.8596960218269005 	train_accuracy	 0.8523981006500521
valid_loss	 0.37224876948624497 	train_loss	 0.3849011564301176
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 158
valid_auc	 0.706116826318416 	train_auc	 0.7060650952703623
valid_accuracy	 0.8592206253186535 	train_accuracy	 0.8522863566540569
valid_loss	 0.37224984565471014 	train_loss	 0.38480359146990717
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 159
valid_auc	 0.706493339147392 	train_auc	 0.706084865187695
valid_accuracy	 0.8595168869107495 	train_accuracy	 0.8522327195359793
valid_loss	 0.37234800638408533 	train_loss	 0.38480389024496114
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 160
valid_auc	 0.7059640328445053 	train_auc	 0.7060253293294947
valid_accuracy	 0.8594617684750107 	train_accuracy	 0.8523057256133628
valid_loss	 0.3721342212702259 	train_loss	 0.3848625728143048
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 161
valid_auc	 0.7060480813342415 	train_auc	 0.7062988157192567
valid_accuracy	 0.8594617684750107 	train_accuracy	 0.8523191348928822
valid_loss	 0.37206680357458494 	train_loss	 0.3847357241931692
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 162
valid_auc	 0.7061178253655547 	train_auc	 0.706297842850921
valid_accuracy	 0.8596891320224332 	train_accuracy	 0.8523504232117608
valid_loss	 0.37240813071842016 	train_loss	 0.38474709237979166
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 163
valid_auc	 0.7059651286810704 	train_auc	 0.7065755148361993
valid_accuracy	 0.8594273194526739 	train_accuracy	 0.8521612033785425
valid_loss	 0.37221266478747206 	train_loss	 0.3846474588851846
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 164
valid_auc	 0.706063658162172 	train_auc	 0.7062787364448713
valid_accuracy	 0.8595788951509556 	train_accuracy	 0.8523817115306395
valid_loss	 0.37241808716717606 	train_loss	 0.3847754671624776
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 165
valid_auc	 0.7058845168037705 	train_auc	 0.7063341764676951
valid_accuracy	 0.8595720053464883 	train_accuracy	 0.8524576974479161
valid_loss	 0.37215434948307535 	train_loss	 0.38466972380768133
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 166
valid_auc	 0.7063218666856473 	train_auc	 0.7066212215336528
valid_accuracy	 0.8593584214080005 	train_accuracy	 0.8524234292891443
valid_loss	 0.37204691427710934 	train_loss	 0.3846375336538208
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 167
valid_auc	 0.7059552816304537 	train_auc	 0.7066402243582285
valid_accuracy	 0.8593377519945984 	train_accuracy	 0.8523623425713337
valid_loss	 0.3721038744089598 	train_loss	 0.3846469232788414
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 168
valid_auc	 0.706245439285645 	train_auc	 0.7069301156678787
valid_accuracy	 0.8593859806258698 	train_accuracy	 0.8523981006500521
valid_loss	 0.37203807640427455 	train_loss	 0.3844907491066585
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 169
valid_auc	 0.7055267983654062 	train_auc	 0.7071067345933582
valid_accuracy	 0.8596202339777597 	train_accuracy	 0.8524025704098919
valid_loss	 0.3723188653432743 	train_loss	 0.3844425739183739
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 170
valid_auc	 0.7059784985533294 	train_auc	 0.706848276687905
valid_accuracy	 0.8592757437543922 	train_accuracy	 0.852375751850853
valid_loss	 0.3721689840823362 	train_loss	 0.3845536358639821
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 171
valid_auc	 0.7053958320827856 	train_auc	 0.706662869976844
valid_accuracy	 0.8595237767152168 	train_accuracy	 0.8525679515239646
valid_loss	 0.3722052222457003 	train_loss	 0.3845426728474053
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 172
valid_auc	 0.7059307116149052 	train_auc	 0.7069681688714934
valid_accuracy	 0.8594893276928801 	train_accuracy	 0.8524174696093579
valid_loss	 0.37204749727425146 	train_loss	 0.3844752790109466
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 173
valid_auc	 0.7061605743555426 	train_auc	 0.7069735158255313
valid_accuracy	 0.8594755480839453 	train_accuracy	 0.8523608526513871
valid_loss	 0.3720429267632162 	train_loss	 0.38442141157461857
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 174
valid_auc	 0.7061511279818035 	train_auc	 0.7070006503673338
valid_accuracy	 0.8595926747598903 	train_accuracy	 0.8523876712104259
valid_loss	 0.37223866046766946 	train_loss	 0.3844814230488942
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 175
valid_auc	 0.7062087878336061 	train_auc	 0.7070267356220868
valid_accuracy	 0.8595031073018148 	train_accuracy	 0.8523772417707997
valid_loss	 0.3722548107156242 	train_loss	 0.38444489758175715
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 176
valid_auc	 0.7058726412897243 	train_auc	 0.7076869136074674
valid_accuracy	 0.8594824378884127 	train_accuracy	 0.8524159796894113
valid_loss	 0.3721887467141474 	train_loss	 0.38424605091653935
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 177
valid_auc	 0.7057295449799701 	train_auc	 0.7072122534186287
valid_accuracy	 0.8596202339777597 	train_accuracy	 0.8524129998495181
valid_loss	 0.3721010756587898 	train_loss	 0.3843860616873544
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 178
valid_auc	 0.7055424028194686 	train_auc	 0.7072543642831656
valid_accuracy	 0.8593997602348046 	train_accuracy	 0.85244726800829
valid_loss	 0.37214964331136674 	train_loss	 0.38434701468946275
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 179
valid_auc	 0.7060995035581356 	train_auc	 0.707386037347701
valid_accuracy	 0.859627123782227 	train_accuracy	 0.8525247438455131
valid_loss	 0.37237342107081683 	train_loss	 0.3843149326479959
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 180
valid_auc	 0.7063514309572393 	train_auc	 0.7074940338041323
valid_accuracy	 0.8593515316035331 	train_accuracy	 0.8524383284886103
valid_loss	 0.37221300511941924 	train_loss	 0.38426394176428225
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 181
valid_auc	 0.7064831560768021 	train_auc	 0.7075388347417596
valid_accuracy	 0.8593033029722617 	train_accuracy	 0.8525470926447122
valid_loss	 0.3721703092137073 	train_loss	 0.38423208555873706
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 182
valid_auc	 0.7059986395709236 	train_auc	 0.7076942544983336
valid_accuracy	 0.8594824378884127 	train_accuracy	 0.852648407201081
valid_loss	 0.3720270001239591 	train_loss	 0.3841480181852442
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 183
valid_auc	 0.7061601599635641 	train_auc	 0.7075883854017203
valid_accuracy	 0.8593653112124678 	train_accuracy	 0.8524234292891443
valid_loss	 0.3720095955378859 	train_loss	 0.3842456730681211
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 184
valid_auc	 0.7063376004535188 	train_auc	 0.7076931459121775
valid_accuracy	 0.8592964131677943 	train_accuracy	 0.8526275483218286
valid_loss	 0.3721941786661602 	train_loss	 0.3841509516650375
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 185
valid_auc	 0.7058161967917952 	train_auc	 0.707676002554369
valid_accuracy	 0.8592964131677943 	train_accuracy	 0.8524278990489841
valid_loss	 0.37223574913268453 	train_loss	 0.384203033062645
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 186
valid_auc	 0.7058074146208015 	train_auc	 0.7078657996767104
valid_accuracy	 0.8593859806258698 	train_accuracy	 0.8524725966473822
valid_loss	 0.372203561638459 	train_loss	 0.38416191572847785
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 187
valid_auc	 0.7058787517590542 	train_auc	 0.7079989789350676
valid_accuracy	 0.8594410990616086 	train_accuracy	 0.8526826753598529
valid_loss	 0.3721227837586482 	train_loss	 0.38404648341098774
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 188
valid_auc	 0.7057802426546742 	train_auc	 0.7079016941520124
valid_accuracy	 0.859310192776729 	train_accuracy	 0.8525798708835375
valid_loss	 0.37216478958208105 	train_loss	 0.38409336145050804
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 189
valid_auc	 0.7055388670664458 	train_auc	 0.7081261095274727
valid_accuracy	 0.8591586170784473 	train_accuracy	 0.8524398184085569
valid_loss	 0.3722647408125751 	train_loss	 0.38406407809630677
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 190
valid_auc	 0.7061604622835749 	train_auc	 0.7079909134101635
valid_accuracy	 0.8592412947320555 	train_accuracy	 0.8524010804899452
valid_loss	 0.37208436499690173 	train_loss	 0.384047574961426
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 191
valid_auc	 0.7063514352676995 	train_auc	 0.708251422780257
valid_accuracy	 0.8591448374695126 	train_accuracy	 0.8525470926447122
valid_loss	 0.37205865403491994 	train_loss	 0.38393428515213485
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 192
valid_auc	 0.7061372577042901 	train_auc	 0.7087577100552043
valid_accuracy	 0.8591448374695126 	train_accuracy	 0.8524457780883433
valid_loss	 0.37207651580026824 	train_loss	 0.3838123030672248
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 193
valid_auc	 0.7060653903794211 	train_auc	 0.708310178117018
valid_accuracy	 0.8593997602348046 	train_accuracy	 0.8526051995226297
valid_loss	 0.3721915639292945 	train_loss	 0.38393548250546156
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 194
valid_auc	 0.7055024969699061 	train_auc	 0.7086530903234093
valid_accuracy	 0.8595926747598903 	train_accuracy	 0.8525709313638579
valid_loss	 0.3724127248910047 	train_loss	 0.38380213365984045
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 195
valid_auc	 0.7059032929728908 	train_auc	 0.70862592149004
valid_accuracy	 0.8591655068829147 	train_accuracy	 0.852690124959586
valid_loss	 0.3722020021005583 	train_loss	 0.3838220259890584
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 196
valid_auc	 0.7054840170469661 	train_auc	 0.7088974300591379
valid_accuracy	 0.8593170825811963 	train_accuracy	 0.8525038849662607
valid_loss	 0.37225361664926837 	train_loss	 0.38375487492920773
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 197
valid_auc	 0.7057028761621171 	train_auc	 0.7090525613128179
valid_accuracy	 0.8596822422179659 	train_accuracy	 0.8525456027247656
valid_loss	 0.37254006195475015 	train_loss	 0.3837221475290396
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 198
valid_auc	 0.7058652416009058 	train_auc	 0.7086550977150966
valid_accuracy	 0.859310192776729 	train_accuracy	 0.8524442881683967
valid_loss	 0.37254020844987196 	train_loss	 0.38383918479538115
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 199
valid_auc	 0.7063326075689856 	train_auc	 0.7088124821864994
valid_accuracy	 0.8591999559052514 	train_accuracy	 0.8525873204832705
valid_loss	 0.3721898855598833 	train_loss	 0.38372417976262124
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 200
valid_auc	 0.7061432431702716 	train_auc	 0.7084077138218527
valid_accuracy	 0.8594204296482065 	train_accuracy	 0.8525023950463142
valid_loss	 0.37227459484431846 	train_loss	 0.3838807937637612
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 201
valid_auc	 0.7061820226181865 	train_auc	 0.7087503767468754
valid_accuracy	 0.8593377519945984 	train_accuracy	 0.8526498971210277
valid_loss	 0.3722220815719162 	train_loss	 0.38375380680678595


Start testing ......................
 Best epoch: 159
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt

test_auc	 0.6816926823545253
test_accuracy	 0.845002260446492
test_loss	 0.40528713968951546
