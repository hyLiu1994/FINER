nohup: ignoring input
	 max_iter 	 300
	 train_set 	 1
	 seed 	 224
	 optim 	 adam
	 batch_size 	 32
	 lr 	 1e-05
	 maxgradnorm 	 -1
	 final_fc_dim 	 512
	 d_model 	 256
	 d_ff 	 1024
	 dropout 	 0.05
	 n_block 	 1
	 n_head 	 8
	 kq_same 	 1
	 l2 	 1e-05
	 q_embed_dim 	 50
	 qa_embed_dim 	 256
	 memory_size 	 50
	 init_std 	 0.1
	 hidden_dim 	 512
	 lamda_r 	 0.1
	 lamda_w1 	 0.1
	 lamda_w2 	 0.1
	 model 	 akt_cid
	 dataset 	 Algebra08
	 n_question 	 424
	 seqlen 	 200
	 data_dir 	 data/Algebra08
	 data_name 	 Algebra08
	 save 	 Algebra08
	 load 	 Algebra08


train_q_data.shape (3255, 200)
train_qa_data.shape (3255, 200)
valid_q_data.shape (931, 200)
valid_qa_data.shape (931, 200)




/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 1
valid_auc	 0.5581531513274373 	train_auc	 0.5014995377824556
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8430177663094279
valid_loss	 0.4326612401683465 	train_loss	 0.5324257312661976
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 2
valid_auc	 0.6339776839327658 	train_auc	 0.5652050504618806
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523887812636447
valid_loss	 0.41099394486288227 	train_loss	 0.4167092049976701
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 3
valid_auc	 0.6637367615247501 	train_auc	 0.6344735627003768
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523887812636447
valid_loss	 0.4021849766091938 	train_loss	 0.40490569195787535
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 4
valid_auc	 0.6723398312556961 	train_auc	 0.6566811010456309
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523887812636447
valid_loss	 0.39851592484709747 	train_loss	 0.39889473270687464
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 5
valid_auc	 0.6769653245746369 	train_auc	 0.6665368518544845
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523872049785389
valid_loss	 0.39676384224140826 	train_loss	 0.3959743560238891
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 6
valid_auc	 0.6793926200562412 	train_auc	 0.6715788654618607
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523887812636447
valid_loss	 0.3955626003800309 	train_loss	 0.39425620246456056
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 7
valid_auc	 0.6811172312305764 	train_auc	 0.6746900898107525
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523887812636447
valid_loss	 0.39496181804185726 	train_loss	 0.3932411875794576
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 8
valid_auc	 0.6825834200531735 	train_auc	 0.6764037473807902
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523887812636447
valid_loss	 0.39473108896560033 	train_loss	 0.3926206793154963
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 9
valid_auc	 0.6836284455602931 	train_auc	 0.6786487368527391
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523887812636447
valid_loss	 0.39390678154455344 	train_loss	 0.3919385475854165
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 10
valid_auc	 0.6846295228382284 	train_auc	 0.6802500084810147
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523887812636447
valid_loss	 0.3939176996219342 	train_loss	 0.3913753705367719
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 11
valid_auc	 0.6854137822970573 	train_auc	 0.6812685930074122
valid_accuracy	 0.8503869917984125 	train_accuracy	 0.8523887812636447
valid_loss	 0.3936263975602771 	train_loss	 0.3909840068077667
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 12
valid_auc	 0.6859461503088701 	train_auc	 0.6821214532083903
valid_accuracy	 0.850359506585457 	train_accuracy	 0.8524013915444915
valid_loss	 0.39311465028148024 	train_loss	 0.3907200574085172
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 13
valid_auc	 0.6865353217302068 	train_auc	 0.6832047984365899
valid_accuracy	 0.8503540095428659 	train_accuracy	 0.8524108492551264
valid_loss	 0.3932789817182366 	train_loss	 0.3903715821784717
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 14
valid_auc	 0.6869640733214085 	train_auc	 0.683670335400095
valid_accuracy	 0.8503540095428659 	train_accuracy	 0.8524581378083017
valid_loss	 0.39297566368599085 	train_loss	 0.3901564750738077
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 15
valid_auc	 0.6872678789058343 	train_auc	 0.6845334126098903
valid_accuracy	 0.8504639503946877 	train_accuracy	 0.8524849346551009
valid_loss	 0.39262872063084137 	train_loss	 0.38988275148281876
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 16
valid_auc	 0.6874795073656154 	train_auc	 0.6854133751891235
valid_accuracy	 0.8505793882891005 	train_accuracy	 0.8525022737912652
valid_loss	 0.39268699005964247 	train_loss	 0.3895863409105116
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 17
valid_auc	 0.6877971422559798 	train_auc	 0.6859571470479972
valid_accuracy	 0.8505464060335539 	train_accuracy	 0.8525464097742287
valid_loss	 0.39244002947213674 	train_loss	 0.38940353254626736
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 18
valid_auc	 0.6879244661599874 	train_auc	 0.6865296047988607
valid_accuracy	 0.8505903823742826 	train_accuracy	 0.8525858169018746
valid_loss	 0.3922781484603658 	train_loss	 0.3891919740833953
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 19
valid_auc	 0.6882071332307934 	train_auc	 0.6869104098654386
valid_accuracy	 0.850612370544647 	train_accuracy	 0.8526126137486739
valid_loss	 0.3922112401051922 	train_loss	 0.3890578522244259
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 20
valid_auc	 0.6886095595616021 	train_auc	 0.6873506023646021
valid_accuracy	 0.8505409089909629 	train_accuracy	 0.8526472920210024
valid_loss	 0.39233281328348074 	train_loss	 0.3888962594163181
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 21
valid_auc	 0.6890687229193662 	train_auc	 0.6878539545555347
valid_accuracy	 0.850612370544647 	train_accuracy	 0.8526599023018492
valid_loss	 0.39213049286337254 	train_loss	 0.38875913338144824
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 22
valid_auc	 0.6890806099117252 	train_auc	 0.6882919823321012
valid_accuracy	 0.8506178675872381 	train_accuracy	 0.8527087671401302
valid_loss	 0.3920197847898815 	train_loss	 0.38859094636682784
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 23
valid_auc	 0.6893039232473505 	train_auc	 0.6887104211958122
valid_accuracy	 0.8506453528001935 	train_accuracy	 0.8527465979826703
valid_loss	 0.3920142182779349 	train_loss	 0.3884128876322962
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 24
valid_auc	 0.6896337316795151 	train_auc	 0.689271487148316
valid_accuracy	 0.850612370544647 	train_accuracy	 0.8528222596677506
valid_loss	 0.39197359007076676 	train_loss	 0.3882336001161784
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 25
valid_auc	 0.6900480288523618 	train_auc	 0.6892828097415095
valid_accuracy	 0.850612370544647 	train_accuracy	 0.8528301410932798
valid_loss	 0.39215128354226675 	train_loss	 0.3882302345681829
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 26
valid_auc	 0.6902888773987854 	train_auc	 0.69011892471129
valid_accuracy	 0.8506508498427846 	train_accuracy	 0.85286797193582
valid_loss	 0.391625716923294 	train_loss	 0.38797290054706507
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 27
valid_auc	 0.69014766885024 	train_auc	 0.6902445067423645
valid_accuracy	 0.8505299149057807 	train_accuracy	 0.852896345067725
valid_loss	 0.39169287415463877 	train_loss	 0.3879070241460407
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 28
valid_auc	 0.6905782222709811 	train_auc	 0.6904258677623522
valid_accuracy	 0.8506013764594648 	train_accuracy	 0.8529294470549478
valid_loss	 0.39140061748674887 	train_loss	 0.38782140680629124
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 29
valid_auc	 0.6909551791896462 	train_auc	 0.6908339013148164
valid_accuracy	 0.8505574001187362 	train_accuracy	 0.8529530913315353
valid_loss	 0.3917050443081227 	train_loss	 0.38767959581468575
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 30
valid_auc	 0.6910649632515137 	train_auc	 0.6913695617436617
valid_accuracy	 0.8505628971613272 	train_accuracy	 0.8529105316336777
valid_loss	 0.3912850423859324 	train_loss	 0.3875295576581438
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 31
valid_auc	 0.6911476082430736 	train_auc	 0.69175774986305
valid_accuracy	 0.8506508498427846 	train_accuracy	 0.8530492447229915
valid_loss	 0.3912845090763746 	train_loss	 0.38739926789267065
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 32
valid_auc	 0.6916776584463482 	train_auc	 0.6919692352531379
valid_accuracy	 0.850612370544647 	train_accuracy	 0.853025600446404
valid_loss	 0.3911431630095763 	train_loss	 0.3873037597951153
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 33
valid_auc	 0.691755680764839 	train_auc	 0.691898091976753
valid_accuracy	 0.8506178675872381 	train_accuracy	 0.8529830407485463
valid_loss	 0.39131080552963615 	train_loss	 0.3872972517940431
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 34
valid_auc	 0.6916917934208582 	train_auc	 0.6923838940179021
valid_accuracy	 0.8505189208205985 	train_accuracy	 0.8530287530166156
valid_loss	 0.391171383586673 	train_loss	 0.3871313500530715
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 35
valid_auc	 0.6921309465311631 	train_auc	 0.6926866924308903
valid_accuracy	 0.8506068735020559 	train_accuracy	 0.852926294484736
valid_loss	 0.39124314696583823 	train_loss	 0.3870672618806099
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 36
valid_auc	 0.692071213975958 	train_auc	 0.6932411418896216
valid_accuracy	 0.8506563468853756 	train_accuracy	 0.852956243901747
valid_loss	 0.39113282266083743 	train_loss	 0.3868911082164623
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 37
valid_auc	 0.692515361097958 	train_auc	 0.6933431264202711
valid_accuracy	 0.850612370544647 	train_accuracy	 0.8530949569910609
valid_loss	 0.3911196104249036 	train_loss	 0.3868072215549713
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 38
valid_auc	 0.6925140205025799 	train_auc	 0.6934177669025763
valid_accuracy	 0.8506563468853756 	train_accuracy	 0.8530066850251339
valid_loss	 0.3911636948748608 	train_loss	 0.3867695302023395
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 39
valid_auc	 0.6922342391140918 	train_auc	 0.6934531689639205
valid_accuracy	 0.8505848853316915 	train_accuracy	 0.8529625490421704
valid_loss	 0.3908261535018168 	train_loss	 0.38673855967930904
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 40
valid_auc	 0.6929565527112533 	train_auc	 0.6939430849160102
valid_accuracy	 0.8505244178631896 	train_accuracy	 0.8530996858463784
valid_loss	 0.3909291880658945 	train_loss	 0.38657058223519997
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 41
valid_auc	 0.6930328908837922 	train_auc	 0.6943322429148513
valid_accuracy	 0.8506453528001935 	train_accuracy	 0.8529530913315353
valid_loss	 0.3916887317523506 	train_loss	 0.3864709143280715
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 42
valid_auc	 0.6931877788727993 	train_auc	 0.694473265577291
valid_accuracy	 0.8506288616724202 	train_accuracy	 0.8531643135357179
valid_loss	 0.3906623148074457 	train_loss	 0.3863655890690378
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 43
valid_auc	 0.6930736326805378 	train_auc	 0.6946019657607352
valid_accuracy	 0.8506673409705579 	train_accuracy	 0.8531359404038127
valid_loss	 0.390703029874026 	train_loss	 0.38631111043645705
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 44
valid_auc	 0.6934315265205571 	train_auc	 0.6948571425574319
valid_accuracy	 0.8506453528001935 	train_accuracy	 0.8530634312889441
valid_loss	 0.39043315189045985 	train_loss	 0.38622046410955263
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 45
valid_auc	 0.6936643051316892 	train_auc	 0.6944978832540898
valid_accuracy	 0.8506068735020559 	train_accuracy	 0.8532005680931521
valid_loss	 0.3903503684476517 	train_loss	 0.3862875215789026
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 46
valid_auc	 0.6938203801692744 	train_auc	 0.6954829408444323
valid_accuracy	 0.8507113173112866 	train_accuracy	 0.8530476684378857
valid_loss	 0.39038552131204063 	train_loss	 0.3860035857288886
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 47
valid_auc	 0.6939463567090198 	train_auc	 0.695518243773251
valid_accuracy	 0.8506233646298291 	train_accuracy	 0.8530996858463784
valid_loss	 0.3905697643727163 	train_loss	 0.38597533168121595
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 48
valid_auc	 0.6938478263331819 	train_auc	 0.6956982833783971
valid_accuracy	 0.8507223113964687 	train_accuracy	 0.8531548558250828
valid_loss	 0.3905891943860064 	train_loss	 0.38588110303773104
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 49
valid_auc	 0.6939845111293728 	train_auc	 0.6956011769677723
valid_accuracy	 0.8506453528001935 	train_accuracy	 0.8531674661059295
valid_loss	 0.39084913403856414 	train_loss	 0.38590936800711456
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 50
valid_auc	 0.6943417188182632 	train_auc	 0.6959217009180986
valid_accuracy	 0.8507058202686955 	train_accuracy	 0.8531643135357179
valid_loss	 0.39014188538511735 	train_loss	 0.38581154472014006
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 51
valid_auc	 0.694529113246689 	train_auc	 0.6960446228009193
valid_accuracy	 0.8507113173112866 	train_accuracy	 0.8531721949612471
valid_loss	 0.39046540561046494 	train_loss	 0.3857361169395673
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 52
valid_auc	 0.6943236805724735 	train_auc	 0.6965894668609951
valid_accuracy	 0.8507168143538776 	train_accuracy	 0.8531564321101887
valid_loss	 0.3909430063285189 	train_loss	 0.38556092715632556
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 53
valid_auc	 0.6948981700459358 	train_auc	 0.6968892821946163
valid_accuracy	 0.8506838320983311 	train_accuracy	 0.8531658898208236
valid_loss	 0.39040506821992665 	train_loss	 0.38546865688689425
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 54
valid_auc	 0.694803732707647 	train_auc	 0.6965266616864895
valid_accuracy	 0.8507003232261043 	train_accuracy	 0.8531438218293419
valid_loss	 0.39107633655573903 	train_loss	 0.38556561762392505
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 55
valid_auc	 0.6947013920436261 	train_auc	 0.6969050978411653
valid_accuracy	 0.8507388025242419 	train_accuracy	 0.8531091435570134
valid_loss	 0.3902333178539998 	train_loss	 0.38540476124671447
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 56
valid_auc	 0.694952467068176 	train_auc	 0.6973822654097296
valid_accuracy	 0.8507827788649707 	train_accuracy	 0.8532242123697398
valid_loss	 0.390106332833726 	train_loss	 0.3852919893074088
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 57
valid_auc	 0.6949883643624464 	train_auc	 0.6974235065545482
valid_accuracy	 0.8507882759075618 	train_accuracy	 0.8532447040761156
valid_loss	 0.39047556496097513 	train_loss	 0.3852096636642203
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 58
valid_auc	 0.695334783399544 	train_auc	 0.6973420094190667
valid_accuracy	 0.8508377492908815 	train_accuracy	 0.8532841112037617
valid_loss	 0.3903486636109444 	train_loss	 0.38521121914908646
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 59
valid_auc	 0.6953326532197328 	train_auc	 0.6972282397294318
valid_accuracy	 0.8507333054816508 	train_accuracy	 0.8531816526718821
valid_loss	 0.3900715671249631 	train_loss	 0.3852613349375763
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 60
valid_auc	 0.695105801895083 	train_auc	 0.6978067979616263
valid_accuracy	 0.8509092108445656 	train_accuracy	 0.8531469743995536
valid_loss	 0.3901044444628768 	train_loss	 0.38506398818347576
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 61
valid_auc	 0.6953600445200503 	train_auc	 0.6981652236236219
valid_accuracy	 0.8509037138019745 	train_accuracy	 0.853290416344185
valid_loss	 0.39028040526406355 	train_loss	 0.38492008876574046
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 62
valid_auc	 0.6953220837847942 	train_auc	 0.6979486352090605
valid_accuracy	 0.85093119901493 	train_accuracy	 0.8532746534931266
valid_loss	 0.38980766231928055 	train_loss	 0.3849768271702368
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 63
valid_auc	 0.6955953892509027 	train_auc	 0.6982716577927149
valid_accuracy	 0.8508432463334726 	train_accuracy	 0.8532919926292909
valid_loss	 0.389696487993602 	train_loss	 0.3848938743037485
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 64
valid_auc	 0.6958921188572798 	train_auc	 0.6984378811180918
valid_accuracy	 0.8510356428241606 	train_accuracy	 0.8533361286122544
valid_loss	 0.3901328568451964 	train_loss	 0.3848021366982304
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 65
valid_auc	 0.6959325423977041 	train_auc	 0.6985971030015126
valid_accuracy	 0.8509696783130676 	train_accuracy	 0.8533613491739478
valid_loss	 0.38971371254434317 	train_loss	 0.38472438883258486
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 66
valid_auc	 0.6957022249292071 	train_auc	 0.6987233545523364
valid_accuracy	 0.8510851162074804 	train_accuracy	 0.8534511974249807
valid_loss	 0.38967605932990773 	train_loss	 0.38464505910090063
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 67
valid_auc	 0.6960004839472126 	train_auc	 0.6992506901891278
valid_accuracy	 0.8511071043778448 	train_accuracy	 0.8533440100377836
valid_loss	 0.3899415840411628 	train_loss	 0.3845378768481278
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 68
valid_auc	 0.6960924151357222 	train_auc	 0.6991926482633519
valid_accuracy	 0.8510136546537963 	train_accuracy	 0.8533503151782069
valid_loss	 0.38938337853293264 	train_loss	 0.3845194274974876
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 69
valid_auc	 0.6959324782714302 	train_auc	 0.6992339767711769
valid_accuracy	 0.8510246487389784 	train_accuracy	 0.85349690969305
valid_loss	 0.38950335149374526 	train_loss	 0.38446861629141643
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 70
valid_auc	 0.6962884973679618 	train_auc	 0.6990019381180846
valid_accuracy	 0.8510356428241606 	train_accuracy	 0.8533928748760646
valid_loss	 0.38963387879843336 	train_loss	 0.3845373763705266
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 71
valid_auc	 0.6963249197851628 	train_auc	 0.699280573185352
valid_accuracy	 0.8510741221222982 	train_accuracy	 0.8534291294334989
valid_loss	 0.3897670134038901 	train_loss	 0.38448436951550613
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 72
valid_auc	 0.6965283197752535 	train_auc	 0.6994479378282333
valid_accuracy	 0.8511620748037556 	train_accuracy	 0.8534291294334989
valid_loss	 0.38956013467964584 	train_loss	 0.3843660361504515
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 73
valid_auc	 0.6962558523445408 	train_auc	 0.6999666276968612
valid_accuracy	 0.8511730688889377 	train_accuracy	 0.8534921808377325
valid_loss	 0.3895830073272477 	train_loss	 0.38421456436112883
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 74
valid_auc	 0.6964572944644928 	train_auc	 0.6997786717967567
valid_accuracy	 0.8511071043778448 	train_accuracy	 0.8534669602760391
valid_loss	 0.38935582815641445 	train_loss	 0.38426007416450203
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 75
valid_auc	 0.696662692938029 	train_auc	 0.7000195429603884
valid_accuracy	 0.8511510807185734 	train_accuracy	 0.8534858756973092
valid_loss	 0.38975088725581564 	train_loss	 0.38417955988671315
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 76
valid_auc	 0.6966645345496085 	train_auc	 0.7000510355568146
valid_accuracy	 0.8510301457815695 	train_accuracy	 0.8535016385483675
valid_loss	 0.38989640815673277 	train_loss	 0.38414106774551365
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 77
valid_auc	 0.6965980625605396 	train_auc	 0.7000414855005695
valid_accuracy	 0.8511730688889377 	train_accuracy	 0.8534921808377325
valid_loss	 0.3896594898931089 	train_loss	 0.3841912944536541
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 78
valid_auc	 0.6964142423406076 	train_auc	 0.7005235097532307
valid_accuracy	 0.8512225422722576 	train_accuracy	 0.853536316820696
valid_loss	 0.38948348932863697 	train_loss	 0.38396940333577806
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 79
valid_auc	 0.6965475885329847 	train_auc	 0.700344379945723
valid_accuracy	 0.8512170452296665 	train_accuracy	 0.8534937571228384
valid_loss	 0.3901025079023046 	train_loss	 0.3840170244822114
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 80
valid_auc	 0.6965438920095615 	train_auc	 0.7007166835491038
valid_accuracy	 0.8511455836759824 	train_accuracy	 0.8534622314207215
valid_loss	 0.3897969630037291 	train_loss	 0.38391378661542985
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 81
valid_auc	 0.6968643404995617 	train_auc	 0.7011504660246383
valid_accuracy	 0.851123595505618 	train_accuracy	 0.8535867579440829
valid_loss	 0.38925888836337336 	train_loss	 0.38380133363930613
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 82
valid_auc	 0.6968083394997258 	train_auc	 0.700795416595286
valid_accuracy	 0.8511620748037556 	train_accuracy	 0.8535016385483675
valid_loss	 0.3891098960819176 	train_loss	 0.38387708517961355
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 83
valid_auc	 0.6964001947678338 	train_auc	 0.7010769130774803
valid_accuracy	 0.8512280393148486 	train_accuracy	 0.8534685365611449
valid_loss	 0.38958388398797156 	train_loss	 0.38376916812094114
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 84
valid_auc	 0.6970199869598842 	train_auc	 0.7010040227186938
valid_accuracy	 0.851189560016711 	train_accuracy	 0.8535505033866485
valid_loss	 0.38998144794295 	train_loss	 0.383755377856132
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 85
valid_auc	 0.6972847822757073 	train_auc	 0.7007341601887626
valid_accuracy	 0.8511126014204358 	train_accuracy	 0.8535741476632361
valid_loss	 0.3895864703064955 	train_loss	 0.38383988383584594
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 86
valid_auc	 0.6965387600076255 	train_auc	 0.7014559259385847
valid_accuracy	 0.8511785659315289 	train_accuracy	 0.8534685365611449
valid_loss	 0.3894782789308758 	train_loss	 0.3836553195806593
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 87
valid_auc	 0.6969681248360079 	train_auc	 0.7013811975107213
valid_accuracy	 0.8512665186129862 	train_accuracy	 0.8534511974249807
valid_loss	 0.38934897592467715 	train_loss	 0.3836786361325308
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 88
valid_auc	 0.6972582195105967 	train_auc	 0.7015184500269616
valid_accuracy	 0.8512390334000308 	train_accuracy	 0.8536892164759624
valid_loss	 0.38974290692396263 	train_loss	 0.38355107949246864
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 89
valid_auc	 0.6972149849830885 	train_auc	 0.7011015482012085
valid_accuracy	 0.8513544712944436 	train_accuracy	 0.8535930630845062
valid_loss	 0.3895602096118464 	train_loss	 0.3837374363182453
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 90
valid_auc	 0.6972092197935758 	train_auc	 0.7014727579304896
valid_accuracy	 0.8511510807185734 	train_accuracy	 0.8536482330632106
valid_loss	 0.39032806039180407 	train_loss	 0.3835455509898592
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 91
valid_auc	 0.6973657545215419 	train_auc	 0.7016959454313884
valid_accuracy	 0.8511400866333912 	train_accuracy	 0.8536970979014916
valid_loss	 0.3893672424018508 	train_loss	 0.3834825685886933
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 92
valid_auc	 0.6972960396430601 	train_auc	 0.70198295634791
valid_accuracy	 0.8512060511444842 	train_accuracy	 0.8536955216163858
valid_loss	 0.38895532764402085 	train_loss	 0.3834012628304067
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 93
valid_auc	 0.6971030409345678 	train_auc	 0.7018422819427717
valid_accuracy	 0.8512060511444842 	train_accuracy	 0.8536482330632106
valid_loss	 0.389776233144137 	train_loss	 0.3834399799382309
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 94
valid_auc	 0.6972971649404116 	train_auc	 0.7022120205710471
valid_accuracy	 0.8511785659315289 	train_accuracy	 0.8536419279227873
valid_loss	 0.3890755352182424 	train_loss	 0.3832857604062502
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 95
valid_auc	 0.6974585469021573 	train_auc	 0.7022921162451351
valid_accuracy	 0.8512060511444842 	train_accuracy	 0.8536986741865975
valid_loss	 0.3893408833692884 	train_loss	 0.38326905188399746
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 96
valid_auc	 0.6975347543283491 	train_auc	 0.70233378157645
valid_accuracy	 0.8511180984630269 	train_accuracy	 0.853742810169561
valid_loss	 0.38942087435996564 	train_loss	 0.3832693467869209
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 97
valid_auc	 0.6974569285450121 	train_auc	 0.7024011641459479
valid_accuracy	 0.8511180984630269 	train_accuracy	 0.8536955216163858
valid_loss	 0.3895723958530017 	train_loss	 0.383230024776368
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 98
valid_auc	 0.6971386185474883 	train_auc	 0.7020025164293939
valid_accuracy	 0.8511016073352536 	train_accuracy	 0.8536277413568347
valid_loss	 0.3892793472359516 	train_loss	 0.38335234545513763
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 99
valid_auc	 0.6974697507121961 	train_auc	 0.7026281255253265
valid_accuracy	 0.8511071043778448 	train_accuracy	 0.8537711833014661
valid_loss	 0.38935069509864073 	train_loss	 0.38313059375736586
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 100
valid_auc	 0.6971885839586905 	train_auc	 0.7029537256138843
valid_accuracy	 0.8511345895908001 	train_accuracy	 0.8537160133227617
valid_loss	 0.3890904523887585 	train_loss	 0.38306539113819865
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 101
valid_auc	 0.6976409822320815 	train_auc	 0.7028565242473337
valid_accuracy	 0.8511675718463466 	train_accuracy	 0.8537349287440318
valid_loss	 0.38942399561736024 	train_loss	 0.38301487034567017
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 102
valid_auc	 0.6976450571005196 	train_auc	 0.7028520243119691
valid_accuracy	 0.8511730688889377 	train_accuracy	 0.853821624424853
valid_loss	 0.3898480886835215 	train_loss	 0.38305266178717656
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 103
valid_auc	 0.6977333233537334 	train_auc	 0.7028843564641227
valid_accuracy	 0.8512280393148486 	train_accuracy	 0.8537633018759369
valid_loss	 0.38872925731990005 	train_loss	 0.38305407671149944
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 104
valid_auc	 0.6973541720102309 	train_auc	 0.7027094301521578
valid_accuracy	 0.8512170452296665 	train_accuracy	 0.8537774884418895
valid_loss	 0.3899772361455394 	train_loss	 0.38315177795042266
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 105
valid_auc	 0.6973670542661085 	train_auc	 0.7031783601336942
valid_accuracy	 0.8511730688889377 	train_accuracy	 0.853791675007842
valid_loss	 0.3894530614645838 	train_loss	 0.3829267139045837
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 106
valid_auc	 0.6979845155868615 	train_auc	 0.7032279648843076
valid_accuracy	 0.8512775126981684 	train_accuracy	 0.8537664544461486
valid_loss	 0.38899917330016626 	train_loss	 0.3829063905464454
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 107
valid_auc	 0.6978992390430315 	train_auc	 0.7032708966138872
valid_accuracy	 0.851129092548209 	train_accuracy	 0.8538405398461231
valid_loss	 0.3896394247854031 	train_loss	 0.3828501108742886
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 108
valid_auc	 0.6975850820529981 	train_auc	 0.7035984055762372
valid_accuracy	 0.8513599683370346 	train_accuracy	 0.8537806410121012
valid_loss	 0.38920818854403916 	train_loss	 0.38278450603028574
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 109
valid_auc	 0.6977077606022359 	train_auc	 0.7032598349347362
valid_accuracy	 0.851189560016711 	train_accuracy	 0.8537554204504078
valid_loss	 0.38907567101095714 	train_loss	 0.3828547285330711
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 110
valid_auc	 0.6978383871280929 	train_auc	 0.7036809276176221
valid_accuracy	 0.8512280393148486 	train_accuracy	 0.8538168955695354
valid_loss	 0.3895249767306522 	train_loss	 0.3827670637875514
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 111
valid_auc	 0.6975628118293993 	train_auc	 0.7036279073269366
valid_accuracy	 0.851315991996306 	train_accuracy	 0.8538232007099588
valid_loss	 0.38907882939727023 	train_loss	 0.38272112796263874
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 112
valid_auc	 0.6978758684600767 	train_auc	 0.7033634415460169
valid_accuracy	 0.8512830097407594 	train_accuracy	 0.8537900987227361
valid_loss	 0.3894116835054499 	train_loss	 0.3828209469621816
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 113
valid_auc	 0.6980193276033251 	train_auc	 0.703652573513506
valid_accuracy	 0.8513104949537149 	train_accuracy	 0.8537885224376304
valid_loss	 0.38877615111675184 	train_loss	 0.3827805846999933
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 114
valid_auc	 0.698103055022635 	train_auc	 0.7038121731076464
valid_accuracy	 0.8512335363574397 	train_accuracy	 0.8538862521141924
valid_loss	 0.3892211548269914 	train_loss	 0.3826967063361157
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 115
valid_auc	 0.698104706749193 	train_auc	 0.7037762092196261
valid_accuracy	 0.8512060511444842 	train_accuracy	 0.8539761003652253
valid_loss	 0.389305728717821 	train_loss	 0.38265025290697474
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 116
valid_auc	 0.6977686122796698 	train_auc	 0.7040131459278597
valid_accuracy	 0.851315991996306 	train_accuracy	 0.8539020149652508
valid_loss	 0.38930250956677226 	train_loss	 0.3825956358350512
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 117
valid_auc	 0.6981307730106915 	train_auc	 0.7039169949020114
valid_accuracy	 0.8513104949537149 	train_accuracy	 0.85390989639078
valid_loss	 0.3893084391365806 	train_loss	 0.3825701567515456
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 118
valid_auc	 0.6980118269668415 	train_auc	 0.7041192651240882
valid_accuracy	 0.8512005541018932 	train_accuracy	 0.8538894046844041
valid_loss	 0.39005045560268 	train_loss	 0.3825532969386372
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 119
valid_auc	 0.6979850290720606 	train_auc	 0.7042102722974756
valid_accuracy	 0.8511455836759824 	train_accuracy	 0.8537554204504078
valid_loss	 0.3895568076906213 	train_loss	 0.38255973755652606
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 120
valid_auc	 0.6978660180706704 	train_auc	 0.7047021817019644
valid_accuracy	 0.8513049979111238 	train_accuracy	 0.853900438680145
valid_loss	 0.38882840391182044 	train_loss	 0.38230825093982995
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 121
valid_auc	 0.6977840556676685 	train_auc	 0.7046070250523617
valid_accuracy	 0.8512060511444842 	train_accuracy	 0.8539256592418384
valid_loss	 0.38915375770520555 	train_loss	 0.3823645998460452
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 122
valid_auc	 0.6981505642788013 	train_auc	 0.7044686949537216
valid_accuracy	 0.8512610215703952 	train_accuracy	 0.8538988623950391
valid_loss	 0.3892414605492533 	train_loss	 0.38236397101383973
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 123
valid_auc	 0.6980881240510644 	train_auc	 0.7047664930589358
valid_accuracy	 0.8513269860814882 	train_accuracy	 0.8538499975567581
valid_loss	 0.38903839958163583 	train_loss	 0.38232335903670045
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 124
valid_auc	 0.6982924834414614 	train_auc	 0.7047880236758275
valid_accuracy	 0.851381956507399 	train_accuracy	 0.853979252935437
valid_loss	 0.3889360845005188 	train_loss	 0.38226607078886476
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 125
valid_auc	 0.6982615309954096 	train_auc	 0.7047407196390728
valid_accuracy	 0.851123595505618 	train_accuracy	 0.8540517620503055
valid_loss	 0.3893634650566814 	train_loss	 0.38227481930568
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 126
valid_auc	 0.6983333215463702 	train_auc	 0.7050701331702567
valid_accuracy	 0.8513654653796258 	train_accuracy	 0.8537900987227361
valid_loss	 0.3887919005757181 	train_loss	 0.3822159438588346
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 127
valid_auc	 0.6983310316446363 	train_auc	 0.7051110411251279
valid_accuracy	 0.8511785659315289 	train_accuracy	 0.8540107786375537
valid_loss	 0.3894441060357989 	train_loss	 0.38217268212486066
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 128
valid_auc	 0.6977802667549102 	train_auc	 0.7051976750138385
valid_accuracy	 0.8512445304426218 	train_accuracy	 0.8540028972120245
valid_loss	 0.3893689346034167 	train_loss	 0.3821165815963563
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 129
valid_auc	 0.698324590041688 	train_auc	 0.7051513816154077
valid_accuracy	 0.8512555245278041 	train_accuracy	 0.8539303880971559
valid_loss	 0.3886778999867104 	train_loss	 0.3821261288464372
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 130
valid_auc	 0.6983625618209135 	train_auc	 0.705537433804076
valid_accuracy	 0.8512940038259417 	train_accuracy	 0.8540044734971304
valid_loss	 0.388879908367532 	train_loss	 0.38200289351335986
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 131
valid_auc	 0.6984222367812245 	train_auc	 0.7054832713763639
valid_accuracy	 0.8512115481870753 	train_accuracy	 0.8540155074928713
valid_loss	 0.3896803255091569 	train_loss	 0.3819804562707175
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 132
valid_auc	 0.6983717976668631 	train_auc	 0.7057697389893787
valid_accuracy	 0.8513379801666703 	train_accuracy	 0.854076982611999
valid_loss	 0.3893276934050706 	train_loss	 0.3819168636856133
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 133
valid_auc	 0.6981727029247866 	train_auc	 0.7056042960759216
valid_accuracy	 0.8512115481870753 	train_accuracy	 0.8539524560886377
valid_loss	 0.38874380019131227 	train_loss	 0.381993054210071
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 134
valid_auc	 0.698581838170103 	train_auc	 0.7053271204388784
valid_accuracy	 0.8512940038259417 	train_accuracy	 0.8540423043396705
valid_loss	 0.3890043579743317 	train_loss	 0.3820560416015984
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 135
valid_auc	 0.6982275045257991 	train_auc	 0.706174694091852
valid_accuracy	 0.8512720156555773 	train_accuracy	 0.8540423043396705
valid_loss	 0.38930247971241766 	train_loss	 0.38186421301678125
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 136
valid_auc	 0.6981088515627705 	train_auc	 0.7059779772856976
valid_accuracy	 0.8513049979111238 	train_accuracy	 0.8540596434758347
valid_loss	 0.3887442942132703 	train_loss	 0.381816808772815
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 137
valid_auc	 0.6985714726329644 	train_auc	 0.7054872131679638
valid_accuracy	 0.8513324831240793 	train_accuracy	 0.8539634900843786
valid_loss	 0.38879833223466254 	train_loss	 0.38201961157407816
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 138
valid_auc	 0.6984883648634624 	train_auc	 0.7058376274507162
valid_accuracy	 0.8512720156555773 	train_accuracy	 0.8541085083141158
valid_loss	 0.3890640483579331 	train_loss	 0.3818460740975243
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 139
valid_auc	 0.6987019054737242 	train_auc	 0.7061114703391443
valid_accuracy	 0.8511071043778448 	train_accuracy	 0.8539997446418128
valid_loss	 0.3887001970249366 	train_loss	 0.381767983027346
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 140
valid_auc	 0.6984129296838595 	train_auc	 0.7058410530422735
valid_accuracy	 0.8513929505925812 	train_accuracy	 0.8539902869311778
valid_loss	 0.38891314166069557 	train_loss	 0.381894579525559
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 141
valid_auc	 0.6982304519593433 	train_auc	 0.7064996219453771
valid_accuracy	 0.8513929505925812 	train_accuracy	 0.8540817114673165
valid_loss	 0.38904338992266446 	train_loss	 0.3816469875282044
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 142
valid_auc	 0.6984632215452962 	train_auc	 0.7066552754923283
valid_accuracy	 0.8513489742518525 	train_accuracy	 0.8541573731523968
valid_loss	 0.3893973947260089 	train_loss	 0.3816141683042256
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 143
valid_auc	 0.6983670802294116 	train_auc	 0.7063588501257472
valid_accuracy	 0.8511950570593021 	train_accuracy	 0.8541542205821852
valid_loss	 0.3889363510590456 	train_loss	 0.38171385837123833
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 144
valid_auc	 0.6984157892406583 	train_auc	 0.7064065790895301
valid_accuracy	 0.8513709624222169 	train_accuracy	 0.8540454569098822
valid_loss	 0.38984073212520287 	train_loss	 0.3816736502208108
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 145
valid_auc	 0.6986153778737949 	train_auc	 0.7066198783086204
valid_accuracy	 0.8513324831240793 	train_accuracy	 0.8540722537566815
valid_loss	 0.38921784377121804 	train_loss	 0.3816255391597108
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 146
valid_auc	 0.6985558127594158 	train_auc	 0.7063233293127216
valid_accuracy	 0.8514204358055366 	train_accuracy	 0.8539051675354625
valid_loss	 0.38943180153651225 	train_loss	 0.3817132606665899
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 147
valid_auc	 0.6983874546903551 	train_auc	 0.7065398602817617
valid_accuracy	 0.851123595505618 	train_accuracy	 0.8540911691779516
valid_loss	 0.3886696543686464 	train_loss	 0.38160399604688605
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 148
valid_auc	 0.6984874631768024 	train_auc	 0.706719114301139
valid_accuracy	 0.85118406297412 	train_accuracy	 0.8539650663694843
valid_loss	 0.3893674843848956 	train_loss	 0.3815448865899774
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 149
valid_auc	 0.6983777433599612 	train_auc	 0.7064954409521279
valid_accuracy	 0.8511071043778448 	train_accuracy	 0.854095898033269
valid_loss	 0.3887517765525706 	train_loss	 0.38161438680108184
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 150
valid_auc	 0.6987403497685851 	train_auc	 0.7069480728849444
valid_accuracy	 0.85118406297412 	train_accuracy	 0.8540139312077654
valid_loss	 0.38890429893365563 	train_loss	 0.38145386052018454
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 151
valid_auc	 0.6987067218318906 	train_auc	 0.7071132466200241
valid_accuracy	 0.8512940038259417 	train_accuracy	 0.854223577126842
valid_loss	 0.3891709281265849 	train_loss	 0.38142953291209153
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 152
valid_auc	 0.6981045321832257 	train_auc	 0.7070902103044806
valid_accuracy	 0.8514809032740386 	train_accuracy	 0.8542030854204662
valid_loss	 0.3892429965373713 	train_loss	 0.3814094093424521
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 153
valid_auc	 0.698798637345089 	train_auc	 0.7068639053719965
valid_accuracy	 0.8513489742518525 	train_accuracy	 0.8540060497822363
valid_loss	 0.3892783814676398 	train_loss	 0.38148267875196146
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 154
valid_auc	 0.6985008173545536 	train_auc	 0.7070878762370689
valid_accuracy	 0.8512445304426218 	train_accuracy	 0.8541400340162326
valid_loss	 0.38902733984270704 	train_loss	 0.3813891165198136
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 155
valid_auc	 0.6985442802428478 	train_auc	 0.7071793491950932
valid_accuracy	 0.8512555245278041 	train_accuracy	 0.8542125431311012
valid_loss	 0.39006018720264624 	train_loss	 0.38135395535228644
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 156
valid_auc	 0.6987328827390191 	train_auc	 0.7071544655686359
valid_accuracy	 0.851250027485213 	train_accuracy	 0.8541416103013384
valid_loss	 0.38876928698783403 	train_loss	 0.38137154289370984
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 157
valid_auc	 0.6986892761603709 	train_auc	 0.7071892233870497
valid_accuracy	 0.8514094417203545 	train_accuracy	 0.8541510680119735
valid_loss	 0.3899726429639628 	train_loss	 0.38135406153299634
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 158
valid_auc	 0.6988099798578828 	train_auc	 0.7071960137576917
valid_accuracy	 0.8512830097407594 	train_accuracy	 0.8542377636927947
valid_loss	 0.3887035203606897 	train_loss	 0.38130028691179985
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 159
valid_auc	 0.6986433683985147 	train_auc	 0.7075466586025557
valid_accuracy	 0.8513324831240793 	train_accuracy	 0.8541116608843274
valid_loss	 0.38947250057119576 	train_loss	 0.3812412434642223
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 160
valid_auc	 0.6986059782683426 	train_auc	 0.707469704511264
valid_accuracy	 0.8512995008685327 	train_accuracy	 0.8542472214034297
valid_loss	 0.38881530261170955 	train_loss	 0.3811923713851906
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 161
valid_auc	 0.6987545666822227 	train_auc	 0.7075482121790576
valid_accuracy	 0.851315991996306 	train_accuracy	 0.8542125431311012
valid_loss	 0.38919782862274616 	train_loss	 0.3812433796786803
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 162
valid_auc	 0.6984681199613423 	train_auc	 0.7080915452678949
valid_accuracy	 0.8512280393148486 	train_accuracy	 0.8541494917268676
valid_loss	 0.3892805818791809 	train_loss	 0.3810239204152659
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 163
valid_auc	 0.6985819108465464 	train_auc	 0.7075207843518809
valid_accuracy	 0.851321489038897 	train_accuracy	 0.8542409162630064
valid_loss	 0.38875166383404125 	train_loss	 0.38118543192710946
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 164
valid_auc	 0.698732859226052 	train_auc	 0.7079975609097741
valid_accuracy	 0.8513489742518525 	train_accuracy	 0.8541542205821852
valid_loss	 0.3897469478910946 	train_loss	 0.38102712327623306
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 165
valid_auc	 0.6985302261386941 	train_auc	 0.7079157268619387
valid_accuracy	 0.8512885067833506 	train_accuracy	 0.8541699834332436
valid_loss	 0.38936198910158915 	train_loss	 0.3810605671692724
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 166
valid_auc	 0.6988074492451177 	train_auc	 0.7078793303947282
valid_accuracy	 0.8512170452296665 	train_accuracy	 0.8542472214034297
valid_loss	 0.38870342927907897 	train_loss	 0.3810348919189432
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 167
valid_auc	 0.6987657878301059 	train_auc	 0.7078507131845957
valid_accuracy	 0.8512390334000308 	train_accuracy	 0.854253526543853
valid_loss	 0.3886119379219748 	train_loss	 0.3810479071135682
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 168
valid_auc	 0.698505690713852 	train_auc	 0.7079624445159821
valid_accuracy	 0.85118406297412 	train_accuracy	 0.854283475960864
valid_loss	 0.3886813977278334 	train_loss	 0.3810362211112269
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 169
valid_auc	 0.6989768157592088 	train_auc	 0.708108398093428
valid_accuracy	 0.8511180984630269 	train_accuracy	 0.8543055439523457
valid_loss	 0.38860092963170695 	train_loss	 0.38101792380318417
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 170
valid_auc	 0.6984948838929486 	train_auc	 0.7084082271318245
valid_accuracy	 0.8511510807185734 	train_accuracy	 0.854283475960864
valid_loss	 0.38892261866185557 	train_loss	 0.3808610811578035
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 171
valid_auc	 0.6987731716142684 	train_auc	 0.708591801729761
valid_accuracy	 0.8513929505925812 	train_accuracy	 0.8542945099566048
valid_loss	 0.3896679030382886 	train_loss	 0.38080457947654733
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 172
valid_auc	 0.6988609005130589 	train_auc	 0.708278391407024
valid_accuracy	 0.8514094417203545 	train_accuracy	 0.8542030854204662
valid_loss	 0.3891386861325892 	train_loss	 0.38090424630325864
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 173
valid_auc	 0.6986804384910802 	train_auc	 0.7086210366619112
valid_accuracy	 0.8512775126981684 	train_accuracy	 0.8542283059821596
valid_loss	 0.38892658736525476 	train_loss	 0.38074169400610086
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 174
valid_auc	 0.6986815393254457 	train_auc	 0.7087738982064506
valid_accuracy	 0.8513324831240793 	train_accuracy	 0.8542204245566304
valid_loss	 0.38991205283336744 	train_loss	 0.38077583526539244
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 175
valid_auc	 0.6987954847074687 	train_auc	 0.709096814400368
valid_accuracy	 0.8512225422722576 	train_accuracy	 0.8542882048161815
valid_loss	 0.3888939691551203 	train_loss	 0.38067635728497623
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 176
valid_auc	 0.6980123171765785 	train_auc	 0.7086525807894778
valid_accuracy	 0.8512060511444842 	train_accuracy	 0.8543890870629552
valid_loss	 0.3887453204885089 	train_loss	 0.38072063437658005
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 177
valid_auc	 0.6985704381811674 	train_auc	 0.7088460389298196
valid_accuracy	 0.8514204358055366 	train_accuracy	 0.8543039676672399
valid_loss	 0.3894634929954014 	train_loss	 0.3807151701271923
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 178
valid_auc	 0.6986421942939436 	train_auc	 0.7087866443091383
valid_accuracy	 0.8512225422722576 	train_accuracy	 0.854332340799145
valid_loss	 0.38906675531743573 	train_loss	 0.38073457520122433
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 179
valid_auc	 0.6988603800214704 	train_auc	 0.7085124572610185
valid_accuracy	 0.8514094417203545 	train_accuracy	 0.8544095787693312
valid_loss	 0.38900741947475276 	train_loss	 0.3808023779646455
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 180
valid_auc	 0.6987892538899573 	train_auc	 0.7087812357511127
valid_accuracy	 0.8513599683370346 	train_accuracy	 0.8543544087906267
valid_loss	 0.38902118389323664 	train_loss	 0.38067267559605694
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 181
valid_auc	 0.6986778746276545 	train_auc	 0.7090319675105368
valid_accuracy	 0.8512170452296665 	train_accuracy	 0.8544773590288822
valid_loss	 0.38867460183813746 	train_loss	 0.3805752388300507
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 182
valid_auc	 0.6984939679560056 	train_auc	 0.7088944391017641
valid_accuracy	 0.8513709624222169 	train_accuracy	 0.8543559850757326
valid_loss	 0.3890235264983897 	train_loss	 0.38062365534165454
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 183
valid_auc	 0.6988722695076288 	train_auc	 0.70917153084149
valid_accuracy	 0.8512005541018932 	train_accuracy	 0.854371747926791
valid_loss	 0.3892055848791433 	train_loss	 0.38057319979825255
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 184
valid_auc	 0.6986266093531335 	train_auc	 0.7092168050114279
valid_accuracy	 0.8513269860814882 	train_accuracy	 0.8544221890501779
valid_loss	 0.3895866804591125 	train_loss	 0.3805585348328673
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 185
valid_auc	 0.699007263151479 	train_auc	 0.7091264080362546
valid_accuracy	 0.8514149387629455 	train_accuracy	 0.8544852404544114
valid_loss	 0.38939791712485633 	train_loss	 0.3805922176512812
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 186
valid_auc	 0.6989144400140026 	train_auc	 0.7095138036483701
valid_accuracy	 0.8513654653796258 	train_accuracy	 0.8544962744501523
valid_loss	 0.3895298938248569 	train_loss	 0.3804626829375944
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 187
valid_auc	 0.6987459996495576 	train_auc	 0.7094899886981832
valid_accuracy	 0.8511950570593021 	train_accuracy	 0.8544095787693312
valid_loss	 0.38871095896008195 	train_loss	 0.3803833167299781
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 188
valid_auc	 0.6984645513342094 	train_auc	 0.7094924030096224
valid_accuracy	 0.8511620748037556 	train_accuracy	 0.8544001210586961
valid_loss	 0.38879885460801217 	train_loss	 0.38047635071802294
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 189
valid_auc	 0.6985727359205569 	train_auc	 0.709556120756292
valid_accuracy	 0.851250027485213 	train_accuracy	 0.8544631724629297
valid_loss	 0.3886513179293226 	train_loss	 0.38040894093989724
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 190
valid_auc	 0.6989529294347598 	train_auc	 0.7094832575799601
valid_accuracy	 0.851250027485213 	train_accuracy	 0.854460019892718
valid_loss	 0.3900478398050161 	train_loss	 0.38041300297700154
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 191
valid_auc	 0.6983300677317402 	train_auc	 0.709354526975469
valid_accuracy	 0.8512115481870753 	train_accuracy	 0.8545214950118458
valid_loss	 0.38935006832239794 	train_loss	 0.38044486263250765
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 192
valid_auc	 0.6988793286228426 	train_auc	 0.7097457472171775
valid_accuracy	 0.8510796191648893 	train_accuracy	 0.8544032736289078
valid_loss	 0.3886488282197374 	train_loss	 0.38036873170029717
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 193
valid_auc	 0.6989554757228362 	train_auc	 0.7097754709398194
valid_accuracy	 0.8510411398667517 	train_accuracy	 0.8544190364799662
valid_loss	 0.3891543172311028 	train_loss	 0.3803609393755562
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 194
valid_auc	 0.6983934060835664 	train_auc	 0.709894933472706
valid_accuracy	 0.8513764594648079 	train_accuracy	 0.8545719361352326
valid_loss	 0.3896264912998204 	train_loss	 0.38025180248052864
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 195
valid_auc	 0.6988661676551791 	train_auc	 0.7099889575233325
valid_accuracy	 0.8512610215703952 	train_accuracy	 0.854480511599094
valid_loss	 0.38936561211829995 	train_loss	 0.38031539897130595
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 196
valid_auc	 0.6988372216489808 	train_auc	 0.7099165837990338
valid_accuracy	 0.8511345895908001 	train_accuracy	 0.8544647487480356
valid_loss	 0.3890269099310474 	train_loss	 0.38026933394224455
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 197
valid_auc	 0.6986844385455324 	train_auc	 0.7098165504413536
valid_accuracy	 0.8513489742518525 	train_accuracy	 0.8544883930246232
valid_loss	 0.389849045324784 	train_loss	 0.38030064133853986
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 198
valid_auc	 0.6987931724802914 	train_auc	 0.7099379316131789
valid_accuracy	 0.8511400866333912 	train_accuracy	 0.8544568673225064
valid_loss	 0.3894375457015087 	train_loss	 0.38023876344741164
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 199
valid_auc	 0.6980487942198641 	train_auc	 0.7101434291617619
valid_accuracy	 0.851250027485213 	train_accuracy	 0.8544080024842253
valid_loss	 0.38888830120541945 	train_loss	 0.3801880956732783
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 200
valid_auc	 0.6988379444945885 	train_auc	 0.710392780806856
valid_accuracy	 0.8512775126981684 	train_accuracy	 0.8544946981650465
valid_loss	 0.3889176914993164 	train_loss	 0.38003963267290664
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 201
valid_auc	 0.6989717609463062 	train_auc	 0.7100957475327725
valid_accuracy	 0.8513489742518525 	train_accuracy	 0.8542882048161815
valid_loss	 0.3890039663388211 	train_loss	 0.38022350053852066
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 202
valid_auc	 0.6986013153382238 	train_auc	 0.7103743355812067
valid_accuracy	 0.8511675718463466 	train_accuracy	 0.8545514444288568
valid_loss	 0.38908548830855527 	train_loss	 0.3800630263647678
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 203
valid_auc	 0.6986638081732557 	train_auc	 0.7104214471488058
valid_accuracy	 0.8510136546537963 	train_accuracy	 0.854548291858645
valid_loss	 0.388981329660016 	train_loss	 0.3801234479340768
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 204
valid_auc	 0.6986381679952203 	train_auc	 0.7105602885501049
valid_accuracy	 0.8512995008685327 	train_accuracy	 0.8545041558756815
valid_loss	 0.38866194963030015 	train_loss	 0.38006004065157845
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 205
valid_auc	 0.6989744259867412 	train_auc	 0.7102156251386775
valid_accuracy	 0.8511675718463466 	train_accuracy	 0.8545829701309735
valid_loss	 0.38872029491079574 	train_loss	 0.3800763843122349
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 206
valid_auc	 0.6984808495016864 	train_auc	 0.7105162288424672
valid_accuracy	 0.8512335363574397 	train_accuracy	 0.8545467155735392
valid_loss	 0.38958253213218574 	train_loss	 0.37999533273997677
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 207
valid_auc	 0.6992759827577493 	train_auc	 0.7107709751433366
valid_accuracy	 0.851063128037116 	train_accuracy	 0.8546066144075611
valid_loss	 0.38896906319755875 	train_loss	 0.3799152713948081
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 208
valid_auc	 0.6987265839951584 	train_auc	 0.7110543256308525
valid_accuracy	 0.8512170452296665 	train_accuracy	 0.8544868167395173
valid_loss	 0.38915339745615296 	train_loss	 0.37984892509183077
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 209
valid_auc	 0.6987420161016831 	train_auc	 0.7107193251228447
valid_accuracy	 0.8512665186129862 	train_accuracy	 0.854647597820313
valid_loss	 0.3900928003385353 	train_loss	 0.379939883217388
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 210
valid_auc	 0.6985000029508772 	train_auc	 0.7104264489672648
valid_accuracy	 0.8512390334000308 	train_accuracy	 0.854510461016105
valid_loss	 0.3892141788325126 	train_loss	 0.3800067367962339
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 211
valid_auc	 0.6988010718871958 	train_auc	 0.7108278832260423
valid_accuracy	 0.8513434772092614 	train_accuracy	 0.8547232595053933
valid_loss	 0.3896563445105196 	train_loss	 0.3798481418678643
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 212
valid_auc	 0.6984043761889633 	train_auc	 0.7110531014527749
valid_accuracy	 0.851315991996306 	train_accuracy	 0.8545766649905502
valid_loss	 0.3891631539464927 	train_loss	 0.37980345490924655
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 213
valid_auc	 0.6988496208202629 	train_auc	 0.7112000688873893
valid_accuracy	 0.8512830097407594 	train_accuracy	 0.8545514444288568
valid_loss	 0.3892644690193604 	train_loss	 0.37979876366005616
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 214
valid_auc	 0.6986434215995715 	train_auc	 0.7109695422620272
valid_accuracy	 0.8512170452296665 	train_accuracy	 0.8545876989862911
valid_loss	 0.389075342285366 	train_loss	 0.37984346399314056
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 215
valid_auc	 0.6988098030356206 	train_auc	 0.7112567513547358
valid_accuracy	 0.8511785659315289 	train_accuracy	 0.8545278001522691
valid_loss	 0.3886829477076811 	train_loss	 0.3797641415422328
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 216
valid_auc	 0.6984737796987606 	train_auc	 0.7111296943225217
valid_accuracy	 0.8513379801666703 	train_accuracy	 0.854657055530948
valid_loss	 0.3891109946878344 	train_loss	 0.3797410335711328
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 217
valid_auc	 0.6987134953476815 	train_auc	 0.7112412139309261
valid_accuracy	 0.8511620748037556 	train_accuracy	 0.8545876989862911
valid_loss	 0.38936848659356577 	train_loss	 0.3797103239652651
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 218
valid_auc	 0.698389501624763 	train_auc	 0.7112728216751124
valid_accuracy	 0.8512885067833506 	train_accuracy	 0.8546018855522436
valid_loss	 0.38958007218254864 	train_loss	 0.3797202135046613
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 219
valid_auc	 0.6985053769701204 	train_auc	 0.7115117633682937
valid_accuracy	 0.8511565777611645 	train_accuracy	 0.85453883414801
valid_loss	 0.389190506315861 	train_loss	 0.3796544169561943
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 220
valid_auc	 0.6984398418184095 	train_auc	 0.7115766326715545
valid_accuracy	 0.8512885067833506 	train_accuracy	 0.8543827819225319
valid_loss	 0.38876004039092893 	train_loss	 0.37961898414169065
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 221
valid_auc	 0.698397832933996 	train_auc	 0.7115179160818019
valid_accuracy	 0.8512060511444842 	train_accuracy	 0.854696462658594
valid_loss	 0.3893946825455304 	train_loss	 0.37964435967372795
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 222
valid_auc	 0.6984000657158453 	train_auc	 0.711320614048166
valid_accuracy	 0.851315991996306 	train_accuracy	 0.8546460215352071
valid_loss	 0.38933019453199913 	train_loss	 0.3797140607979443
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 223
valid_auc	 0.6990149123471633 	train_auc	 0.7115017186367975
valid_accuracy	 0.8512170452296665 	train_accuracy	 0.8546838523777472
valid_loss	 0.38933296231241127 	train_loss	 0.37961390028631253
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 224
valid_auc	 0.6983904995008337 	train_auc	 0.7116052801645014
valid_accuracy	 0.8513654653796258 	train_accuracy	 0.8546160721181961
valid_loss	 0.38912419240001034 	train_loss	 0.3795457448847132
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 225
valid_auc	 0.698561627468662 	train_auc	 0.7118707248791093
valid_accuracy	 0.8513434772092614 	train_accuracy	 0.8546854286628531
valid_loss	 0.3897330759644599 	train_loss	 0.37947239105987673
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 226
valid_auc	 0.6982011063514577 	train_auc	 0.7120011613726859
valid_accuracy	 0.8513049979111238 	train_accuracy	 0.8546854286628531
valid_loss	 0.38978482405376996 	train_loss	 0.37949278758274413
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 227
valid_auc	 0.6983709051241347 	train_auc	 0.7114985444706015
valid_accuracy	 0.8512280393148486 	train_accuracy	 0.8547516326372984
valid_loss	 0.3890733666265292 	train_loss	 0.37961190176296233
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 228
valid_auc	 0.698949373751634 	train_auc	 0.7119494176403613
valid_accuracy	 0.85118406297412 	train_accuracy	 0.8545735124203385
valid_loss	 0.389596391425197 	train_loss	 0.37944464253986343
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 229
valid_auc	 0.6985581558622063 	train_auc	 0.7121285397759594
valid_accuracy	 0.8512335363574397 	train_accuracy	 0.8547484800670867
valid_loss	 0.38919011438459317 	train_loss	 0.3794087016820228
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 230
valid_auc	 0.6987567829574941 	train_auc	 0.7119492475451406
valid_accuracy	 0.8512115481870753 	train_accuracy	 0.8545750887054443
valid_loss	 0.38886157893871737 	train_loss	 0.37950649359519806
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 231
valid_auc	 0.6984092424231204 	train_auc	 0.7120705803158065
valid_accuracy	 0.8512830097407594 	train_accuracy	 0.854597156696926
valid_loss	 0.38892584292167315 	train_loss	 0.37943965292747034
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 232
valid_auc	 0.6983614581364912 	train_auc	 0.712443726259314
valid_accuracy	 0.8511950570593021 	train_accuracy	 0.8546743946671123
valid_loss	 0.38891052871533377 	train_loss	 0.37928668602980686
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 233
valid_auc	 0.6985943560937438 	train_auc	 0.7123149968890427
valid_accuracy	 0.8512115481870753 	train_accuracy	 0.8547421749266634
valid_loss	 0.3892296905391233 	train_loss	 0.37932574188317875
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 234
valid_auc	 0.6984336163447543 	train_auc	 0.7122702551121098
valid_accuracy	 0.851063128037116 	train_accuracy	 0.8546822760926415
valid_loss	 0.38895905411360837 	train_loss	 0.3793684051027999
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 235
valid_auc	 0.6986754128912578 	train_auc	 0.7125664591979113
valid_accuracy	 0.8511785659315289 	train_accuracy	 0.8546633606713714
valid_loss	 0.3888316172643192 	train_loss	 0.3792561805104201
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 236
valid_auc	 0.6983274954368972 	train_auc	 0.7127302155748477
valid_accuracy	 0.8513544712944436 	train_accuracy	 0.8546397163947838
valid_loss	 0.3893736064896375 	train_loss	 0.37918837772059644
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 237
valid_auc	 0.6982716381274154 	train_auc	 0.7125197685683422
valid_accuracy	 0.8514039446777634 	train_accuracy	 0.8546050381224553
valid_loss	 0.38952489357694814 	train_loss	 0.3793023355436682
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 238
valid_auc	 0.6986373667730557 	train_auc	 0.7125414489602613
valid_accuracy	 0.8512665186129862 	train_accuracy	 0.8547469037819808
valid_loss	 0.38926062780990095 	train_loss	 0.37922726664377493
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 239
valid_auc	 0.6982427981670734 	train_auc	 0.7127238342641058
valid_accuracy	 0.8513544712944436 	train_accuracy	 0.8547957686202619
valid_loss	 0.3890745852769391 	train_loss	 0.37915608592197697
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 240
valid_auc	 0.6983750797445543 	train_auc	 0.7128428635463866
valid_accuracy	 0.8512280393148486 	train_accuracy	 0.8546192246884079
valid_loss	 0.3888953989933653 	train_loss	 0.3791465228180011
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 241
valid_auc	 0.698232701129018 	train_auc	 0.7127638783343111
valid_accuracy	 0.8513049979111238 	train_accuracy	 0.854657055530948
valid_loss	 0.38942890087408066 	train_loss	 0.37915147421276657
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 242
valid_auc	 0.6987235021339442 	train_auc	 0.7128116999040657
valid_accuracy	 0.851189560016711 	train_accuracy	 0.8547122255096524
valid_loss	 0.38914412171838025 	train_loss	 0.37915293742115075
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 243
valid_auc	 0.698774108570379 	train_auc	 0.7129060836063091
valid_accuracy	 0.8512390334000308 	train_accuracy	 0.8548162603266378
valid_loss	 0.38962264720498674 	train_loss	 0.37905979927191047
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 244
valid_auc	 0.6982045552762131 	train_auc	 0.7126819900499259
valid_accuracy	 0.851315991996306 	train_accuracy	 0.8547122255096524
valid_loss	 0.3894591027688473 	train_loss	 0.37915020508862646
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 245
valid_auc	 0.6985304075922983 	train_auc	 0.7128748251956634
valid_accuracy	 0.8514479210184921 	train_accuracy	 0.8547138017947582
valid_loss	 0.3901350005230887 	train_loss	 0.3791087090371988
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 246
valid_auc	 0.698424213414236 	train_auc	 0.7132835246639553
valid_accuracy	 0.8512060511444842 	train_accuracy	 0.8547800057692034
valid_loss	 0.3891922431353607 	train_loss	 0.3789132013530503
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 247
valid_auc	 0.6984544539398971 	train_auc	 0.713007182243687
valid_accuracy	 0.8513104949537149 	train_accuracy	 0.8547358697862399
valid_loss	 0.38942651047438026 	train_loss	 0.37903373696503356
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 248
valid_auc	 0.6983088998862877 	train_auc	 0.7135161634440293
valid_accuracy	 0.8513654653796258 	train_accuracy	 0.8548304468925904
valid_loss	 0.3896956708874182 	train_loss	 0.3788551843566049
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 249
valid_auc	 0.6986874615055767 	train_auc	 0.7132059016947087
valid_accuracy	 0.8513874535499901 	train_accuracy	 0.8548162603266378
valid_loss	 0.38947365401464473 	train_loss	 0.3789048114382025


Start testing ......................
 Best epoch: 207

test_auc	 0.6818002029880879
test_accuracy	 0.8446405890077716
test_loss	 0.40503879243938684
