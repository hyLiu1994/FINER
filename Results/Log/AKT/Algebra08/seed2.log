nohup: ignoring input
	 max_iter 	 300
	 train_set 	 2
	 seed 	 224
	 optim 	 adam
	 batch_size 	 32
	 lr 	 1e-05
	 maxgradnorm 	 -1
	 final_fc_dim 	 512
	 d_model 	 256
	 d_ff 	 1024
	 dropout 	 0.05
	 n_block 	 1
	 n_head 	 8
	 kq_same 	 1
	 l2 	 1e-05
	 q_embed_dim 	 50
	 qa_embed_dim 	 256
	 memory_size 	 50
	 init_std 	 0.1
	 hidden_dim 	 512
	 lamda_r 	 0.1
	 lamda_w1 	 0.1
	 lamda_w2 	 0.1
	 model 	 akt_cid
	 dataset 	 Algebra08
	 n_question 	 424
	 seqlen 	 200
	 data_dir 	 data/Algebra08
	 data_name 	 Algebra08
	 save 	 Algebra08
	 load 	 Algebra08


train_q_data.shape (3153, 200)
train_qa_data.shape (3153, 200)
valid_q_data.shape (1033, 200)
valid_qa_data.shape (1033, 200)




/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 1
valid_auc	 0.5418991566527167 	train_auc	 0.506494612363399
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8409318323443705
valid_loss	 0.4272074082842689 	train_loss	 0.5364472657364704
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 2
valid_auc	 0.6120170370052711 	train_auc	 0.5711629323513554
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500415706041323
valid_loss	 0.40076762703604424 	train_loss	 0.4204599817323411
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 3
valid_auc	 0.6473930049451853 	train_auc	 0.6384580928295615
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500415706041323
valid_loss	 0.3929836238211734 	train_loss	 0.4081649558695105
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 4
valid_auc	 0.659135665961514 	train_auc	 0.6598753763270364
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500415706041323
valid_loss	 0.389836750201829 	train_loss	 0.40200015995459193
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 5
valid_auc	 0.6645019757949879 	train_auc	 0.6699342834287239
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500415706041323
valid_loss	 0.38793968095379383 	train_loss	 0.3988496795562863
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 6
valid_auc	 0.6675668700576515 	train_auc	 0.6743649168261806
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500399435746164
valid_loss	 0.3869876788144696 	train_loss	 0.39724413725246455
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 7
valid_auc	 0.6695487199128113 	train_auc	 0.6773324144202354
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500431976336482
valid_loss	 0.3861932962531462 	train_loss	 0.3962085301767166
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 8
valid_auc	 0.6712177391579617 	train_auc	 0.6794486253722553
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500415706041323
valid_loss	 0.38566674110422816 	train_loss	 0.39552761090354405
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 9
valid_auc	 0.6727727763686198 	train_auc	 0.6811149433820922
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500448246631642
valid_loss	 0.3851889181907113 	train_loss	 0.39494674784312583
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 10
valid_auc	 0.6739449691732495 	train_auc	 0.6824682735134625
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500366895155845
valid_loss	 0.3847692707639979 	train_loss	 0.3944690278619981
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 11
valid_auc	 0.6749037272536101 	train_auc	 0.6836085778159101
valid_accuracy	 0.8577356694529553 	train_accuracy	 0.8500383165451004
valid_loss	 0.3846069966127049 	train_loss	 0.3940576814403662
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 12
valid_auc	 0.6758202034905331 	train_auc	 0.6846151483235684
valid_accuracy	 0.8577207960258203 	train_accuracy	 0.8500301813975207
valid_loss	 0.38415149733116266 	train_loss	 0.3937446805020638
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 13
valid_auc	 0.676707376498659 	train_auc	 0.6853020372088914
valid_accuracy	 0.8577307116439103 	train_accuracy	 0.8500610949583236
valid_loss	 0.38390740113813865 	train_loss	 0.3934370727443524
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 14
valid_auc	 0.6773590653487069 	train_auc	 0.6862270080627537
valid_accuracy	 0.8577951631614956 	train_accuracy	 0.8500610949583236
valid_loss	 0.3837175072353815 	train_loss	 0.39312614446694993
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 15
valid_auc	 0.6778450132117881 	train_auc	 0.6867280320235507
valid_accuracy	 0.8577703741162706 	train_accuracy	 0.8501440734636367
valid_loss	 0.3834800656392592 	train_loss	 0.39291607084315855
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 16
valid_auc	 0.6785169039544032 	train_auc	 0.687491379744784
valid_accuracy	 0.8579141505785763 	train_accuracy	 0.8501489545521845
valid_loss	 0.38336822002194515 	train_loss	 0.3926790107561154
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 17
valid_auc	 0.6790499831545311 	train_auc	 0.6880893870924233
valid_accuracy	 0.8578794459152611 	train_accuracy	 0.8502156627623382
valid_loss	 0.38320662653680254 	train_loss	 0.3924993190646298
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 18
valid_auc	 0.6794979481520605 	train_auc	 0.6886857978197031
valid_accuracy	 0.8578794459152611 	train_accuracy	 0.8503084034447469
valid_loss	 0.38298094114815706 	train_loss	 0.392252085638116
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 19
valid_auc	 0.6799710666621737 	train_auc	 0.6889530106050251
valid_accuracy	 0.8579488552418915 	train_accuracy	 0.8503197926513585
valid_loss	 0.3828288433503035 	train_loss	 0.3921655089167593
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 20
valid_auc	 0.6805031109007993 	train_auc	 0.6893682065776852
valid_accuracy	 0.8580033911413868 	train_accuracy	 0.8503376899760339
valid_loss	 0.3827495382261195 	train_loss	 0.3919778358534483
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 21
valid_auc	 0.6809294258049601 	train_auc	 0.6898922917411285
valid_accuracy	 0.8580083489504319 	train_accuracy	 0.8503214196808744
valid_loss	 0.3825590962623243 	train_loss	 0.3918252940100124
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 22
valid_auc	 0.6811576972603309 	train_auc	 0.6901652154687319
valid_accuracy	 0.8580133067594768 	train_accuracy	 0.8503718575958686
valid_loss	 0.3824531836276548 	train_loss	 0.3917118710482923
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 23
valid_auc	 0.681485686289554 	train_auc	 0.690578922644799
valid_accuracy	 0.8580182645685219 	train_accuracy	 0.8503555873007093
valid_loss	 0.38239175733787417 	train_loss	 0.3915947427018492
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 24
valid_auc	 0.6819005531658732 	train_auc	 0.6911098655721624
valid_accuracy	 0.858028180186612 	train_accuracy	 0.8503702305663527
valid_loss	 0.38228448889065075 	train_loss	 0.39139004443879033
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 25
valid_auc	 0.6821788030088692 	train_auc	 0.6917702149726896
valid_accuracy	 0.858038095804702 	train_accuracy	 0.8503962630386078
valid_loss	 0.382129512581695 	train_loss	 0.39118850161847984
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 26
valid_auc	 0.6824867426301217 	train_auc	 0.6916171641098586
valid_accuracy	 0.8580480114227921 	train_accuracy	 0.8504206684813469
valid_loss	 0.3819973484037988 	train_loss	 0.3911926922240342
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 27
valid_auc	 0.6827493081129774 	train_auc	 0.6919564273132002
valid_accuracy	 0.8580133067594768 	train_accuracy	 0.8504304306584426
valid_loss	 0.3819535328421312 	train_loss	 0.3910787643323662
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 28
valid_auc	 0.6829801817774113 	train_auc	 0.6924041458786488
valid_accuracy	 0.8579885177142517 	train_accuracy	 0.8504955118390802
valid_loss	 0.3818391634185434 	train_loss	 0.39093893769122084
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 29
valid_auc	 0.6836587680441311 	train_auc	 0.6928751675960491
valid_accuracy	 0.8580579270408821 	train_accuracy	 0.8504906307505324
valid_loss	 0.3817435475699523 	train_loss	 0.39074268508602994
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 30
valid_auc	 0.6835344312580821 	train_auc	 0.6929599649866824
valid_accuracy	 0.8579835599052067 	train_accuracy	 0.850477614514405
valid_loss	 0.38164729887037996 	train_loss	 0.39076549895722923
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 31
valid_auc	 0.6839318456982423 	train_auc	 0.6933342870191805
valid_accuracy	 0.8579786020961616 	train_accuracy	 0.8504808685734367
valid_loss	 0.38166461625804365 	train_loss	 0.39058236058615975
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 32
valid_auc	 0.6842446311873143 	train_auc	 0.693798947196657
valid_accuracy	 0.8580876738951523 	train_accuracy	 0.850531306488431
valid_loss	 0.3815623122963708 	train_loss	 0.3904420207038107
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 33
valid_auc	 0.6844896081661838 	train_auc	 0.693916860117342
valid_accuracy	 0.858052969231837 	train_accuracy	 0.8505654741082658
valid_loss	 0.3813433320667502 	train_loss	 0.39037642269646444
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 34
valid_auc	 0.684858917801731 	train_auc	 0.6938400081047252
valid_accuracy	 0.8581471676036926 	train_accuracy	 0.8505736092558455
valid_loss	 0.3812936839414721 	train_loss	 0.39036482502811015
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 35
valid_auc	 0.6849490808156508 	train_auc	 0.6945433612763131
valid_accuracy	 0.8580232223775669 	train_accuracy	 0.8505459497540745
valid_loss	 0.38119572047449657 	train_loss	 0.39013707698633004
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 36
valid_auc	 0.6851737967814396 	train_auc	 0.6947996714319922
valid_accuracy	 0.8581174207494224 	train_accuracy	 0.8506354363774513
valid_loss	 0.3815172034988056 	train_loss	 0.39006435966521275
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 37
valid_auc	 0.6855583205323571 	train_auc	 0.695145656757703
valid_accuracy	 0.8580579270408821 	train_accuracy	 0.8505557119311702
valid_loss	 0.38109556538316053 	train_loss	 0.38995071967870004
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 38
valid_auc	 0.6855682201466008 	train_auc	 0.6950077397039743
valid_accuracy	 0.8580628848499271 	train_accuracy	 0.8506614688497064
valid_loss	 0.3810891585074716 	train_loss	 0.3899912651128895
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 39
valid_auc	 0.6857032021502407 	train_auc	 0.6954324626706441
valid_accuracy	 0.8581025473222873 	train_accuracy	 0.8506207931118078
valid_loss	 0.38117823545853047 	train_loss	 0.38984136684362475
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 40
valid_auc	 0.686158135713976 	train_auc	 0.6957135531555693
valid_accuracy	 0.8581372519856025 	train_accuracy	 0.850589879551005
valid_loss	 0.38091503995798265 	train_loss	 0.3897451351598499
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 41
valid_auc	 0.6861135127183278 	train_auc	 0.6959784846749184
valid_accuracy	 0.8580777582770622 	train_accuracy	 0.8506598418201905
valid_loss	 0.38079500262538535 	train_loss	 0.38963475242348805
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 42
valid_auc	 0.6865502927591954 	train_auc	 0.6959734837247267
valid_accuracy	 0.8580628848499271 	train_accuracy	 0.8507363122074397
valid_loss	 0.3807642758517609 	train_loss	 0.3896190454886796
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 43
valid_auc	 0.6866969594741658 	train_auc	 0.6963036073374584
valid_accuracy	 0.8581322941765575 	train_accuracy	 0.8506761121153499
valid_loss	 0.38063676647826306 	train_loss	 0.38946345041997144
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 44
valid_auc	 0.686699972706768 	train_auc	 0.6963781767238449
valid_accuracy	 0.8580926317041973 	train_accuracy	 0.8506500796430948
valid_loss	 0.38064771511007944 	train_loss	 0.3894707890858861
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 45
valid_auc	 0.6870082737991017 	train_auc	 0.6967806917223369
valid_accuracy	 0.8581422097946475 	train_accuracy	 0.850614284993744
valid_loss	 0.38061714818920067 	train_loss	 0.38935000409541154
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 46
valid_auc	 0.6872657402131632 	train_auc	 0.6969094638690299
valid_accuracy	 0.8580827160861072 	train_accuracy	 0.850643571525031
valid_loss	 0.3804453919350681 	train_loss	 0.3892737869686638
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 47
valid_auc	 0.6872510371326954 	train_auc	 0.6972093053576056
valid_accuracy	 0.8581322941765575 	train_accuracy	 0.8507216689417962
valid_loss	 0.3804610475905343 	train_loss	 0.3891296171355998
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 48
valid_auc	 0.6875303420804691 	train_auc	 0.6972273239301102
valid_accuracy	 0.8581075051313324 	train_accuracy	 0.850757463591147
valid_loss	 0.380459946754378 	train_loss	 0.3891139770385227
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 49
valid_auc	 0.6877590421847457 	train_auc	 0.697681518504782
valid_accuracy	 0.8581917878850979 	train_accuracy	 0.8507477014140513
valid_loss	 0.38033074145232515 	train_loss	 0.3889431777865649
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 50
valid_auc	 0.6876577086166065 	train_auc	 0.6979489956888488
valid_accuracy	 0.858221534739368 	train_accuracy	 0.8507460743845354
valid_loss	 0.38039817521625174 	train_loss	 0.388912051276737
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 51
valid_auc	 0.6878913456363082 	train_auc	 0.697931571642305
valid_accuracy	 0.8581521254127376 	train_accuracy	 0.850785123092918
valid_loss	 0.380378872691152 	train_loss	 0.3888855166279496
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 52
valid_auc	 0.6881550068126421 	train_auc	 0.6981229048848706
valid_accuracy	 0.8581174207494224 	train_accuracy	 0.8508079015061413
valid_loss	 0.38032375346220254 	train_loss	 0.38883099749488687
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 53
valid_auc	 0.6881844313039583 	train_auc	 0.6986018687509741
valid_accuracy	 0.8582760706388632 	train_accuracy	 0.8508095285356572
valid_loss	 0.38019654040702955 	train_loss	 0.3886212366069422
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 54
valid_auc	 0.6881986303996699 	train_auc	 0.6984159970147769
valid_accuracy	 0.8581471676036926 	train_accuracy	 0.8508518313030716
valid_loss	 0.38012940086214503 	train_loss	 0.3886649823566518
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 55
valid_auc	 0.6883861101104184 	train_auc	 0.6987790016637123
valid_accuracy	 0.8582463237845931 	train_accuracy	 0.8508388150669441
valid_loss	 0.38020924464912725 	train_loss	 0.3885508577682914
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 56
valid_auc	 0.6883454342903471 	train_auc	 0.6986486085470128
valid_accuracy	 0.8582959018750433 	train_accuracy	 0.8509120313951616
valid_loss	 0.38005246625584 	train_loss	 0.3885654467684984
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 57
valid_auc	 0.6884828344942271 	train_auc	 0.6989061044422309
valid_accuracy	 0.8582562394026831 	train_accuracy	 0.8508876259524224
valid_loss	 0.38039558520442246 	train_loss	 0.38847431708263547
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 58
valid_auc	 0.6888678448059677 	train_auc	 0.699063652087769
valid_accuracy	 0.8582661550207732 	train_accuracy	 0.8508908800114543
valid_loss	 0.37983394709759566 	train_loss	 0.3884185527462942
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 59
valid_auc	 0.6889065184851573 	train_auc	 0.699438911005377
valid_accuracy	 0.8582512815936382 	train_accuracy	 0.8509754855462833
valid_loss	 0.37982803838429346 	train_loss	 0.38823051015651583
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 60
valid_auc	 0.6890499469671365 	train_auc	 0.6997153441556807
valid_accuracy	 0.8583157331112234 	train_accuracy	 0.8509087773361297
valid_loss	 0.37996621509406425 	train_loss	 0.38818770888160875
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 61
valid_auc	 0.6892762320940973 	train_auc	 0.6996320204742049
valid_accuracy	 0.8583206909202685 	train_accuracy	 0.8509706044577354
valid_loss	 0.37971041050350557 	train_loss	 0.38817975989641956
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 62
valid_auc	 0.6893731090632188 	train_auc	 0.700001007493894
valid_accuracy	 0.8582314503574581 	train_accuracy	 0.8508729826867789
valid_loss	 0.37977731942983034 	train_loss	 0.38804389003315015
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 63
valid_auc	 0.6893465678803768 	train_auc	 0.699968788383889
valid_accuracy	 0.8582512815936382 	train_accuracy	 0.8509331827788688
valid_loss	 0.3797989890050543 	train_loss	 0.38805117950330004
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 64
valid_auc	 0.6893378189507541 	train_auc	 0.7002700348834285
valid_accuracy	 0.8583058174931334 	train_accuracy	 0.8509885017824108
valid_loss	 0.38033189035855425 	train_loss	 0.3879348769330587
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 65
valid_auc	 0.6896349656034886 	train_auc	 0.7002381329418508
valid_accuracy	 0.8583058174931334 	train_accuracy	 0.8509234206017732
valid_loss	 0.37961704821411474 	train_loss	 0.38796491084521506
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 66
valid_auc	 0.6896192972572524 	train_auc	 0.7003295559181087
valid_accuracy	 0.8583206909202685 	train_accuracy	 0.8509120313951616
valid_loss	 0.3797554258584648 	train_loss	 0.38786289695034454
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 67
valid_auc	 0.689726836666466 	train_auc	 0.7004358591867837
valid_accuracy	 0.8584396783373491 	train_accuracy	 0.8509185395132253
valid_loss	 0.37961753406543486 	train_loss	 0.38783233736092926
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 68
valid_auc	 0.6895483176918834 	train_auc	 0.7007710001558659
valid_accuracy	 0.8583901002468989 	train_accuracy	 0.851040566726921
valid_loss	 0.37976690050054823 	train_loss	 0.3877199914141393
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 69
valid_auc	 0.6899621663256194 	train_auc	 0.7007442900262529
valid_accuracy	 0.8584297627192591 	train_accuracy	 0.8509771125757992
valid_loss	 0.3796021796932694 	train_loss	 0.38771990428120623
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 70
valid_auc	 0.6900153331923445 	train_auc	 0.7010749715937488
valid_accuracy	 0.8584545517644843 	train_accuracy	 0.8510763613762717
valid_loss	 0.37951073804899704 	train_loss	 0.38756354953647865
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 71
valid_auc	 0.6899650818633347 	train_auc	 0.7015314270824495
valid_accuracy	 0.8584595095735292 	train_accuracy	 0.8510161612841819
valid_loss	 0.3796171641957964 	train_loss	 0.3874353661187485
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 72
valid_auc	 0.6902108080713416 	train_auc	 0.7014570429091336
valid_accuracy	 0.8584495939554392 	train_accuracy	 0.851154458793037
valid_loss	 0.3793577059044462 	train_loss	 0.3874238810806931
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 73
valid_auc	 0.6901169074726279 	train_auc	 0.7017377959256059
valid_accuracy	 0.8583256487293135 	train_accuracy	 0.8510926316714311
valid_loss	 0.37947663273922005 	train_loss	 0.3873613354731623
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 74
valid_auc	 0.6904094705229917 	train_auc	 0.7017130490005449
valid_accuracy	 0.8585289189001596 	train_accuracy	 0.851071480287724
valid_loss	 0.3796259503445407 	train_loss	 0.38732518558445256
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 75
valid_auc	 0.6902633402234516 	train_auc	 0.7015753148651012
valid_accuracy	 0.8584991720458894 	train_accuracy	 0.8510844965238514
valid_loss	 0.3796545165148686 	train_loss	 0.3874056975727782
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 76
valid_auc	 0.6905159856466391 	train_auc	 0.7017662533837975
valid_accuracy	 0.8585140454730246 	train_accuracy	 0.8511154100846543
valid_loss	 0.37940535994741836 	train_loss	 0.38732887283615536
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 77
valid_auc	 0.6904816914177216 	train_auc	 0.7021746828543908
valid_accuracy	 0.8584991720458894 	train_accuracy	 0.8512471994754457
valid_loss	 0.37929217284959477 	train_loss	 0.3871062391002549
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 78
valid_auc	 0.690618852319487 	train_auc	 0.7021856908572599
valid_accuracy	 0.8584743830006644 	train_accuracy	 0.8512618427410892
valid_loss	 0.37922927528352646 	train_loss	 0.3870743870251006
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 79
valid_auc	 0.6906438680520651 	train_auc	 0.7021159680266522
valid_accuracy	 0.8584793408097093 	train_accuracy	 0.8511479506749732
valid_loss	 0.3792376861733755 	train_loss	 0.38714536949858924
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 80
valid_auc	 0.6904719329071239 	train_auc	 0.7022784987313622
valid_accuracy	 0.8585190032820695 	train_accuracy	 0.8511951345309355
valid_loss	 0.3793908629153255 	train_loss	 0.38706142872248106
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 81
valid_auc	 0.6908573777093201 	train_auc	 0.7025360935619469
valid_accuracy	 0.8584743830006644 	train_accuracy	 0.8512650968001211
valid_loss	 0.37915698020634026 	train_loss	 0.3870044852564186
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 82
valid_auc	 0.6906567404109268 	train_auc	 0.7024160896867291
valid_accuracy	 0.8585289189001596 	train_accuracy	 0.8512520805639935
valid_loss	 0.37931573754419 	train_loss	 0.38698337568894
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 83
valid_auc	 0.6908059229203074 	train_auc	 0.702479285160991
valid_accuracy	 0.8584694251916193 	train_accuracy	 0.851183745324324
valid_loss	 0.379186573307981 	train_loss	 0.38701738398835256
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 84
valid_auc	 0.6910487388278507 	train_auc	 0.7025445328172563
valid_accuracy	 0.8584942142368445 	train_accuracy	 0.8512439454164138
valid_loss	 0.37917446162095414 	train_loss	 0.3869241977355079
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 85
valid_auc	 0.6910269717020506 	train_auc	 0.7027935786893253
valid_accuracy	 0.8585884126087 	train_accuracy	 0.8513187887741471
valid_loss	 0.3790748316376933 	train_loss	 0.3868599502910671
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 86
valid_auc	 0.6908368080005401 	train_auc	 0.7032630656105865
valid_accuracy	 0.8583553955835838 	train_accuracy	 0.8513106536265674
valid_loss	 0.3794261628142779 	train_loss	 0.38665830976164817
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 87
valid_auc	 0.6911570970612186 	train_auc	 0.7031756989947456
valid_accuracy	 0.8586132016539251 	train_accuracy	 0.8513724807481733
valid_loss	 0.37907943209753875 	train_loss	 0.38673733839086133
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 88
valid_auc	 0.691056203925801 	train_auc	 0.7034377863818942
valid_accuracy	 0.8585735391815649 	train_accuracy	 0.85123743729835
valid_loss	 0.37910167864794486 	train_loss	 0.3866469214635207
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 89
valid_auc	 0.690812841329757 	train_auc	 0.7032987898548463
valid_accuracy	 0.85859832822679 	train_accuracy	 0.851296010360924
valid_loss	 0.3794202492921298 	train_loss	 0.3866756357642879
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 90
valid_auc	 0.6911024654762057 	train_auc	 0.7032648242469541
valid_accuracy	 0.8585437923272947 	train_accuracy	 0.8513366860988225
valid_loss	 0.37899731298352535 	train_loss	 0.3867090754376767
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 91
valid_auc	 0.6909104373131025 	train_auc	 0.7038548744726748
valid_accuracy	 0.8584743830006644 	train_accuracy	 0.8513871240138168
valid_loss	 0.37928260565748506 	train_loss	 0.3864545017099858
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 92
valid_auc	 0.6911704917352175 	train_auc	 0.7035555414504125
valid_accuracy	 0.8586082438448801 	train_accuracy	 0.8514749836076776
valid_loss	 0.37907364395991094 	train_loss	 0.38653631680465267
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 93
valid_auc	 0.6912542674171499 	train_auc	 0.7035818847777766
valid_accuracy	 0.8585041298549345 	train_accuracy	 0.8513708537186573
valid_loss	 0.37902178234776795 	train_loss	 0.3865631502447065
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 94
valid_auc	 0.691239161068304 	train_auc	 0.7037527538399203
valid_accuracy	 0.8585884126087 	train_accuracy	 0.8513073995675355
valid_loss	 0.3791049579611708 	train_loss	 0.38641478458789547
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 95
valid_auc	 0.6913837652125656 	train_auc	 0.7040506203177401
valid_accuracy	 0.8584694251916193 	train_accuracy	 0.8514066483680081
valid_loss	 0.37899665296213997 	train_loss	 0.38636511734894596
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 96
valid_auc	 0.6914161822896265 	train_auc	 0.7039101334780872
valid_accuracy	 0.85859832822679 	train_accuracy	 0.8514717295486457
valid_loss	 0.3793266672770176 	train_loss	 0.3864109135758699
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 97
valid_auc	 0.6916775813761067 	train_auc	 0.7039290468507899
valid_accuracy	 0.8585239610911146 	train_accuracy	 0.851323669862695
valid_loss	 0.37911653204283474 	train_loss	 0.3864160206001987
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 98
valid_auc	 0.6916381240227786 	train_auc	 0.7042994992727207
valid_accuracy	 0.8586330328901052 	train_accuracy	 0.8514326808402631
valid_loss	 0.37906658989928027 	train_loss	 0.38627600251707206
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 99
valid_auc	 0.6914564627979135 	train_auc	 0.7045605830806093
valid_accuracy	 0.8585537079453848 	train_accuracy	 0.8515416918178312
valid_loss	 0.3788802761544091 	train_loss	 0.3861806565234038
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 100
valid_auc	 0.6918703317763579 	train_auc	 0.7041745244145099
valid_accuracy	 0.8586082438448801 	train_accuracy	 0.8514456970763906
valid_loss	 0.37880540147227765 	train_loss	 0.38626931475740706
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 101
valid_auc	 0.6918773337804013 	train_auc	 0.7043321576108965
valid_accuracy	 0.8583504377745387 	train_accuracy	 0.8513529563939819
valid_loss	 0.37897172806792323 	train_loss	 0.38625149102409995
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 102
valid_auc	 0.6915836723172171 	train_auc	 0.7044705717193133
valid_accuracy	 0.858593370417745 	train_accuracy	 0.8513724807481733
valid_loss	 0.3788212833014041 	train_loss	 0.38619042077694354
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 103
valid_auc	 0.6917585757752558 	train_auc	 0.7046565576963691
valid_accuracy	 0.8586082438448801 	train_accuracy	 0.8515921297328255
valid_loss	 0.3787904562481148 	train_loss	 0.3860780742499516
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 104
valid_auc	 0.6919317149844981 	train_auc	 0.7048178152312519
valid_accuracy	 0.8586925265986455 	train_accuracy	 0.8514538322239704
valid_loss	 0.37873053626529674 	train_loss	 0.38609588284581087
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 105
valid_auc	 0.6916695891286331 	train_auc	 0.7049680112148096
valid_accuracy	 0.858603286035835 	train_accuracy	 0.8515351836997676
valid_loss	 0.37894312829929616 	train_loss	 0.38599945765452076
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 106
valid_auc	 0.6919044218531767 	train_auc	 0.7050570468042463
valid_accuracy	 0.8585437923272947 	train_accuracy	 0.8515677242900863
valid_loss	 0.3787908075529661 	train_loss	 0.38594916317907113
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 107
valid_auc	 0.6915685658676547 	train_auc	 0.7047773438234602
valid_accuracy	 0.8586231172720151 	train_accuracy	 0.8515303026112196
valid_loss	 0.3788527160479036 	train_loss	 0.38604460180826766
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 108
valid_auc	 0.6916718449740714 	train_auc	 0.7052339643498097
valid_accuracy	 0.8586528641262853 	train_accuracy	 0.8514912539028371
valid_loss	 0.3788196272659631 	train_loss	 0.38590194094565583
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 109
valid_auc	 0.6919962661255974 	train_auc	 0.7051275932240169
valid_accuracy	 0.8585338767092047 	train_accuracy	 0.8517174110055531
valid_loss	 0.3787803057180966 	train_loss	 0.3858897684480924
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 110
valid_auc	 0.6917423644670249 	train_auc	 0.7054983797500993
valid_accuracy	 0.8586132016539251 	train_accuracy	 0.8515433188473472
valid_loss	 0.37883978554777337 	train_loss	 0.38579438557705076
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 111
valid_auc	 0.6921401482341438 	train_auc	 0.705258515688539
valid_accuracy	 0.8586330328901052 	train_accuracy	 0.8515368107292834
valid_loss	 0.3787030641396531 	train_loss	 0.38586130909017075
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 112
valid_auc	 0.6920237137558428 	train_auc	 0.7054169942174408
valid_accuracy	 0.8586280750810602 	train_accuracy	 0.8514668484600979
valid_loss	 0.37908180471750313 	train_loss	 0.38580570129399044
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 113
valid_auc	 0.6920272892879843 	train_auc	 0.7059185671719165
valid_accuracy	 0.8586627797443753 	train_accuracy	 0.8514538322239704
valid_loss	 0.3789557713753194 	train_loss	 0.385694719298538
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 114
valid_auc	 0.692077678799865 	train_auc	 0.7056437016612201
valid_accuracy	 0.8586330328901052 	train_accuracy	 0.8515010160799327
valid_loss	 0.37879703349708876 	train_loss	 0.38572863170724453
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 115
valid_auc	 0.6921213632195851 	train_auc	 0.7057843652824238
valid_accuracy	 0.85859832822679 	train_accuracy	 0.8516474487363676
valid_loss	 0.37900613267359123 	train_loss	 0.3856634728962917
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 116
valid_auc	 0.6921668494553106 	train_auc	 0.7057449643868658
valid_accuracy	 0.85857849699061 	train_accuracy	 0.8516100270575009
valid_loss	 0.37889613744171835 	train_loss	 0.38570700517610096
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 117
valid_auc	 0.6921250785460596 	train_auc	 0.7057656297296366
valid_accuracy	 0.8585140454730246 	train_accuracy	 0.851636059529756
valid_loss	 0.3787020593138773 	train_loss	 0.3856608126548367
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 118
valid_auc	 0.6920687670118586 	train_auc	 0.7062961177391422
valid_accuracy	 0.85859832822679 	train_accuracy	 0.8516165351755646
valid_loss	 0.3790255147750479 	train_loss	 0.3854629258705691
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 119
valid_auc	 0.6923478309453395 	train_auc	 0.7061842197107862
valid_accuracy	 0.8586231172720151 	train_accuracy	 0.8515091512275125
valid_loss	 0.37866037315497175 	train_loss	 0.3854966370944789
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 120
valid_auc	 0.6923707520794007 	train_auc	 0.7059798695727625
valid_accuracy	 0.8584248049102141 	train_accuracy	 0.8516035189394371
valid_loss	 0.3786439420426628 	train_loss	 0.38551950399049806
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 121
valid_auc	 0.6924771802848138 	train_auc	 0.7060786553111168
valid_accuracy	 0.8585834547996549 	train_accuracy	 0.8515547080539588
valid_loss	 0.3786949935260308 	train_loss	 0.3855611337288692
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 122
valid_auc	 0.6922116508196647 	train_auc	 0.7068029383799748
valid_accuracy	 0.8585487501363398 	train_accuracy	 0.8516018919099211
valid_loss	 0.37875304515291114 	train_loss	 0.385286053321965
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 123
valid_auc	 0.6924696082260698 	train_auc	 0.7064707159107568
valid_accuracy	 0.8585586657544299 	train_accuracy	 0.851636059529756
valid_loss	 0.3786220468254722 	train_loss	 0.3853647152962576
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 124
valid_auc	 0.6922597376529911 	train_auc	 0.7064770948640527
valid_accuracy	 0.8586826109805554 	train_accuracy	 0.8518361841602169
valid_loss	 0.378998354325557 	train_loss	 0.3853217060310371
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 125
valid_auc	 0.692039984285304 	train_auc	 0.7062864076710927
valid_accuracy	 0.8585537079453848 	train_accuracy	 0.8515595891425066
valid_loss	 0.3786736881284032 	train_loss	 0.3854382581306028
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 126
valid_auc	 0.692256716161646 	train_auc	 0.7065477853465097
valid_accuracy	 0.8586231172720151 	train_accuracy	 0.8516035189394371
valid_loss	 0.3786644973566109 	train_loss	 0.385357046042606
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 127
valid_auc	 0.6921723585404804 	train_auc	 0.7068060311693151
valid_accuracy	 0.8585487501363398 	train_accuracy	 0.8515970108213733
valid_loss	 0.3787209818734309 	train_loss	 0.3853013759557155
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 128
valid_auc	 0.6924435983221227 	train_auc	 0.7070143272480782
valid_accuracy	 0.8584991720458894 	train_accuracy	 0.851803643569898
valid_loss	 0.37893144945506724 	train_loss	 0.3851807575983501
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 129
valid_auc	 0.6922109474164795 	train_auc	 0.7069807268537375
valid_accuracy	 0.8586330328901052 	train_accuracy	 0.8517418164482922
valid_loss	 0.3791078911644638 	train_loss	 0.38520262938206473
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 130
valid_auc	 0.6922405607510048 	train_auc	 0.7072902966336588
valid_accuracy	 0.8584793408097093 	train_accuracy	 0.8517711029795791
valid_loss	 0.3787419273408235 	train_loss	 0.38503569029148593
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 131
valid_auc	 0.6925208563450743 	train_auc	 0.7072762543221363
valid_accuracy	 0.8583851424378539 	train_accuracy	 0.8516474487363676
valid_loss	 0.37882176057510214 	train_loss	 0.38508231696366046
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 132
valid_auc	 0.692422684062613 	train_auc	 0.7071505529618406
valid_accuracy	 0.8584396783373491 	train_accuracy	 0.8516962596218458
valid_loss	 0.3786538736341803 	train_loss	 0.3851206189693096
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 133
valid_auc	 0.6924645755293688 	train_auc	 0.7071744890488544
valid_accuracy	 0.8585636235634748 	train_accuracy	 0.8517971354518342
valid_loss	 0.3788074457885908 	train_loss	 0.38507794725326283
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 134
valid_auc	 0.6926954427479546 	train_auc	 0.7073592154586578
valid_accuracy	 0.85859832822679 	train_accuracy	 0.8517955084223183
valid_loss	 0.3790193002905997 	train_loss	 0.3849902916281307
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 135
valid_auc	 0.6925979828324361 	train_auc	 0.7076689320321642
valid_accuracy	 0.8584991720458894 	train_accuracy	 0.8517564597139357
valid_loss	 0.3785614099460138 	train_loss	 0.38493002184288616
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 136
valid_auc	 0.6926892063898181 	train_auc	 0.7075076074604714
valid_accuracy	 0.8585537079453848 	train_accuracy	 0.8516262973526603
valid_loss	 0.3785191112654413 	train_loss	 0.3850306506490705
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 137
valid_auc	 0.6927325582440574 	train_auc	 0.7074125241663883
valid_accuracy	 0.8585636235634748 	train_accuracy	 0.8518231679240893
valid_loss	 0.379081072541714 	train_loss	 0.38501948331399755
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 138
valid_auc	 0.6926326438704028 	train_auc	 0.7075137315887429
valid_accuracy	 0.8587123578348256 	train_accuracy	 0.8517320542711966
valid_loss	 0.37856638291303535 	train_loss	 0.38494278626143197
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 139
valid_auc	 0.6927501871353111 	train_auc	 0.707957439014547
valid_accuracy	 0.8585834547996549 	train_accuracy	 0.8518947572227907
valid_loss	 0.3784172762068157 	train_loss	 0.3848324466334367
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 140
valid_auc	 0.6928351257892622 	train_auc	 0.7071527497983982
valid_accuracy	 0.8585884126087 	train_accuracy	 0.8519142815769821
valid_loss	 0.37851663763083176 	train_loss	 0.38504619167162774
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 141
valid_auc	 0.6928647639000167 	train_auc	 0.7076109697590751
valid_accuracy	 0.8585537079453848 	train_accuracy	 0.8517499515958719
valid_loss	 0.3784809174214053 	train_loss	 0.38495388416451565
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 142
valid_auc	 0.6928335029462608 	train_auc	 0.7084196871336621
valid_accuracy	 0.8586429485081952 	train_accuracy	 0.8517580867434517
valid_loss	 0.37886501691704644 	train_loss	 0.3846778547181423
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 143
valid_auc	 0.6926084355810285 	train_auc	 0.7079502277186758
valid_accuracy	 0.8586231172720151 	train_accuracy	 0.8518150327765096
valid_loss	 0.3786629252363249 	train_loss	 0.38480055055691875
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 144
valid_auc	 0.6926676821919221 	train_auc	 0.7076945290039146
valid_accuracy	 0.8585884126087 	train_accuracy	 0.8517450705073241
valid_loss	 0.3787175521766397 	train_loss	 0.38483469937585435
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 145
valid_auc	 0.692762462447483 	train_auc	 0.708285028010759
valid_accuracy	 0.8585437923272947 	train_accuracy	 0.851720665064585
valid_loss	 0.3785837957098537 	train_loss	 0.3846902540583154
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 146
valid_auc	 0.6928352759573821 	train_auc	 0.7082080757025182
valid_accuracy	 0.8586181594629702 	train_accuracy	 0.8518052705994139
valid_loss	 0.3787849508131586 	train_loss	 0.3846289721025681
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 147
valid_auc	 0.692980021306006 	train_auc	 0.7079493186409662
valid_accuracy	 0.8586677375534204 	train_accuracy	 0.8517613408024834
valid_loss	 0.37859327643817264 	train_loss	 0.38478747082343484
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 148
valid_auc	 0.6927186570673927 	train_auc	 0.708247847553783
valid_accuracy	 0.8585140454730246 	train_accuracy	 0.8518361841602169
valid_loss	 0.37924972926437284 	train_loss	 0.3846966695260883
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 149
valid_auc	 0.6928491389625395 	train_auc	 0.7086419197249918
valid_accuracy	 0.8586082438448801 	train_accuracy	 0.8518101516879618
valid_loss	 0.3786431436721781 	train_loss	 0.38457270109323105
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 150
valid_auc	 0.6926805598887519 	train_auc	 0.7087317671285381
valid_accuracy	 0.8586379906991503 	train_accuracy	 0.8518589625734401
valid_loss	 0.37856673478637104 	train_loss	 0.38449086918476466
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 151
valid_auc	 0.6924096962827819 	train_auc	 0.7085895644539009
valid_accuracy	 0.8586330328901052 	train_accuracy	 0.8518784869276314
valid_loss	 0.37854378052156623 	train_loss	 0.38453803214172416
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 152
valid_auc	 0.6927153136865027 	train_auc	 0.7085053667083652
valid_accuracy	 0.8586231172720151 	train_accuracy	 0.8517759840681269
valid_loss	 0.378668683017575 	train_loss	 0.3845492397482124
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 153
valid_auc	 0.6929948393038612 	train_auc	 0.7084537105992226
valid_accuracy	 0.8585636235634748 	train_accuracy	 0.8519484491968169
valid_loss	 0.37858280247698967 	train_loss	 0.38457671477285005
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 154
valid_auc	 0.6925915433293648 	train_auc	 0.708774140103567
valid_accuracy	 0.8585338767092047 	train_accuracy	 0.851915908606498
valid_loss	 0.37852507308991795 	train_loss	 0.38446698628305
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 155
valid_auc	 0.6930641864581727 	train_auc	 0.7088277752211687
valid_accuracy	 0.8585190032820695 	train_accuracy	 0.8519647194919763
valid_loss	 0.378658583021556 	train_loss	 0.3844326411108418
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 156
valid_auc	 0.693023100118144 	train_auc	 0.7088395421957796
valid_accuracy	 0.8584942142368445 	train_accuracy	 0.851891503163759
valid_loss	 0.37861130288555106 	train_loss	 0.3844653411274894
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 157
valid_auc	 0.6928252933528429 	train_auc	 0.7085346334055226
valid_accuracy	 0.8586379906991503 	train_accuracy	 0.8519419410787531
valid_loss	 0.37867936492450144 	train_loss	 0.38452190877136644
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 158
valid_auc	 0.693070211311915 	train_auc	 0.709618981690024
valid_accuracy	 0.8585487501363398 	train_accuracy	 0.8518996383113386
valid_loss	 0.3784493053535743 	train_loss	 0.3841576615018998
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 159
valid_auc	 0.692780674687999 	train_auc	 0.7088793579387107
valid_accuracy	 0.8586082438448801 	train_accuracy	 0.8519972600822951
valid_loss	 0.3785152281214195 	train_loss	 0.38440766660908343
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 160
valid_auc	 0.6928287176089845 	train_auc	 0.7093554442580445
valid_accuracy	 0.8586528641262853 	train_accuracy	 0.8519533302853647
valid_loss	 0.37861820604973384 	train_loss	 0.38423922019515827
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 161
valid_auc	 0.6931435735246425 	train_auc	 0.7093181995366917
valid_accuracy	 0.8585239610911146 	train_accuracy	 0.8519419410787531
valid_loss	 0.37856295911663357 	train_loss	 0.3842637905079114
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 162
valid_auc	 0.6931627446857953 	train_auc	 0.7095947831667742
valid_accuracy	 0.8585388345182497 	train_accuracy	 0.8520851196761561
valid_loss	 0.3784562441488358 	train_loss	 0.38415956887376274
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 163
valid_auc	 0.6929701361949209 	train_auc	 0.7093340091756924
valid_accuracy	 0.8586578219353304 	train_accuracy	 0.851945195137785
valid_loss	 0.3783454802820711 	train_loss	 0.3842035525584355
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 164
valid_auc	 0.6932738855112593 	train_auc	 0.7094016812676236
valid_accuracy	 0.8585437923272947 	train_accuracy	 0.8518833680161791
valid_loss	 0.37844565061341034 	train_loss	 0.3841850499835375
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 165
valid_auc	 0.6932392971905177 	train_auc	 0.7096676326789385
valid_accuracy	 0.8585041298549345 	train_accuracy	 0.8519224167245618
valid_loss	 0.37844334339381935 	train_loss	 0.38411672869920294
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 166
valid_auc	 0.693184621693164 	train_auc	 0.7098934805749935
valid_accuracy	 0.8585140454730246 	train_accuracy	 0.8520151574069705
valid_loss	 0.3784215355010186 	train_loss	 0.3840565006461028
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 167
valid_auc	 0.6930608563718448 	train_auc	 0.7096314779495366
valid_accuracy	 0.8585735391815649 	train_accuracy	 0.8519321789016574
valid_loss	 0.37846623966428805 	train_loss	 0.3841142326743972
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 168
valid_auc	 0.6930312592526563 	train_auc	 0.7096601820608244
valid_accuracy	 0.8585487501363398 	train_accuracy	 0.8519045193998864
valid_loss	 0.37854821477310124 	train_loss	 0.38408781869910297
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 169
valid_auc	 0.6933211765844819 	train_auc	 0.7097608357130232
valid_accuracy	 0.8586379906991503 	train_accuracy	 0.8520119033479386
valid_loss	 0.3789598062660547 	train_loss	 0.3840260198881028
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 170
valid_auc	 0.6933474198482772 	train_auc	 0.7096953130147773
valid_accuracy	 0.8586528641262853 	train_accuracy	 0.8520119033479386
valid_loss	 0.37846672560625544 	train_loss	 0.3840831822516062
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 171
valid_auc	 0.6933167369058156 	train_auc	 0.7096619362114577
valid_accuracy	 0.8585834547996549 	train_accuracy	 0.8519565843443966
valid_loss	 0.37834464899061104 	train_loss	 0.3840445636691989
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 172
valid_auc	 0.6932824953515639 	train_auc	 0.7100037128382999
valid_accuracy	 0.8586875687896005 	train_accuracy	 0.8520330547316459
valid_loss	 0.3785080603017739 	train_loss	 0.3839362260258375
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 173
valid_auc	 0.6930923461532119 	train_auc	 0.7097231134374671
valid_accuracy	 0.8586280750810602 	train_accuracy	 0.8519533302853647
valid_loss	 0.3786417053655093 	train_loss	 0.3840292045723696
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 174
valid_auc	 0.6934225710860301 	train_auc	 0.7104105888637281
valid_accuracy	 0.8585388345182497 	train_accuracy	 0.8521030170008315
valid_loss	 0.37849598903170056 	train_loss	 0.3838297855088535
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 175
valid_auc	 0.6931080782529154 	train_auc	 0.7105379290331318
valid_accuracy	 0.8585884126087 	train_accuracy	 0.8519614654329444
valid_loss	 0.3784531346764533 	train_loss	 0.38381044021532124
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 176
valid_auc	 0.6927863388763912 	train_auc	 0.7101393511285141
valid_accuracy	 0.8586627797443753 	train_accuracy	 0.8519874979051995
valid_loss	 0.3784189888113095 	train_loss	 0.38391958649413405
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 177
valid_auc	 0.6933220364002024 	train_auc	 0.7105547023678135
valid_accuracy	 0.858776809352411 	train_accuracy	 0.8519826168166517
valid_loss	 0.37858830739712857 	train_loss	 0.3837461583878908
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 178
valid_auc	 0.6933095846329359 	train_auc	 0.71060630868738
valid_accuracy	 0.8586726953624654 	train_accuracy	 0.8520493250268053
valid_loss	 0.37831412326790387 	train_loss	 0.38374715566134865
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 179
valid_auc	 0.6933267274669486 	train_auc	 0.7104532665156598
valid_accuracy	 0.8587371468800508 	train_accuracy	 0.8520737304695445
valid_loss	 0.3785019473337812 	train_loss	 0.38381252721993164
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 180
valid_auc	 0.6930808017397965 	train_auc	 0.7104344146245171
valid_accuracy	 0.8586479063172403 	train_accuracy	 0.8520802385876082
valid_loss	 0.3785596289866901 	train_loss	 0.3837575456660732
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 181
valid_auc	 0.6932127783667118 	train_auc	 0.7102139377102162
valid_accuracy	 0.8586429485081952 	train_accuracy	 0.8520330547316459
valid_loss	 0.37834972453795535 	train_loss	 0.38388043864645294
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 182
valid_auc	 0.6932743441736458 	train_auc	 0.7101667907403179
valid_accuracy	 0.8586925265986455 	train_accuracy	 0.8519565843443966
valid_loss	 0.37846832471016106 	train_loss	 0.38384406330447957
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 183
valid_auc	 0.6931355376669772 	train_auc	 0.711009164207116
valid_accuracy	 0.858776809352411 	train_accuracy	 0.8520932548237358
valid_loss	 0.3785260645826528 	train_loss	 0.3836556694137632
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 184
valid_auc	 0.6931360518240878 	train_auc	 0.7108135369951913
valid_accuracy	 0.8586677375534204 	train_accuracy	 0.852028173643098
valid_loss	 0.3784698913444389 	train_loss	 0.38361288986395004
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 185
valid_auc	 0.6931958523750613 	train_auc	 0.7109696989225773
valid_accuracy	 0.8587272312619607 	train_accuracy	 0.8522120279783996
valid_loss	 0.3783526394061821 	train_loss	 0.38357325107772006
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 186
valid_auc	 0.6930379807615865 	train_auc	 0.7108569715317521
valid_accuracy	 0.8587222734529157 	train_accuracy	 0.8520932548237358
valid_loss	 0.37877713520904466 	train_loss	 0.38361989102846733
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 187
valid_auc	 0.6927145399832857 	train_auc	 0.7110534912802405
valid_accuracy	 0.8586231172720151 	train_accuracy	 0.8520476979972894
valid_loss	 0.37848372542530023 	train_loss	 0.383570066485251
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 188
valid_auc	 0.6927713655738807 	train_auc	 0.7110564998166876
valid_accuracy	 0.8586627797443753 	train_accuracy	 0.8521664711519532
valid_loss	 0.37854642288527024 	train_loss	 0.38354170294903894
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 189
valid_auc	 0.6933508177167276 	train_auc	 0.711034626554913
valid_accuracy	 0.8585239610911146 	train_accuracy	 0.8520786115580923
valid_loss	 0.3784168258370793 	train_loss	 0.3835499807607162
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 190
valid_auc	 0.6932117213483228 	train_auc	 0.7110899219446165
valid_accuracy	 0.8585834547996549 	train_accuracy	 0.8520102763184227
valid_loss	 0.3783424470467955 	train_loss	 0.38347265589673984
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 191
valid_auc	 0.693404274948771 	train_auc	 0.7111958969551314
valid_accuracy	 0.8586578219353304 	train_accuracy	 0.8521388116501821
valid_loss	 0.3785898313215013 	train_loss	 0.3834692768031743
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 192
valid_auc	 0.6930574521582625 	train_auc	 0.7114087585667133
valid_accuracy	 0.8586479063172403 	train_accuracy	 0.8520948818532517
valid_loss	 0.37853595159830483 	train_loss	 0.383429664616658
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 193
valid_auc	 0.6930844031560472 	train_auc	 0.7113566082064666
valid_accuracy	 0.8584892564277994 	train_accuracy	 0.8522185360964634
valid_loss	 0.3784475074695075 	train_loss	 0.3833532466912721
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 194
valid_auc	 0.6931121541440237 	train_auc	 0.7110597468446863
valid_accuracy	 0.8587024422167355 	train_accuracy	 0.8521209143255067
valid_loss	 0.3785055663034603 	train_loss	 0.3835074904306384
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 195
valid_auc	 0.6932958276821247 	train_auc	 0.7115774906643949
valid_accuracy	 0.8586578219353304 	train_accuracy	 0.8520932548237358
valid_loss	 0.37843077620143795 	train_loss	 0.3833982811904332
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 196
valid_auc	 0.6931415827647116 	train_auc	 0.7115451024878867
valid_accuracy	 0.858593370417745 	train_accuracy	 0.8522608388638778
valid_loss	 0.3783967948996845 	train_loss	 0.38332874958601976
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 197
valid_auc	 0.6932930027891497 	train_auc	 0.711204304467639
valid_accuracy	 0.8586578219353304 	train_accuracy	 0.852314530837904
valid_loss	 0.3785740747416424 	train_loss	 0.38341972516617795
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 198
valid_auc	 0.6933158127323296 	train_auc	 0.7118600073948371
valid_accuracy	 0.8585884126087 	train_accuracy	 0.8522331793621069
valid_loss	 0.37840090598469167 	train_loss	 0.3832059582337761
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 199
valid_auc	 0.6934286724842199 	train_auc	 0.7119169160394989
valid_accuracy	 0.8586875687896005 	train_accuracy	 0.8521697252109851
valid_loss	 0.37861568486501473 	train_loss	 0.38327874967763426
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 200
valid_auc	 0.6932376470533778 	train_auc	 0.7116625155814504
valid_accuracy	 0.8587520203071859 	train_accuracy	 0.8521013899713155
valid_loss	 0.37839151516827146 	train_loss	 0.3833085789344479
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 201
valid_auc	 0.693071422527079 	train_auc	 0.7117790942972448
valid_accuracy	 0.8586776531715105 	train_accuracy	 0.8521957576832402
valid_loss	 0.3784268527713821 	train_loss	 0.38326453326858245
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 202
valid_auc	 0.6933257471944398 	train_auc	 0.7118174773983332
valid_accuracy	 0.8586429485081952 	train_accuracy	 0.8520786115580923
valid_loss	 0.37855668168058887 	train_loss	 0.38325795732778184
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 203
valid_auc	 0.6932984037049293 	train_auc	 0.7121313026865939
valid_accuracy	 0.8586578219353304 	train_accuracy	 0.8522819902475851
valid_loss	 0.37859375491106706 	train_loss	 0.383109854557966
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 204
valid_auc	 0.693122412711439 	train_auc	 0.7117943396578421
valid_accuracy	 0.8587520203071859 	train_accuracy	 0.8521794873880807
valid_loss	 0.3786555752376795 	train_loss	 0.38319865555103605
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 205
valid_auc	 0.6936557093582274 	train_auc	 0.7120304602597343
valid_accuracy	 0.8585388345182497 	train_accuracy	 0.8523714768709619
valid_loss	 0.37837131653345296 	train_loss	 0.3830831351782145
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 206
valid_auc	 0.6936673033241009 	train_auc	 0.7122479367991325
valid_accuracy	 0.8586479063172403 	train_accuracy	 0.8521876225356604
valid_loss	 0.3784083725481285 	train_loss	 0.3830697828768459
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 207
valid_auc	 0.6933819974930827 	train_auc	 0.7126161701738897
valid_accuracy	 0.8586082438448801 	train_accuracy	 0.8522950064837126
valid_loss	 0.37853440811267425 	train_loss	 0.3829949344170198
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 208
valid_auc	 0.6933998693122406 	train_auc	 0.7121499587421974
valid_accuracy	 0.8586974844076906 	train_accuracy	 0.8521648441224372
valid_loss	 0.3784293155166278 	train_loss	 0.3830609175384563
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 209
valid_auc	 0.6936069311069647 	train_auc	 0.7119920728078987
valid_accuracy	 0.8587173156438707 	train_accuracy	 0.8521680981814691
valid_loss	 0.3785705234397823 	train_loss	 0.3831241523621321
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 210
valid_auc	 0.6936755156368608 	train_auc	 0.7122398280552339
valid_accuracy	 0.8585834547996549 	train_accuracy	 0.8522901253951648
valid_loss	 0.3785670111648155 	train_loss	 0.38304301030381305
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 211
valid_auc	 0.6935967686229743 	train_auc	 0.7126293615041945
valid_accuracy	 0.8586132016539251 	train_accuracy	 0.8521534549158256
valid_loss	 0.37864793440502287 	train_loss	 0.38290201207220104
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 212
valid_auc	 0.6934770430355837 	train_auc	 0.712763541567266
valid_accuracy	 0.8586379906991503 	train_accuracy	 0.8522738551000054
valid_loss	 0.37863302544215666 	train_loss	 0.3828359295770099
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 213
valid_auc	 0.6933024409209483 	train_auc	 0.7124175099616509
valid_accuracy	 0.8585685813725199 	train_accuracy	 0.8522087739193677
valid_loss	 0.37856713773680883 	train_loss	 0.382977246247954
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 214
valid_auc	 0.6933642789642525 	train_auc	 0.7125851131702481
valid_accuracy	 0.8585586657544299 	train_accuracy	 0.852171352240501
valid_loss	 0.3788465916292656 	train_loss	 0.38294623758290974
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 215
valid_auc	 0.693557131994493 	train_auc	 0.7129119802643298
valid_accuracy	 0.8584644673825743 	train_accuracy	 0.852229925303075
valid_loss	 0.3783816568568971 	train_loss	 0.38285903856655906
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 216
valid_auc	 0.6935985114191822 	train_auc	 0.712581143077151
valid_accuracy	 0.8586181594629702 	train_accuracy	 0.8523308011330634
valid_loss	 0.3784146827204604 	train_loss	 0.3828930337374157
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 217
valid_auc	 0.6936156554617914 	train_auc	 0.7127758597576557
valid_accuracy	 0.8585685813725199 	train_accuracy	 0.8522771091590372
valid_loss	 0.37831414918870665 	train_loss	 0.3828451891573661
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 218
valid_auc	 0.693591499343501 	train_auc	 0.7128941494592722
valid_accuracy	 0.8585834547996549 	train_accuracy	 0.8522657199524256
valid_loss	 0.37843237771066 	train_loss	 0.3827712598045499
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 219
valid_auc	 0.6934238210769997 	train_auc	 0.7130740759047106
valid_accuracy	 0.8586627797443753 	train_accuracy	 0.8522364334211386
valid_loss	 0.37879807084979333 	train_loss	 0.3827148498555593
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 220
valid_auc	 0.6932598255048663 	train_auc	 0.7130124761266639
valid_accuracy	 0.8585487501363398 	train_accuracy	 0.8522706010409735
valid_loss	 0.3785319871456625 	train_loss	 0.38276064669635645
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 221
valid_auc	 0.6934648178801681 	train_auc	 0.7135075868094788
valid_accuracy	 0.8584446361463942 	train_accuracy	 0.8522787361885532
valid_loss	 0.3784577629474529 	train_loss	 0.3825854605758641
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 222
valid_auc	 0.6929326202504984 	train_auc	 0.713027111188544
valid_accuracy	 0.8585537079453848 	train_accuracy	 0.8521957576832402
valid_loss	 0.37844392615614664 	train_loss	 0.3827234623192643
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 223
valid_auc	 0.6935517522291528 	train_auc	 0.7134648584230593
valid_accuracy	 0.8585289189001596 	train_accuracy	 0.8523031416312923
valid_loss	 0.37852931666116685 	train_loss	 0.382660692047434
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 224
valid_auc	 0.6927704790683201 	train_auc	 0.7133976265042107
valid_accuracy	 0.8586726953624654 	train_accuracy	 0.8522754821295213
valid_loss	 0.3789923384480327 	train_loss	 0.3825753691946658
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 225
valid_auc	 0.6931546124425559 	train_auc	 0.7135778156662436
valid_accuracy	 0.8584644673825743 	train_accuracy	 0.8522706010409735
valid_loss	 0.3784789568124979 	train_loss	 0.38258418819027123
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 226
valid_auc	 0.693761246626559 	train_auc	 0.7134646399511749
valid_accuracy	 0.858603286035835 	train_accuracy	 0.8522429415392024
valid_loss	 0.378525025641932 	train_loss	 0.38257671403335297
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 227
valid_auc	 0.6932984846808974 	train_auc	 0.7133356082133645
valid_accuracy	 0.8585239610911146 	train_accuracy	 0.8522201631259793
valid_loss	 0.37834701565084883 	train_loss	 0.38267439812706583
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 228
valid_auc	 0.6932850876904219 	train_auc	 0.7137308055563129
valid_accuracy	 0.8585437923272947 	train_accuracy	 0.8521973847127561
valid_loss	 0.3784750369011789 	train_loss	 0.38249264002023253
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 229
valid_auc	 0.6931791616568703 	train_auc	 0.7134431577686106
valid_accuracy	 0.8586479063172403 	train_accuracy	 0.8523047686608083
valid_loss	 0.3788083653330091 	train_loss	 0.3825873380939856
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 230
valid_auc	 0.6930880265284685 	train_auc	 0.713660190292978
valid_accuracy	 0.8585834547996549 	train_accuracy	 0.8522998875722605
valid_loss	 0.37843472993691235 	train_loss	 0.38249757322327654
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 231
valid_auc	 0.6930419550298692 	train_auc	 0.7134737056621526
valid_accuracy	 0.8585884126087 	train_accuracy	 0.8524040174612808
valid_loss	 0.37856413558350416 	train_loss	 0.3825236920625905
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 232
valid_auc	 0.6936157524516635 	train_auc	 0.7138266432637176
valid_accuracy	 0.8585338767092047 	train_accuracy	 0.8523047686608083
valid_loss	 0.37847189335129094 	train_loss	 0.38246682660585113
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 233
valid_auc	 0.693130257510135 	train_auc	 0.7137494952237742
valid_accuracy	 0.8584694251916193 	train_accuracy	 0.8523373092511272
valid_loss	 0.3785532777311185 	train_loss	 0.3824059198087349
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 234
valid_auc	 0.6932400200319639 	train_auc	 0.7140618897807827
valid_accuracy	 0.8586776531715105 	train_accuracy	 0.8523194119264518
valid_loss	 0.3787898084527149 	train_loss	 0.38235195958408646
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 235
valid_auc	 0.6933981082863683 	train_auc	 0.7136724495769513
valid_accuracy	 0.8585289189001596 	train_accuracy	 0.8524040174612808
valid_loss	 0.3786803508567877 	train_loss	 0.3824402911737327
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 236
valid_auc	 0.693559888198898 	train_auc	 0.7135854204087958
valid_accuracy	 0.8585735391815649 	train_accuracy	 0.8524137796383764
valid_loss	 0.37855395161311983 	train_loss	 0.3824589802941401
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 237
valid_auc	 0.6934016842213753 	train_auc	 0.7138811609703515
valid_accuracy	 0.8585487501363398 	train_accuracy	 0.8524625905238546
valid_loss	 0.378617385331693 	train_loss	 0.3823958226137245
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 238
valid_auc	 0.6934521550113731 	train_auc	 0.7140868731725842
valid_accuracy	 0.8586627797443753 	train_accuracy	 0.8524398121106315
valid_loss	 0.3787094086655877 	train_loss	 0.3822981468994608
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 239
valid_auc	 0.6932793566263546 	train_auc	 0.7141941322869045
valid_accuracy	 0.8585834547996549 	train_accuracy	 0.8523324281625793
valid_loss	 0.3790242738290399 	train_loss	 0.38228753136693855
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 240
valid_auc	 0.6934999836079058 	train_auc	 0.7140409071657483
valid_accuracy	 0.8585735391815649 	train_accuracy	 0.8522998875722605
valid_loss	 0.3783851996128307 	train_loss	 0.3823347962784093
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 241
valid_auc	 0.693537770580102 	train_auc	 0.7144123225876557
valid_accuracy	 0.8585537079453848 	train_accuracy	 0.8521729792700169
valid_loss	 0.3784498868633382 	train_loss	 0.3822148916696176
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 242
valid_auc	 0.6929974150245166 	train_auc	 0.7142206080784239
valid_accuracy	 0.8586280750810602 	train_accuracy	 0.8524333039925678
valid_loss	 0.3787576601314883 	train_loss	 0.38227110998592473
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 243
valid_auc	 0.6931913290010849 	train_auc	 0.7143198598347522
valid_accuracy	 0.8584793408097093 	train_accuracy	 0.8524105255793445
valid_loss	 0.37863790129239333 	train_loss	 0.3822656963251069
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 244
valid_auc	 0.6931032896927152 	train_auc	 0.7142460309372201
valid_accuracy	 0.85857849699061 	train_accuracy	 0.8523942552841851
valid_loss	 0.37843872221332103 	train_loss	 0.3822184066691252
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 245
valid_auc	 0.6936844978256154 	train_auc	 0.7146835995211283
valid_accuracy	 0.8585041298549345 	train_accuracy	 0.8525048932912692
valid_loss	 0.37852853483817406 	train_loss	 0.3820925396758094
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 246
valid_auc	 0.693452718015927 	train_auc	 0.7141813330430232
valid_accuracy	 0.8583405221564486 	train_accuracy	 0.8523275470740315
valid_loss	 0.37856616083934475 	train_loss	 0.3822720067875274
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 247
valid_auc	 0.6932580224802642 	train_auc	 0.7144802286854035
valid_accuracy	 0.8585090876639795 	train_accuracy	 0.8523535795462865
valid_loss	 0.3785638326796235 	train_loss	 0.38214335546401795
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 248
valid_auc	 0.6935009636789818 	train_auc	 0.7147056182681487
valid_accuracy	 0.8586132016539251 	train_accuracy	 0.8523942552841851
valid_loss	 0.37871920580100427 	train_loss	 0.3820664094349449
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 249
valid_auc	 0.6931506811801667 	train_auc	 0.7149479769691965
valid_accuracy	 0.8586479063172403 	train_accuracy	 0.8524349310220837
valid_loss	 0.37883161894657325 	train_loss	 0.3819187132483195
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 250
valid_auc	 0.6931384477660082 	train_auc	 0.7148362500944561
valid_accuracy	 0.8584743830006644 	train_accuracy	 0.8524072715203127
valid_loss	 0.3785164054298704 	train_loss	 0.3820375776717016
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 251
valid_auc	 0.6931334365218957 	train_auc	 0.7150474066700441
valid_accuracy	 0.8585884126087 	train_accuracy	 0.8524381850811156
valid_loss	 0.37845972858384097 	train_loss	 0.381956824415859
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 252
valid_auc	 0.6937027792582834 	train_auc	 0.7147864167822219
valid_accuracy	 0.8584793408097093 	train_accuracy	 0.8524463202286953
valid_loss	 0.3784780297090082 	train_loss	 0.3819380715275282
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 253
valid_auc	 0.6932454843990616 	train_auc	 0.7150182864030441
valid_accuracy	 0.8585239610911146 	train_accuracy	 0.852456082405791
valid_loss	 0.3784510812683795 	train_loss	 0.38192552166068644
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 254
valid_auc	 0.6932024153564122 	train_auc	 0.7150449603664227
valid_accuracy	 0.8584297627192591 	train_accuracy	 0.8525065203207851
valid_loss	 0.37850637275708215 	train_loss	 0.38195041308897026
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 255
valid_auc	 0.6933865198598955 	train_auc	 0.7145026291975048
valid_accuracy	 0.858593370417745 	train_accuracy	 0.8524658445828865
valid_loss	 0.3785120805381391 	train_loss	 0.3820973482513151
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 256
valid_auc	 0.6934361155252833 	train_auc	 0.7153488862720235
valid_accuracy	 0.8584495939554392 	train_accuracy	 0.8524414391401475
valid_loss	 0.3786718280422648 	train_loss	 0.3818245485302266
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 257
valid_auc	 0.6936034122781443 	train_auc	 0.7151953596928944
valid_accuracy	 0.8582413659755481 	train_accuracy	 0.8525894988260982
valid_loss	 0.3787059033492769 	train_loss	 0.3818645477091585
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 258
valid_auc	 0.6934364441628253 	train_auc	 0.715418522253827
valid_accuracy	 0.8585487501363398 	train_accuracy	 0.8526171583278692
valid_loss	 0.37876752976284933 	train_loss	 0.3817760365846264
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 259
valid_auc	 0.693265172940249 	train_auc	 0.7152646380827419
valid_accuracy	 0.8583553955835838 	train_accuracy	 0.8526431908001243
valid_loss	 0.3785334591940145 	train_loss	 0.38175140688327736
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 260
valid_auc	 0.6932612359370263 	train_auc	 0.715562359511429
valid_accuracy	 0.8584545517644843 	train_accuracy	 0.8523828660775735
valid_loss	 0.37860300959943183 	train_loss	 0.3817137864866003
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 261
valid_auc	 0.6930440309958561 	train_auc	 0.7155854428727729
valid_accuracy	 0.8586429485081952 	train_accuracy	 0.8524772337894981
valid_loss	 0.3789531866368753 	train_loss	 0.38171112194386403
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 262
valid_auc	 0.6927935709166423 	train_auc	 0.7151815876676435
valid_accuracy	 0.858404973674034 	train_accuracy	 0.8524137796383764
valid_loss	 0.3785790582719874 	train_loss	 0.3818475787484243
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 263
valid_auc	 0.6934783190113787 	train_auc	 0.7154869800969195
valid_accuracy	 0.8581917878850979 	train_accuracy	 0.8525569582357794
valid_loss	 0.37870897444985063 	train_loss	 0.3817166007680488
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 264
valid_auc	 0.6931390543807538 	train_auc	 0.7157912351744411
valid_accuracy	 0.8584842986187544 	train_accuracy	 0.8525748555604548
valid_loss	 0.3789096022508401 	train_loss	 0.3816465399174186
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 265
valid_auc	 0.6931904740197504 	train_auc	 0.715834179779494
valid_accuracy	 0.8584892564277994 	train_accuracy	 0.8525602122948113
valid_loss	 0.3787730969436445 	train_loss	 0.3816151152174562
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 266
valid_auc	 0.6933093320362594 	train_auc	 0.7157211672537855
valid_accuracy	 0.858409931483079 	train_accuracy	 0.8525650933833591
valid_loss	 0.37870916421717954 	train_loss	 0.381605974442718
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 267
valid_auc	 0.6934163837767697 	train_auc	 0.7156482443500205
valid_accuracy	 0.8583752268197639 	train_accuracy	 0.8524625905238546
valid_loss	 0.3787857313373087 	train_loss	 0.38171852175321647
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 268
valid_auc	 0.6932675091573572 	train_auc	 0.7162502609474811
valid_accuracy	 0.8585140454730246 	train_accuracy	 0.852482114878046
valid_loss	 0.3790248657673916 	train_loss	 0.38142675453072467


Start testing ......................
 Best epoch: 226
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt

test_auc	 0.6820247624687791
test_accuracy	 0.8446018384964802
test_loss	 0.40516609254848257
