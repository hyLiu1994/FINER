nohup: ignoring input
	 max_iter 	 300
	 train_set 	 4
	 seed 	 224
	 optim 	 adam
	 batch_size 	 32
	 lr 	 1e-05
	 maxgradnorm 	 -1
	 final_fc_dim 	 512
	 d_model 	 256
	 d_ff 	 1024
	 dropout 	 0.05
	 n_block 	 1
	 n_head 	 8
	 kq_same 	 1
	 l2 	 1e-05
	 q_embed_dim 	 50
	 qa_embed_dim 	 256
	 memory_size 	 50
	 init_std 	 0.1
	 hidden_dim 	 512
	 lamda_r 	 0.1
	 lamda_w1 	 0.1
	 lamda_w2 	 0.1
	 model 	 akt_cid
	 dataset 	 Algebra08
	 n_question 	 424
	 seqlen 	 200
	 data_dir 	 data/Algebra08
	 data_name 	 Algebra08
	 save 	 Algebra08
	 load 	 Algebra08


train_q_data.shape (3365, 200)
train_qa_data.shape (3365, 200)
valid_q_data.shape (821, 200)
valid_qa_data.shape (821, 200)




/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 1
valid_auc	 0.5489764641711081 	train_auc	 0.5056916557745395
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8397646156748435
valid_loss	 0.4076513891848005 	train_loss	 0.5314050024610849
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 2
valid_auc	 0.6321615913828282 	train_auc	 0.5776585612751984
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8483465894223104
valid_loss	 0.38332298230930256 	train_loss	 0.4216864829641669
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 3
valid_auc	 0.6592752025826114 	train_auc	 0.6416942102519683
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8483465894223104
valid_loss	 0.3753779467020664 	train_loss	 0.4099690719256978
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 4
valid_auc	 0.667587397389883 	train_auc	 0.6605832293796127
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8483465894223104
valid_loss	 0.37225316446029816 	train_loss	 0.4044209578119158
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 5
valid_auc	 0.6714692611415494 	train_auc	 0.6693169023365153
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8483465894223104
valid_loss	 0.3704766963079755 	train_loss	 0.40166715892694194
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 6
valid_auc	 0.6740210207271424 	train_auc	 0.6736384785949447
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8483450680655036
valid_loss	 0.36944080119401335 	train_loss	 0.40015818083789756
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 7
valid_auc	 0.6762853813284124 	train_auc	 0.6760791498154732
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8483465894223104
valid_loss	 0.3688182979602171 	train_loss	 0.3993453429071631
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 8
valid_auc	 0.6776850634272665 	train_auc	 0.6782235482849159
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8483465894223104
valid_loss	 0.36838419805750444 	train_loss	 0.3985767593382664
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 9
valid_auc	 0.6788832928007653 	train_auc	 0.6797744669476933
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8483465894223104
valid_loss	 0.3680186276012649 	train_loss	 0.39805690476048594
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 10
valid_auc	 0.6800263561721853 	train_auc	 0.6810580067214775
valid_accuracy	 0.8668079566822421 	train_accuracy	 0.8483481107791172
valid_loss	 0.3674618329350127 	train_loss	 0.39763781389547054
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 11
valid_auc	 0.6806424503231963 	train_auc	 0.6821250185954304
valid_accuracy	 0.8667702234436612 	train_accuracy	 0.8483450680655036
valid_loss	 0.367250908280791 	train_loss	 0.39724610338187466
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 12
valid_auc	 0.6813266113475445 	train_auc	 0.6834548943598866
valid_accuracy	 0.8667639345705643 	train_accuracy	 0.8483344185678555
valid_loss	 0.366919927717632 	train_loss	 0.39682993732195593
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 13
valid_auc	 0.6820884136275449 	train_auc	 0.6840038771999369
valid_accuracy	 0.8668016678091452 	train_accuracy	 0.8483694097744132
valid_loss	 0.36669814454203953 	train_loss	 0.3966048164749035
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 14
valid_auc	 0.6825336556341254 	train_auc	 0.6848876551580414
valid_accuracy	 0.8668394010477263 	train_accuracy	 0.8484485203283697
valid_loss	 0.36645910236361895 	train_loss	 0.39631566223328907
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 15
valid_auc	 0.6831548636131517 	train_auc	 0.6855579848734701
valid_accuracy	 0.8669085786517914 	train_accuracy	 0.8484469989715628
valid_loss	 0.3664934645202488 	train_loss	 0.39604770795773764
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 16
valid_auc	 0.6835946535076088 	train_auc	 0.6857263902990324
valid_accuracy	 0.8669085786517914 	train_accuracy	 0.848497203746189
valid_loss	 0.3663768146821072 	train_loss	 0.3959612517080313
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 17
valid_auc	 0.6839219924547687 	train_auc	 0.6866643580346966
valid_accuracy	 0.8669714673827597 	train_accuracy	 0.8485641434456906
valid_loss	 0.3660077743289578 	train_loss	 0.3956289343522995
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 18
valid_auc	 0.684432164969976 	train_auc	 0.6869203050064132
valid_accuracy	 0.8670217783675344 	train_accuracy	 0.8485474085208152
valid_loss	 0.36588986227330367 	train_loss	 0.3955597450305017
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 19
valid_auc	 0.6847262297784174 	train_auc	 0.6873380729533108
valid_accuracy	 0.8670029117482438 	train_accuracy	 0.8486249977179647
valid_loss	 0.36575968365288886 	train_loss	 0.39542387393543915
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 20
valid_auc	 0.6848522650165128 	train_auc	 0.6879008027021538
valid_accuracy	 0.866996622875147 	train_accuracy	 0.8486447753564539
valid_loss	 0.3659556125939767 	train_loss	 0.39519252838536706
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 21
valid_auc	 0.6856759273844205 	train_auc	 0.6886878328488711
valid_accuracy	 0.8669840451289533 	train_accuracy	 0.8486386899292265
valid_loss	 0.36573353850936346 	train_loss	 0.39494359674101154
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 22
valid_auc	 0.6857634165614872 	train_auc	 0.6888117299829699
valid_accuracy	 0.8670029117482438 	train_accuracy	 0.848675202492591
valid_loss	 0.3654458877267218 	train_loss	 0.39488397094736793
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 23
valid_auc	 0.6861206216276705 	train_auc	 0.6892787515307182
valid_accuracy	 0.8669651785096628 	train_accuracy	 0.8487041082719212
valid_loss	 0.36537428247768355 	train_loss	 0.3947502657575607
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 24
valid_auc	 0.6860409003101405 	train_auc	 0.6898405537573835
valid_accuracy	 0.866996622875147 	train_accuracy	 0.8487269286240241
valid_loss	 0.3654284244788339 	train_loss	 0.3945491173698307
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 25
valid_auc	 0.6868443725122142 	train_auc	 0.6904654086293722
valid_accuracy	 0.8670406449868248 	train_accuracy	 0.848780176112264
valid_loss	 0.3652976443468799 	train_loss	 0.3943482142382513
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 26
valid_auc	 0.6870629903727035 	train_auc	 0.6903833232314831
valid_accuracy	 0.8670595116061153 	train_accuracy	 0.8487756120418434
valid_loss	 0.3652300014985885 	train_loss	 0.394343911449449
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 27
valid_auc	 0.6873100975787172 	train_auc	 0.6907090688871302
valid_accuracy	 0.8670280672406312 	train_accuracy	 0.8487984323939463
valid_loss	 0.3649899749613875 	train_loss	 0.3942362671229211
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 28
valid_auc	 0.6877973465924974 	train_auc	 0.691106175480105
valid_accuracy	 0.8670029117482438 	train_accuracy	 0.848842551741345
valid_loss	 0.36492389138224335 	train_loss	 0.3940877343712923
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 29
valid_auc	 0.6880008852033553 	train_auc	 0.6915875270449063
valid_accuracy	 0.8670280672406312 	train_accuracy	 0.8489201409384945
valid_loss	 0.36471601445643353 	train_loss	 0.3939659680022312
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 30
valid_auc	 0.6877736459796784 	train_auc	 0.6916380045299528
valid_accuracy	 0.8670469338599216 	train_accuracy	 0.848894277872778
valid_loss	 0.3649255805706408 	train_loss	 0.39389709897633324
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 31
valid_auc	 0.6882146799032377 	train_auc	 0.692177762736748
valid_accuracy	 0.8670154894944375 	train_accuracy	 0.8489155768680741
valid_loss	 0.3646399160154622 	train_loss	 0.3936932607411359
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 32
valid_auc	 0.6883689232400192 	train_auc	 0.6924063372709467
valid_accuracy	 0.867034356113728 	train_accuracy	 0.8489216622953014
valid_loss	 0.36457014565060375 	train_loss	 0.39362755571815033
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 33
valid_auc	 0.6884431119423722 	train_auc	 0.6928098969496586
valid_accuracy	 0.8670532227330184 	train_accuracy	 0.8489155768680741
valid_loss	 0.364554987716213 	train_loss	 0.39348823509342684
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 34
valid_auc	 0.6892187266622505 	train_auc	 0.6926881815624528
valid_accuracy	 0.8670406449868248 	train_accuracy	 0.8489794738539619
valid_loss	 0.3644337030729097 	train_loss	 0.39347358946563193
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 35
valid_auc	 0.6893485390351057 	train_auc	 0.6931412509508988
valid_accuracy	 0.8670092006213407 	train_accuracy	 0.8489536107882454
valid_loss	 0.36452924678733667 	train_loss	 0.3933478340396882
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 36
valid_auc	 0.6899006149312416 	train_auc	 0.6936299539524602
valid_accuracy	 0.8670154894944375 	train_accuracy	 0.8489596962154728
valid_loss	 0.36412166242661287 	train_loss	 0.3932063203133992
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 37
valid_auc	 0.6895729399266537 	train_auc	 0.6936361091200239
valid_accuracy	 0.8670658004792121 	train_accuracy	 0.8489688243563139
valid_loss	 0.3642007065298806 	train_loss	 0.3931400813127273
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 38
valid_auc	 0.6897384648243354 	train_auc	 0.6940089361464591
valid_accuracy	 0.8670846670985026 	train_accuracy	 0.8489642602858933
valid_loss	 0.3642487942632044 	train_loss	 0.3930302947146989
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 39
valid_auc	 0.690011749054122 	train_auc	 0.6942811028287625
valid_accuracy	 0.8670154894944375 	train_accuracy	 0.8490053369196785
valid_loss	 0.36408156311233025 	train_loss	 0.39291485693518646
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 40
valid_auc	 0.6903507559768394 	train_auc	 0.6945473551966729
valid_accuracy	 0.8670154894944375 	train_accuracy	 0.8490281572717813
valid_loss	 0.3640238229734633 	train_loss	 0.3928310012782305
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 41
valid_auc	 0.6904588356083278 	train_auc	 0.6947550393973285
valid_accuracy	 0.8669274452710819 	train_accuracy	 0.848977952497155
valid_loss	 0.36452611633458404 	train_loss	 0.39276198783615707
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 42
valid_auc	 0.6908866584669475 	train_auc	 0.6946646360556777
valid_accuracy	 0.8670783782254058 	train_accuracy	 0.8490768406896007
valid_loss	 0.3637779479543471 	train_loss	 0.3927461024795868
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 43
valid_auc	 0.690940807732588 	train_auc	 0.6950103542913844
valid_accuracy	 0.8670532227330184 	train_accuracy	 0.8489338331497562
valid_loss	 0.3640609670046275 	train_loss	 0.3926307638435952
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 44
valid_auc	 0.691117156351463 	train_auc	 0.6953447024512223
valid_accuracy	 0.8671412669563741 	train_accuracy	 0.8489688243563139
valid_loss	 0.36378595143301556 	train_loss	 0.39253713570757115
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 45
valid_auc	 0.6912295891427523 	train_auc	 0.6954210563963892
valid_accuracy	 0.8671790001949551 	train_accuracy	 0.8490661911919526
valid_loss	 0.3638261651231237 	train_loss	 0.3924552929455471
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 46
valid_auc	 0.6913880042505394 	train_auc	 0.695217102883255
valid_accuracy	 0.8670909559715995 	train_accuracy	 0.8490372854126224
valid_loss	 0.3638347219315927 	train_loss	 0.392510825233912
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 47
valid_auc	 0.6913715191092832 	train_auc	 0.6960423126651095
valid_accuracy	 0.8671286892101804 	train_accuracy	 0.8490083796332921
valid_loss	 0.3635955198918874 	train_loss	 0.39224243087731536
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 48
valid_auc	 0.6915883049258131 	train_auc	 0.6961798338887153
valid_accuracy	 0.8671412669563741 	train_accuracy	 0.849063148478339
valid_loss	 0.36351002838945135 	train_loss	 0.39217592334125123
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 49
valid_auc	 0.6916031226261619 	train_auc	 0.696315245056486
valid_accuracy	 0.8671475558294709 	train_accuracy	 0.8490798834032143
valid_loss	 0.3635150557442289 	train_loss	 0.39207641417671585
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 50
valid_auc	 0.6921167333068889 	train_auc	 0.6962720148088
valid_accuracy	 0.8671161114639868 	train_accuracy	 0.8491453017459091
valid_loss	 0.3635951361271401 	train_loss	 0.3921102486194028
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 51
valid_auc	 0.6919994348767855 	train_auc	 0.6965246958705319
valid_accuracy	 0.8671475558294709 	train_accuracy	 0.8491087891825445
valid_loss	 0.36351346181935806 	train_loss	 0.391999041942113
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 52
valid_auc	 0.6916394824297953 	train_auc	 0.6967167850172922
valid_accuracy	 0.8671978668142456 	train_accuracy	 0.8490814047600211
valid_loss	 0.3634857090523537 	train_loss	 0.39193648783076235
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 53
valid_auc	 0.6919554142655484 	train_auc	 0.6969781673405704
valid_accuracy	 0.8672104445604392 	train_accuracy	 0.8491529085299433
valid_loss	 0.36342334280262134 	train_loss	 0.3918381434359001
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 54
valid_auc	 0.6921109381147308 	train_auc	 0.6971090891459258
valid_accuracy	 0.867216733433536 	train_accuracy	 0.8491757288820462
valid_loss	 0.3638932824549102 	train_loss	 0.3917606647520415
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 55
valid_auc	 0.692361424051031 	train_auc	 0.6974055778337167
valid_accuracy	 0.8672230223066328 	train_accuracy	 0.8492061560181833
valid_loss	 0.36336526364934646 	train_loss	 0.3916837214685509
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 56
valid_auc	 0.6928873099058787 	train_auc	 0.6976409989988822
valid_accuracy	 0.8672293111797297 	train_accuracy	 0.8491924638069216
valid_loss	 0.3631675416108033 	train_loss	 0.3916233823101086
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 57
valid_auc	 0.6926020281518643 	train_auc	 0.6975007477671941
valid_accuracy	 0.867254466672117 	train_accuracy	 0.8492517967223889
valid_loss	 0.36327920748046527 	train_loss	 0.3916586722989138
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 58
valid_auc	 0.6930336170118433 	train_auc	 0.6978312209578833
valid_accuracy	 0.8672607555452139 	train_accuracy	 0.8492502753655821
valid_loss	 0.36302209713541933 	train_loss	 0.3914748890415438
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 59
valid_auc	 0.6931656348258002 	train_auc	 0.6978104147106651
valid_accuracy	 0.8672481777990202 	train_accuracy	 0.849292873356174
valid_loss	 0.36308931301036595 	train_loss	 0.39147177909630676
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 60
valid_auc	 0.6934970703506882 	train_auc	 0.698037166115173
valid_accuracy	 0.8672356000528265 	train_accuracy	 0.8492457112951615
valid_loss	 0.36303830733861714 	train_loss	 0.39140588768103546
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 61
valid_auc	 0.6935792737315143 	train_auc	 0.6981522055177184
valid_accuracy	 0.8672670444183107 	train_accuracy	 0.8492959160697877
valid_loss	 0.3633428485512057 	train_loss	 0.39133632363408005
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 62
valid_auc	 0.693413924741569 	train_auc	 0.6983361833834596
valid_accuracy	 0.8673236442761821 	train_accuracy	 0.8492837452153329
valid_loss	 0.3628783137135663 	train_loss	 0.39127534172858724
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 63
valid_auc	 0.6938958353751992 	train_auc	 0.6986739047649915
valid_accuracy	 0.8672607555452139 	train_accuracy	 0.8492974374265946
valid_loss	 0.36274480188873737 	train_loss	 0.39115059404581587
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 64
valid_auc	 0.6932991953865729 	train_auc	 0.6987040291316838
valid_accuracy	 0.86736766638786 	train_accuracy	 0.8493369927035728
valid_loss	 0.36299576931373034 	train_loss	 0.3911037993145591
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 65
valid_auc	 0.6934094576785116 	train_auc	 0.6988437247081991
valid_accuracy	 0.8674116884995378 	train_accuracy	 0.8493309072763453
valid_loss	 0.36285571871401595 	train_loss	 0.3910324065625886
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 66
valid_auc	 0.6940688030371075 	train_auc	 0.6991168822292873
valid_accuracy	 0.8673739552609568 	train_accuracy	 0.8494845643138377
valid_loss	 0.3626557564470336 	train_loss	 0.39091866963806543
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 67
valid_auc	 0.6941064632219808 	train_auc	 0.699086342657131
valid_accuracy	 0.8673110665299885 	train_accuracy	 0.8494130605439155
valid_loss	 0.36269096509193577 	train_loss	 0.3909392625987289
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 68
valid_auc	 0.6944450540980657 	train_auc	 0.6994339551199089
valid_accuracy	 0.8674305551188283 	train_accuracy	 0.8494404449664389
valid_loss	 0.36259538466289637 	train_loss	 0.3907847157605707
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 69
valid_auc	 0.6941769650557634 	train_auc	 0.6995249293994308
valid_accuracy	 0.8673991107533441 	train_accuracy	 0.8494815216002239
valid_loss	 0.36262605994363806 	train_loss	 0.3907612426185582
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 70
valid_auc	 0.6943275722237702 	train_auc	 0.699770704111635
valid_accuracy	 0.8673739552609568 	train_accuracy	 0.8494632653185417
valid_loss	 0.36269164839482376 	train_loss	 0.39063549580728596
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 71
valid_auc	 0.6939734430593654 	train_auc	 0.6995999960628386
valid_accuracy	 0.8673865330071504 	train_accuracy	 0.849397846975847
valid_loss	 0.36266925579085457 	train_loss	 0.39073022447656613
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 72
valid_auc	 0.694686356520068 	train_auc	 0.7000386490991282
valid_accuracy	 0.867443132865022 	train_accuracy	 0.8494921710978719
valid_loss	 0.3624596894138392 	train_loss	 0.39058409286465084
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 73
valid_auc	 0.69427809675988 	train_auc	 0.7000344627821009
valid_accuracy	 0.8675563325807648 	train_accuracy	 0.8494860856706445
valid_loss	 0.3626655061934943 	train_loss	 0.3905628049824767
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 74
valid_auc	 0.6945758039032873 	train_auc	 0.6999939923972802
valid_accuracy	 0.8675060215959902 	train_accuracy	 0.849438923609632
valid_loss	 0.362600027179309 	train_loss	 0.39058767681848117
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 75
valid_auc	 0.6943156822653247 	train_auc	 0.7004865278031112
valid_accuracy	 0.8674179773726346 	train_accuracy	 0.84944957310728
valid_loss	 0.36252379040434424 	train_loss	 0.39041743923993044
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 76
valid_auc	 0.6942208304845187 	train_auc	 0.700654543731245
valid_accuracy	 0.8674179773726346 	train_accuracy	 0.8495393331588844
valid_loss	 0.3625782966122159 	train_loss	 0.3903908821162199
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 77
valid_auc	 0.6947797270446886 	train_auc	 0.7005350778151452
valid_accuracy	 0.8674179773726346 	train_accuracy	 0.8495286836612365
valid_loss	 0.3625934894438658 	train_loss	 0.3903556600564256
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 78
valid_auc	 0.6950051910903927 	train_auc	 0.7006357339405682
valid_accuracy	 0.867474577230506 	train_accuracy	 0.8495971447175449
valid_loss	 0.3623424116746161 	train_loss	 0.3903175837062745
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 79
valid_auc	 0.69443757262386 	train_auc	 0.7006599613714277
valid_accuracy	 0.86762551018483 	train_accuracy	 0.8495256409476227
valid_loss	 0.3626242663939602 	train_loss	 0.39031013846108925
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 80
valid_auc	 0.6947186360178675 	train_auc	 0.7008268242878681
valid_accuracy	 0.8675311770883776 	train_accuracy	 0.8494997778819062
valid_loss	 0.3624267929975296 	train_loss	 0.3902313362630048
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 81
valid_auc	 0.6948540618515197 	train_auc	 0.7012163821902293
valid_accuracy	 0.8675437548345712 	train_accuracy	 0.8495941020039312
valid_loss	 0.3623777019030971 	train_loss	 0.3901124604957814
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 82
valid_auc	 0.6951182607122208 	train_auc	 0.7010892437927579
valid_accuracy	 0.8675437548345712 	train_accuracy	 0.8496017087879655
valid_loss	 0.36227835100094713 	train_loss	 0.39013066445281425
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 83
valid_auc	 0.6949653723959855 	train_auc	 0.7010681284284498
valid_accuracy	 0.8674494217381188 	train_accuracy	 0.8494754361729965
valid_loss	 0.36235678072737376 	train_loss	 0.3901810394378959
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 84
valid_auc	 0.6948074689107963 	train_auc	 0.7012540938995399
valid_accuracy	 0.867443132865022 	train_accuracy	 0.849543897229305
valid_loss	 0.36241626837596236 	train_loss	 0.3900383055051228
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 85
valid_auc	 0.6951661204626975 	train_auc	 0.7014617585358229
valid_accuracy	 0.8674682883574092 	train_accuracy	 0.8496884261259562
valid_loss	 0.3623160925407574 	train_loss	 0.3899834865561463
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 86
valid_auc	 0.6951675475934259 	train_auc	 0.7013499527597978
valid_accuracy	 0.8675751992000553 	train_accuracy	 0.8495530253701461
valid_loss	 0.36224613363956515 	train_loss	 0.3899964130772664
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 87
valid_auc	 0.695425291993345 	train_auc	 0.7011845702052372
valid_accuracy	 0.8675751992000553 	train_accuracy	 0.8496351786377163
valid_loss	 0.3622174116233091 	train_loss	 0.3900671500783497
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 88
valid_auc	 0.695124924652225 	train_auc	 0.7016499698979637
valid_accuracy	 0.8675814880731522 	train_accuracy	 0.8496458281353643
valid_loss	 0.3622828544907153 	train_loss	 0.389957368793454
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 89
valid_auc	 0.6950944633244545 	train_auc	 0.7021912231826448
valid_accuracy	 0.8675437548345712 	train_accuracy	 0.8495880165767038
valid_loss	 0.36230951653029975 	train_loss	 0.38974771630203936
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 90
valid_auc	 0.6954972231845363 	train_auc	 0.7020799293095585
valid_accuracy	 0.867550043707668 	train_accuracy	 0.8496123582856134
valid_loss	 0.36219291996753916 	train_loss	 0.3897788870281918
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 91
valid_auc	 0.6949803211279002 	train_auc	 0.7018391849978823
valid_accuracy	 0.8674997327228934 	train_accuracy	 0.849784271604788
valid_loss	 0.3623471079935956 	train_loss	 0.3898026892731014
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 92
valid_auc	 0.6955742738560851 	train_auc	 0.7022162412840186
valid_accuracy	 0.8674808661036029 	train_accuracy	 0.8498633821587445
valid_loss	 0.3621418604204624 	train_loss	 0.3896624794173286
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 93
valid_auc	 0.6957998300520932 	train_auc	 0.7022669784040334
valid_accuracy	 0.8675248882152807 	train_accuracy	 0.8497477590414235
valid_loss	 0.3621147596653636 	train_loss	 0.3896674620439899
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 94
valid_auc	 0.6958281582202273 	train_auc	 0.7023157568919614
valid_accuracy	 0.8675060215959902 	train_accuracy	 0.8497644939662989
valid_loss	 0.36211249076258406 	train_loss	 0.3896584865819634
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 95
valid_auc	 0.6959321619992421 	train_auc	 0.7024048910320319
valid_accuracy	 0.8675751992000553 	train_accuracy	 0.8497553658254577
valid_loss	 0.3620303498279699 	train_loss	 0.38960406165256906
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 96
valid_auc	 0.6956868421323007 	train_auc	 0.7024105433907172
valid_accuracy	 0.8675751992000553 	train_accuracy	 0.8497279814029344
valid_loss	 0.3622585753436444 	train_loss	 0.3896219260780415
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 97
valid_auc	 0.6958619414122975 	train_auc	 0.7023986799058644
valid_accuracy	 0.8675248882152807 	train_accuracy	 0.8496443067785574
valid_loss	 0.36202475448407667 	train_loss	 0.38962340364101417
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 98
valid_auc	 0.69591625528099 	train_auc	 0.7026762406701469
valid_accuracy	 0.8676003546924427 	train_accuracy	 0.8498314336658005
valid_loss	 0.3620329238073635 	train_loss	 0.3894868133516923
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 99
valid_auc	 0.69608741145291 	train_auc	 0.7033680786024898
valid_accuracy	 0.8675437548345712 	train_accuracy	 0.8497751434639469
valid_loss	 0.36201808985704403 	train_loss	 0.38928815772303277
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 100
valid_auc	 0.6959659438210475 	train_auc	 0.7027310617877682
valid_accuracy	 0.867587776946249 	train_accuracy	 0.8497173319052864
valid_loss	 0.3620854205480611 	train_loss	 0.38946207041929615
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 101
valid_auc	 0.6956107657189831 	train_auc	 0.7028601272714621
valid_accuracy	 0.8676129324386364 	train_accuracy	 0.849784271604788
valid_loss	 0.36212009476793744 	train_loss	 0.38943010930026617
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 102
valid_auc	 0.6959982150972585 	train_auc	 0.7032001954692227
valid_accuracy	 0.8676066435655395 	train_accuracy	 0.8499227150742118
valid_loss	 0.3620281710405697 	train_loss	 0.38925909992593893
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 103
valid_auc	 0.695620659030417 	train_auc	 0.7031050542301588
valid_accuracy	 0.8675060215959902 	train_accuracy	 0.849794921102436
valid_loss	 0.3621225120064054 	train_loss	 0.38928703045945795
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 104
valid_auc	 0.6958822278392297 	train_auc	 0.7032805404564884
valid_accuracy	 0.8676317990579268 	train_accuracy	 0.8497812288911744
valid_loss	 0.3621291220608847 	train_loss	 0.38922290678636356
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 105
valid_auc	 0.696499163504075 	train_auc	 0.7031219184316636
valid_accuracy	 0.8675814880731522 	train_accuracy	 0.8498223055249594
valid_loss	 0.3622566212277135 	train_loss	 0.3893116456467853
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 106
valid_auc	 0.6955418838806908 	train_auc	 0.7031568453436533
valid_accuracy	 0.8675437548345712 	train_accuracy	 0.8499318432150529
valid_loss	 0.3621478577681686 	train_loss	 0.38927779166271465
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 107
valid_auc	 0.6962940305901902 	train_auc	 0.7032424272412726
valid_accuracy	 0.8675563325807648 	train_accuracy	 0.849857296731517
valid_loss	 0.36190163864125985 	train_loss	 0.3892669583464063
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 108
valid_auc	 0.6961969072530088 	train_auc	 0.7037208586142979
valid_accuracy	 0.8676003546924427 	train_accuracy	 0.8497827502479811
valid_loss	 0.36192543556109724 	train_loss	 0.38907303115055925
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 109
valid_auc	 0.6963164911134179 	train_auc	 0.7034268200516192
valid_accuracy	 0.867587776946249 	train_accuracy	 0.8498679462291651
valid_loss	 0.3619061578177728 	train_loss	 0.3891292153435845
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 110
valid_auc	 0.6960291049753269 	train_auc	 0.7038467311563714
valid_accuracy	 0.8676946877888951 	train_accuracy	 0.8500063896985888
valid_loss	 0.3619547777279364 	train_loss	 0.38898017380734495
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 111
valid_auc	 0.696564615227153 	train_auc	 0.7041777934730521
valid_accuracy	 0.8675751992000553 	train_accuracy	 0.8499257577878255
valid_loss	 0.36212570972258107 	train_loss	 0.38894403518339354
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 112
valid_auc	 0.69643657580559 	train_auc	 0.7039017808668228
valid_accuracy	 0.8677072655350888 	train_accuracy	 0.8499881334169065
valid_loss	 0.3618333880067994 	train_loss	 0.3889785610928005
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 113
valid_auc	 0.6965318453458592 	train_auc	 0.7042356730283553
valid_accuracy	 0.8676192213117332 	train_accuracy	 0.8498907665812678
valid_loss	 0.36186863627348514 	train_loss	 0.3888871523067173
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 114
valid_auc	 0.6964382019672721 	train_auc	 0.7040909806570577
valid_accuracy	 0.8676066435655395 	train_accuracy	 0.849910544219757
valid_loss	 0.36189504998989824 	train_loss	 0.38888326088262565
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 115
valid_auc	 0.6964293058660039 	train_auc	 0.703979472952123
valid_accuracy	 0.8677575765198634 	train_accuracy	 0.8498223055249594
valid_loss	 0.36205080551130336 	train_loss	 0.3889706556882768
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 116
valid_auc	 0.6965287923960151 	train_auc	 0.7044998500705655
valid_accuracy	 0.8675563325807648 	train_accuracy	 0.8499227150742118
valid_loss	 0.36198141109352605 	train_loss	 0.38881299779140005
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 117
valid_auc	 0.6964587970463373 	train_auc	 0.7041775027959457
valid_accuracy	 0.8675374659614744 	train_accuracy	 0.8500124751258162
valid_loss	 0.3619737143036552 	train_loss	 0.3888666610990101
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 118
valid_auc	 0.6967150961595203 	train_auc	 0.7044252015360337
valid_accuracy	 0.8676443768041204 	train_accuracy	 0.8500003042713614
valid_loss	 0.36185493362619414 	train_loss	 0.3887770313032232
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 119
valid_auc	 0.6968906202215871 	train_auc	 0.7041514934600023
valid_accuracy	 0.8676317990579268 	train_accuracy	 0.8498542540179034
valid_loss	 0.3617366581613622 	train_loss	 0.38888363798482933
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 120
valid_auc	 0.6965940137433333 	train_auc	 0.7047716711426016
valid_accuracy	 0.8676506656772173 	train_accuracy	 0.8498010065296634
valid_loss	 0.3619231441260348 	train_loss	 0.38870341679388937
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 121
valid_auc	 0.6964757518458337 	train_auc	 0.7046892616327675
valid_accuracy	 0.8676569545503141 	train_accuracy	 0.8499774839192585
valid_loss	 0.3618610773607348 	train_loss	 0.3886867117814466
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 122
valid_auc	 0.6965458634967314 	train_auc	 0.704977709066501
valid_accuracy	 0.8676695322965078 	train_accuracy	 0.8499379286422803
valid_loss	 0.36208174503567186 	train_loss	 0.38859970440498326
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 123
valid_auc	 0.6964145626738004 	train_auc	 0.7049998123102016
valid_accuracy	 0.8677764431391539 	train_accuracy	 0.8501144060318755
valid_loss	 0.36181497148206065 	train_loss	 0.3885435396427129
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 124
valid_auc	 0.6965833666150084 	train_auc	 0.7049096878440679
valid_accuracy	 0.8677387099005729 	train_accuracy	 0.8500535517596013
valid_loss	 0.36180172920510506 	train_loss	 0.38857969259077807
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 125
valid_auc	 0.6965221447279045 	train_auc	 0.7049240795765976
valid_accuracy	 0.8676569545503141 	train_accuracy	 0.849930321858246
valid_loss	 0.3618346127878984 	train_loss	 0.38860801490749397
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 126
valid_auc	 0.6969062599094976 	train_auc	 0.7048632259757717
valid_accuracy	 0.8677449987736697 	train_accuracy	 0.8499333645718598
valid_loss	 0.3617416232556521 	train_loss	 0.3886091919620834
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 127
valid_auc	 0.6970872359124047 	train_auc	 0.7051069290772575
valid_accuracy	 0.8676380879310236 	train_accuracy	 0.8499744412056448
valid_loss	 0.361718282931796 	train_loss	 0.3885362064499524
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 128
valid_auc	 0.6967939088202437 	train_auc	 0.7053395952009386
valid_accuracy	 0.8677512876467666 	train_accuracy	 0.8500611585436355
valid_loss	 0.36174048498395445 	train_loss	 0.3884144796015124
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 129
valid_auc	 0.6972596928081307 	train_auc	 0.7053259584463111
valid_accuracy	 0.8678015986315412 	train_accuracy	 0.8500139964826231
valid_loss	 0.3616033306072128 	train_loss	 0.38841988001941
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 130
valid_auc	 0.6972801505181556 	train_auc	 0.7058755604920142
valid_accuracy	 0.8676192213117332 	train_accuracy	 0.8500794148253178
valid_loss	 0.3616497134303403 	train_loss	 0.3882456533608384
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 131
valid_auc	 0.6966025068154844 	train_auc	 0.7054717406116416
valid_accuracy	 0.8677512876467666 	train_accuracy	 0.8500109537690094
valid_loss	 0.3618245733141717 	train_loss	 0.38837165681396973
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 132
valid_auc	 0.6972762668453119 	train_auc	 0.7057984438241518
valid_accuracy	 0.867663243423411 	train_accuracy	 0.8500185605530436
valid_loss	 0.36163114121925843 	train_loss	 0.3882170999996454
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 133
valid_auc	 0.6969765656241393 	train_auc	 0.705643374248666
valid_accuracy	 0.8676946877888951 	train_accuracy	 0.8500322527643053
valid_loss	 0.36176789323346537 	train_loss	 0.3883008987108601
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 134
valid_auc	 0.696359128956248 	train_auc	 0.7056170603021846
valid_accuracy	 0.8676443768041204 	train_accuracy	 0.850129619599944
valid_loss	 0.3619103194194812 	train_loss	 0.3883501518956337
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 135
valid_auc	 0.6969288557463686 	train_auc	 0.7057235600763858
valid_accuracy	 0.8676066435655395 	train_accuracy	 0.8500839788957384
valid_loss	 0.3617775031599903 	train_loss	 0.3882316747157072
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 136
valid_auc	 0.6969071644555102 	train_auc	 0.7058472181743273
valid_accuracy	 0.867550043707668 	train_accuracy	 0.8501007138206138
valid_loss	 0.36178141070264486 	train_loss	 0.3882556945891772
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 137
valid_auc	 0.6967730309527925 	train_auc	 0.7056895170782617
valid_accuracy	 0.8676821100427015 	train_accuracy	 0.850045944975567
valid_loss	 0.3617856030396792 	train_loss	 0.388254797370013
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 138
valid_auc	 0.6969318045560924 	train_auc	 0.706466484678871
valid_accuracy	 0.8676003546924427 	train_accuracy	 0.8501524399520468
valid_loss	 0.3617688466883504 	train_loss	 0.3880196084257406
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 139
valid_auc	 0.6969876181795447 	train_auc	 0.7060195136988198
valid_accuracy	 0.867732421027476 	train_accuracy	 0.8500931070365795
valid_loss	 0.36179662457568024 	train_loss	 0.3881324306889273
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 140
valid_auc	 0.6966565366968094 	train_auc	 0.7061620967159011
valid_accuracy	 0.8677261321543792 	train_accuracy	 0.8501798243745702
valid_loss	 0.36177874972834223 	train_loss	 0.38809745612397556
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 141
valid_auc	 0.6972581521167119 	train_auc	 0.7065064625901993
valid_accuracy	 0.8678015986315412 	train_accuracy	 0.8499774839192585
valid_loss	 0.36171365934188154 	train_loss	 0.3880109572277374
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 142
valid_auc	 0.697140028444668 	train_auc	 0.7066725046035474
valid_accuracy	 0.8677072655350888 	train_accuracy	 0.8501372263839783
valid_loss	 0.3616316095000285 	train_loss	 0.3879664472165267
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 143
valid_auc	 0.69678090963249 	train_auc	 0.7066250050049376
valid_accuracy	 0.8677198432812824 	train_accuracy	 0.850118970102296
valid_loss	 0.36178600588482823 	train_loss	 0.387910591279625
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 144
valid_auc	 0.6972757977009211 	train_auc	 0.7067218544431219
valid_accuracy	 0.8675563325807648 	train_accuracy	 0.8500946283933863
valid_loss	 0.36167576657250117 	train_loss	 0.38793006384823703
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 145
valid_auc	 0.6970388850933011 	train_auc	 0.7066615105504265
valid_accuracy	 0.8677387099005729 	train_accuracy	 0.8502087301539004
valid_loss	 0.3617030357323641 	train_loss	 0.38788625705573876
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 146
valid_auc	 0.6973302300975137 	train_auc	 0.7066724701162808
valid_accuracy	 0.8676758211696046 	train_accuracy	 0.8502604562853335
valid_loss	 0.36160102773086505 	train_loss	 0.3878541144149272
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 147
valid_auc	 0.6970406940140431 	train_auc	 0.7067198603343052
valid_accuracy	 0.867732421027476 	train_accuracy	 0.8501737389473428
valid_loss	 0.3616503884714809 	train_loss	 0.38785539718385265
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 148
valid_auc	 0.6971511400927402 	train_auc	 0.7066431961206737
valid_accuracy	 0.8678770651087032 	train_accuracy	 0.8500474663323738
valid_loss	 0.3616709374912516 	train_loss	 0.38786246383729583
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 149
valid_auc	 0.697185685837139 	train_auc	 0.7065261328984503
valid_accuracy	 0.8677890208853476 	train_accuracy	 0.8501052778910343
valid_loss	 0.3616237339050908 	train_loss	 0.38792110164447313
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 150
valid_auc	 0.697304511769863 	train_auc	 0.7068950728033375
valid_accuracy	 0.8677764431391539 	train_accuracy	 0.8501904738722182
valid_loss	 0.36170750809814955 	train_loss	 0.38773648544773004
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 151
valid_auc	 0.6971767857963597 	train_auc	 0.7068617649578843
valid_accuracy	 0.8676443768041204 	train_accuracy	 0.8502589349285267
valid_loss	 0.3616029706021993 	train_loss	 0.3877965754041652
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 152
valid_auc	 0.6975328992753933 	train_auc	 0.7073975493302335
valid_accuracy	 0.8678015986315412 	train_accuracy	 0.8500931070365795
valid_loss	 0.36158177908929917 	train_loss	 0.38765864940436146
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 153
valid_auc	 0.6976576774668715 	train_auc	 0.7075089454058042
valid_accuracy	 0.8678204652508317 	train_accuracy	 0.8502437213604581
valid_loss	 0.3614615684719744 	train_loss	 0.3876096333688781
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 154
valid_auc	 0.6972347420000183 	train_auc	 0.7067008989939487
valid_accuracy	 0.8677827320122508 	train_accuracy	 0.850245242717265
valid_loss	 0.3616349705478312 	train_loss	 0.38781703600774453
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 155
valid_auc	 0.6972213925383401 	train_auc	 0.70717099050212
valid_accuracy	 0.8677072655350888 	train_accuracy	 0.8502330718628102
valid_loss	 0.36165898799818436 	train_loss	 0.3876992020776003
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 156
valid_auc	 0.6975037569987197 	train_auc	 0.7071256515298756
valid_accuracy	 0.8676758211696046 	train_accuracy	 0.8500216032666573
valid_loss	 0.3618767413479194 	train_loss	 0.38771776757539467
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 157
valid_auc	 0.6975309586379531 	train_auc	 0.7075804197625235
valid_accuracy	 0.8676758211696046 	train_accuracy	 0.8501889525154114
valid_loss	 0.3615091377279627 	train_loss	 0.3875391628856323
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 158
valid_auc	 0.6975685602440087 	train_auc	 0.7075045340220316
valid_accuracy	 0.8674871549766997 	train_accuracy	 0.8501280982431372
valid_loss	 0.3617388950723846 	train_loss	 0.3875440694496102
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 159
valid_auc	 0.697554936386816 	train_auc	 0.7072671620415333
valid_accuracy	 0.8677387099005729 	train_accuracy	 0.8500976711070001
valid_loss	 0.3614969003942239 	train_loss	 0.3876331299865266
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 160
valid_auc	 0.6971315086523544 	train_auc	 0.7077947661673246
valid_accuracy	 0.8677701542660571 	train_accuracy	 0.8501965592994456
valid_loss	 0.361668130456377 	train_loss	 0.387457849333756
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 161
valid_auc	 0.697671870326498 	train_auc	 0.7078462519416767
valid_accuracy	 0.8679399538396715 	train_accuracy	 0.8502391572900375
valid_loss	 0.36147177589356305 	train_loss	 0.3874199791142879
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 162
valid_auc	 0.6976777655479823 	train_auc	 0.7076706535102961
valid_accuracy	 0.8677575765198634 	train_accuracy	 0.8503486949801311
valid_loss	 0.36166334424477636 	train_loss	 0.38745150804400186
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 163
valid_auc	 0.697435356465918 	train_auc	 0.7079134681823694
valid_accuracy	 0.8678644873625095 	train_accuracy	 0.8503045756327323
valid_loss	 0.36157577756506415 	train_loss	 0.38739506874553803
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 164
valid_auc	 0.6976507274841023 	train_auc	 0.7080483718008369
valid_accuracy	 0.8677135544081856 	train_accuracy	 0.8502787125670158
valid_loss	 0.36164509686407437 	train_loss	 0.38733907174605564
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 165
valid_auc	 0.6973212675384055 	train_auc	 0.7077985378725655
valid_accuracy	 0.867807887504638 	train_accuracy	 0.8502574135717198
valid_loss	 0.3616244942213408 	train_loss	 0.38741248594700073
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 166
valid_auc	 0.6977835111047666 	train_auc	 0.708307711792493
valid_accuracy	 0.8678644873625095 	train_accuracy	 0.8502604562853335
valid_loss	 0.36155663484400347 	train_loss	 0.387255880861355
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 167
valid_auc	 0.6980268207933322 	train_auc	 0.7078225460924985
valid_accuracy	 0.8679085094741873 	train_accuracy	 0.8503973783979504
valid_loss	 0.36147129694565844 	train_loss	 0.38737862287856495
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 168
valid_auc	 0.6977811348944217 	train_auc	 0.7080904785947738
valid_accuracy	 0.8677575765198634 	train_accuracy	 0.8502817552806294
valid_loss	 0.3615598537881325 	train_loss	 0.38731458087418924
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 169
valid_auc	 0.6976658725064412 	train_auc	 0.7082139838027638
valid_accuracy	 0.8678833539818 	train_accuracy	 0.8502878407078569
valid_loss	 0.36157347504726256 	train_loss	 0.38722542247571395
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 170
valid_auc	 0.6979828063482864 	train_auc	 0.7079012071944368
valid_accuracy	 0.8678393318701222 	train_accuracy	 0.850296968848698
valid_loss	 0.36145817194278523 	train_loss	 0.3873540341534532
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 171
valid_auc	 0.6975343226378935 	train_auc	 0.7082396601305944
valid_accuracy	 0.8679022206010905 	train_accuracy	 0.8504293268908943
valid_loss	 0.36159896960053867 	train_loss	 0.38723004118785453
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 172
valid_auc	 0.6976347830835699 	train_auc	 0.7086652632894697
valid_accuracy	 0.8678267541239285 	train_accuracy	 0.8502787125670158
valid_loss	 0.3615952993348725 	train_loss	 0.38715164693291726
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 173
valid_auc	 0.6976237560493455 	train_auc	 0.7086910373941885
valid_accuracy	 0.8678393318701222 	train_accuracy	 0.8503897716139162
valid_loss	 0.3616318639375216 	train_loss	 0.3870795914524974
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 174
valid_auc	 0.697612283507797 	train_auc	 0.7084901320013404
valid_accuracy	 0.8678707762356064 	train_accuracy	 0.8503715153322339
valid_loss	 0.3615476973926164 	train_loss	 0.3871288341780408
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 175
valid_auc	 0.6973357210908993 	train_auc	 0.7084452409947648
valid_accuracy	 0.8678896428548968 	train_accuracy	 0.8503532590505516
valid_loss	 0.36159661695925494 	train_loss	 0.38713161318945516
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 176
valid_auc	 0.6976051392900007 	train_auc	 0.708781198974162
valid_accuracy	 0.8679022206010905 	train_accuracy	 0.8503745580458476
valid_loss	 0.3614989035860769 	train_loss	 0.38705312118919866
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 177
valid_auc	 0.697725216788283 	train_auc	 0.7085395942708438
valid_accuracy	 0.867958820458962 	train_accuracy	 0.8504338909613149
valid_loss	 0.3615047744442629 	train_loss	 0.38710155943731445
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 178
valid_auc	 0.6978088377079843 	train_auc	 0.7091822399490132
valid_accuracy	 0.8680594424285112 	train_accuracy	 0.8502254650787758
valid_loss	 0.3614352520264412 	train_loss	 0.3869114111522747
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 179
valid_auc	 0.6979486865849391 	train_auc	 0.7088572309931966
valid_accuracy	 0.8678770651087032 	train_accuracy	 0.8504110706092122
valid_loss	 0.3614461623263741 	train_loss	 0.3869983853727961
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 180
valid_auc	 0.6978885723855955 	train_auc	 0.7090222253096451
valid_accuracy	 0.8679525315858652 	train_accuracy	 0.8503243532712214
valid_loss	 0.36159713865697474 	train_loss	 0.3869521587316212
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 181
valid_auc	 0.697899279634286 	train_auc	 0.7086704506727259
valid_accuracy	 0.8678644873625095 	train_accuracy	 0.8504278055340875
valid_loss	 0.3614333648384228 	train_loss	 0.3870426424136995
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 182
valid_auc	 0.6975310937803132 	train_auc	 0.7091168425563373
valid_accuracy	 0.8678959317279936 	train_accuracy	 0.8503867289003024
valid_loss	 0.36157030165105153 	train_loss	 0.38687379211713435
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 183
valid_auc	 0.6977615342849925 	train_auc	 0.7091565963364119
valid_accuracy	 0.8679336649665746 	train_accuracy	 0.8502741484965952
valid_loss	 0.3614552428708967 	train_loss	 0.3869194717195049
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 184
valid_auc	 0.6981630425795161 	train_auc	 0.7095069267358293
valid_accuracy	 0.8677449987736697 	train_accuracy	 0.8504141133228258
valid_loss	 0.36161689666711716 	train_loss	 0.38677536715834115
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 185
valid_auc	 0.6980046468267185 	train_auc	 0.709269874144841
valid_accuracy	 0.8678707762356064 	train_accuracy	 0.8504141133228258
valid_loss	 0.36151047185725 	train_loss	 0.3868019403277218
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 186
valid_auc	 0.6978603505842621 	train_auc	 0.7094638099794955
valid_accuracy	 0.8679525315858652 	train_accuracy	 0.8505038733744302
valid_loss	 0.36147206967594275 	train_loss	 0.38679454818148495
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 187
valid_auc	 0.6980512318884196 	train_auc	 0.7094312742836172
valid_accuracy	 0.8678833539818 	train_accuracy	 0.8502954474918911
valid_loss	 0.36144596550567326 	train_loss	 0.3868179806622164
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 188
valid_auc	 0.6977186499657924 	train_auc	 0.7099287521357521
valid_accuracy	 0.8679022206010905 	train_accuracy	 0.8504536685998041
valid_loss	 0.36155055931724017 	train_loss	 0.38667098221427487
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 189
valid_auc	 0.6973764749909926 	train_auc	 0.7096336832547339
valid_accuracy	 0.8678896428548968 	train_accuracy	 0.8503350027688694
valid_loss	 0.36197955607855553 	train_loss	 0.38671458743388465
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 190
valid_auc	 0.6975648649825669 	train_auc	 0.7093698661610027
valid_accuracy	 0.8678770651087032 	train_accuracy	 0.8503426095529036
valid_loss	 0.3616490846619265 	train_loss	 0.3867885623507593
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 191
valid_auc	 0.697569723256208 	train_auc	 0.7098453859145957
valid_accuracy	 0.8680279980630271 	train_accuracy	 0.850464318097452
valid_loss	 0.3615357863039997 	train_loss	 0.38661078460294174
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 192
valid_auc	 0.697458300007467 	train_auc	 0.7096196152563544
valid_accuracy	 0.8678330429970254 	train_accuracy	 0.8503821648298819
valid_loss	 0.3617312682354689 	train_loss	 0.386674802773352
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 193
valid_auc	 0.6978683580688454 	train_auc	 0.7098743008882203
valid_accuracy	 0.8678267541239285 	train_accuracy	 0.8502787125670158
valid_loss	 0.36149880449932265 	train_loss	 0.38662315881407344
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 194
valid_auc	 0.6971469553042197 	train_auc	 0.7100629178310531
valid_accuracy	 0.8678267541239285 	train_accuracy	 0.8505875479988072
valid_loss	 0.36178397245342125 	train_loss	 0.38652323491742385
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 195
valid_auc	 0.6979081750504219 	train_auc	 0.7097761576198343
valid_accuracy	 0.8679022206010905 	train_accuracy	 0.8504475831725766
valid_loss	 0.3614298010420569 	train_loss	 0.3865877793847977
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 196
valid_auc	 0.6976479689698946 	train_auc	 0.7100765216005979
valid_accuracy	 0.867845620743219 	train_accuracy	 0.8504688821678726
valid_loss	 0.3619147306583164 	train_loss	 0.38649847039613866
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 197
valid_auc	 0.697626418131172 	train_auc	 0.7101740956221944
valid_accuracy	 0.8679147983472841 	train_accuracy	 0.8505145228720782
valid_loss	 0.36177093143969835 	train_loss	 0.38650907028780446
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 198
valid_auc	 0.6975799918488979 	train_auc	 0.7101639241632468
valid_accuracy	 0.8679399538396715 	train_accuracy	 0.8505555995058633
valid_loss	 0.36167471645366167 	train_loss	 0.38650561095547564
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 199
valid_auc	 0.697122248231948 	train_auc	 0.7102725479716903
valid_accuracy	 0.8679273760934778 	train_accuracy	 0.8504704035246794
valid_loss	 0.3616988806533547 	train_loss	 0.3864735133364342
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 200
valid_auc	 0.6975439893417958 	train_auc	 0.7103050495760869
valid_accuracy	 0.8678896428548968 	train_accuracy	 0.85052821508334
valid_loss	 0.3617741836070446 	train_loss	 0.3864288874293652
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 201
valid_auc	 0.6976568936754391 	train_auc	 0.7100517206592647
valid_accuracy	 0.8680594424285112 	train_accuracy	 0.8504125919660189
valid_loss	 0.3614817607949853 	train_loss	 0.38653733291632114
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 202
valid_auc	 0.6976771304302747 	train_auc	 0.7103382651316711
valid_accuracy	 0.8679462427127683 	train_accuracy	 0.850506916088044
valid_loss	 0.36151815298220497 	train_loss	 0.3863958744722713
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 203
valid_auc	 0.6979329699909199 	train_auc	 0.71043427763747
valid_accuracy	 0.8678959317279936 	train_accuracy	 0.8505084374448508
valid_loss	 0.36150948587252507 	train_loss	 0.3863576593117835
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 204
valid_auc	 0.6975694307046858 	train_auc	 0.7103272537449656
valid_accuracy	 0.8678896428548968 	train_accuracy	 0.8503365241256763
valid_loss	 0.3615609712563812 	train_loss	 0.3864400198485037
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 205
valid_auc	 0.6980458919667218 	train_auc	 0.7103826989975618
valid_accuracy	 0.8677890208853476 	train_accuracy	 0.8505099588016577
valid_loss	 0.36153783478276363 	train_loss	 0.38634508562068415
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 206
valid_auc	 0.6979256964543887 	train_auc	 0.7104256086503923
valid_accuracy	 0.8679399538396715 	train_accuracy	 0.8505419072946017
valid_loss	 0.36149066890541814 	train_loss	 0.3863810741553238
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 207
valid_auc	 0.6979025819723131 	train_auc	 0.7107885446765372
valid_accuracy	 0.8679462427127683 	train_accuracy	 0.850601240210069
valid_loss	 0.36166937097168866 	train_loss	 0.3862337601774213
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 208
valid_auc	 0.697977474305611 	train_auc	 0.7106757010532623
valid_accuracy	 0.8676695322965078 	train_accuracy	 0.8504262841772806
valid_loss	 0.36151532127610275 	train_loss	 0.3863020491009426
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 209
valid_auc	 0.6981433386863822 	train_auc	 0.7108251084384034
valid_accuracy	 0.867663243423411 	train_accuracy	 0.8504840957359412
valid_loss	 0.3615746135488404 	train_loss	 0.38620179420849277
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 210
valid_auc	 0.6975107844014466 	train_auc	 0.71079709286823
valid_accuracy	 0.8678519096163159 	train_accuracy	 0.8504308482477012
valid_loss	 0.3615606485810761 	train_loss	 0.38620711222203297
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 211
valid_auc	 0.6972590931460231 	train_auc	 0.7112082562606672
valid_accuracy	 0.8678770651087032 	train_accuracy	 0.8503623871913928
valid_loss	 0.3616019275035411 	train_loss	 0.3860969244107762
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 212
valid_auc	 0.6974883382659987 	train_auc	 0.7110169038227331
valid_accuracy	 0.8678204652508317 	train_accuracy	 0.8504749675951
valid_loss	 0.36193979171121754 	train_loss	 0.38616969014243124
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 213
valid_auc	 0.6972744795062397 	train_auc	 0.7112911668793033
valid_accuracy	 0.8677198432812824 	train_accuracy	 0.850704692472935
valid_loss	 0.36172636906339406 	train_loss	 0.3860447549945313
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 214
valid_auc	 0.6972038348223575 	train_auc	 0.7108813420767549
valid_accuracy	 0.8680028425706398 	train_accuracy	 0.8506803507640254
valid_loss	 0.36166090013195834 	train_loss	 0.3862071121460538
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 215
valid_auc	 0.6980310994449878 	train_auc	 0.7112973268412628
valid_accuracy	 0.8677890208853476 	train_accuracy	 0.850496266590396
valid_loss	 0.36159501074449124 	train_loss	 0.3860756295447199
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 216
valid_auc	 0.6978635182937784 	train_auc	 0.7111293257910472
valid_accuracy	 0.8676758211696046 	train_accuracy	 0.8505495140786359
valid_loss	 0.3615979030757127 	train_loss	 0.3860534667843388
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 217
valid_auc	 0.6976679239640424 	train_auc	 0.7114081477332685
valid_accuracy	 0.8677890208853476 	train_accuracy	 0.8505677703603182
valid_loss	 0.36170310502339975 	train_loss	 0.38597097171503403
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 218
valid_auc	 0.697708035209972 	train_auc	 0.7112556154275586
valid_accuracy	 0.8677512876467666 	train_accuracy	 0.850506916088044
valid_loss	 0.3615770358849891 	train_loss	 0.38605179299744524
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 219
valid_auc	 0.6979657056155951 	train_auc	 0.711570618119695
valid_accuracy	 0.8679776870782524 	train_accuracy	 0.8505266937265331
valid_loss	 0.3615213548972597 	train_loss	 0.3859245803511718
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 220
valid_auc	 0.6977899265130033 	train_auc	 0.7117361745318178
valid_accuracy	 0.8677953097584444 	train_accuracy	 0.8504688821678726
valid_loss	 0.36157321842768514 	train_loss	 0.38584258523156173
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 221
valid_auc	 0.6973832370762091 	train_auc	 0.7116566682399795
valid_accuracy	 0.8677953097584444 	train_accuracy	 0.8505951547828415
valid_loss	 0.3618033629569437 	train_loss	 0.38590274737773533
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 222
valid_auc	 0.6981301216265346 	train_auc	 0.7116726651056141
valid_accuracy	 0.8677512876467666 	train_accuracy	 0.8505723344307388
valid_loss	 0.3616186460423656 	train_loss	 0.3859025423654944
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 223
valid_auc	 0.6978091309446389 	train_auc	 0.7114732797880736
valid_accuracy	 0.8678141763777348 	train_accuracy	 0.8506560090551157
valid_loss	 0.36152473081909997 	train_loss	 0.38595458991478393
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 224
valid_auc	 0.6978240957771644 	train_auc	 0.7116412791022323
valid_accuracy	 0.8677135544081856 	train_accuracy	 0.8504917025199754
valid_loss	 0.3614883777389622 	train_loss	 0.3858607264246014
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 225
valid_auc	 0.6978066644681044 	train_auc	 0.7118698066549509
valid_accuracy	 0.8678896428548968 	train_accuracy	 0.8506225392053649
valid_loss	 0.3615476050584647 	train_loss	 0.38578750721939475
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 226
valid_auc	 0.6978380656262043 	train_auc	 0.7118552275002276
valid_accuracy	 0.867845620743219 	train_accuracy	 0.8506073256372964
valid_loss	 0.36153784923788734 	train_loss	 0.3858046860865569


Start testing ......................
 Best epoch: 184
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt

test_auc	 0.6820510418860781
test_accuracy	 0.8446104497212116
test_loss	 0.40453761525911314
