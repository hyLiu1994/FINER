nohup: ignoring input
	 max_iter 	 300
	 train_set 	 3
	 seed 	 224
	 optim 	 adam
	 batch_size 	 32
	 lr 	 1e-05
	 maxgradnorm 	 -1
	 final_fc_dim 	 512
	 d_model 	 256
	 d_ff 	 1024
	 dropout 	 0.05
	 n_block 	 1
	 n_head 	 8
	 kq_same 	 1
	 l2 	 1e-05
	 q_embed_dim 	 50
	 qa_embed_dim 	 256
	 memory_size 	 50
	 init_std 	 0.1
	 hidden_dim 	 512
	 lamda_r 	 0.1
	 lamda_w1 	 0.1
	 lamda_w2 	 0.1
	 model 	 akt_cid
	 dataset 	 Algebra08
	 n_question 	 424
	 seqlen 	 200
	 data_dir 	 data/Algebra08
	 data_name 	 Algebra08
	 save 	 Algebra08
	 load 	 Algebra08


train_q_data.shape (3127, 200)
train_qa_data.shape (3127, 200)
valid_q_data.shape (1059, 200)
valid_qa_data.shape (1059, 200)




/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 1
valid_auc	 0.5432029817503504 	train_auc	 0.5019764042111329
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8411282135254626
valid_loss	 0.43087555953151574 	train_loss	 0.5382270998402208
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 2
valid_auc	 0.6146487700934291 	train_auc	 0.5635242136430978
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507073849680694
valid_loss	 0.4044182640524033 	train_loss	 0.420316822545846
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 3
valid_auc	 0.6485912585107996 	train_auc	 0.6374464649896209
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507073849680694
valid_loss	 0.3965408636624574 	train_loss	 0.4073191809394374
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 4
valid_auc	 0.6594755532694753 	train_auc	 0.659518152874736
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507073849680694
valid_loss	 0.3935080295543018 	train_loss	 0.40100525637758877
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 5
valid_auc	 0.6653148564922667 	train_auc	 0.6690860702131837
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507073849680694
valid_loss	 0.39155107275786694 	train_loss	 0.39798302137513897
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 6
valid_auc	 0.6683064436553632 	train_auc	 0.6738637783539748
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507073849680694
valid_loss	 0.39029431029302636 	train_loss	 0.39625382501237
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 7
valid_auc	 0.6704612194944006 	train_auc	 0.6772191164175426
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507073849680694
valid_loss	 0.3894888842423363 	train_loss	 0.3951529276568857
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 8
valid_auc	 0.6719357089801536 	train_auc	 0.6794248619169583
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507073849680694
valid_loss	 0.38900075669350315 	train_loss	 0.39440019900009426
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 9
valid_auc	 0.6733955085805803 	train_auc	 0.6808746838177056
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507090224332733
valid_loss	 0.38848869131732905 	train_loss	 0.3938890789246999
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 10
valid_auc	 0.674474287557266 	train_auc	 0.6822954421765246
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507057475028655
valid_loss	 0.3881326131740971 	train_loss	 0.3934048909274976
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 11
valid_auc	 0.675259091349531 	train_auc	 0.6837691329297277
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8507073849680694
valid_loss	 0.3878030671249945 	train_loss	 0.39292084596788535
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 12
valid_auc	 0.6760289385609963 	train_auc	 0.6842309301433485
valid_accuracy	 0.8555824121311747 	train_accuracy	 0.8507057475028655
valid_loss	 0.3876724819642767 	train_loss	 0.3927389885467574
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 13
valid_auc	 0.6769144106088342 	train_auc	 0.6853139471491247
valid_accuracy	 0.8556018655863514 	train_accuracy	 0.8507270345505158
valid_loss	 0.38729220755080385 	train_loss	 0.39230799583131054
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 14
valid_auc	 0.6775103367613899 	train_auc	 0.6857883838709127
valid_accuracy	 0.8555726854035862 	train_accuracy	 0.8507663337154086
valid_loss	 0.3871233685412355 	train_loss	 0.3921291263397482
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 15
valid_auc	 0.6781177127268825 	train_auc	 0.6868935496965588
valid_accuracy	 0.8555824121311747 	train_accuracy	 0.8507810709022433
valid_loss	 0.38695133520395003 	train_loss	 0.3918185507673334
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 16
valid_auc	 0.6787974234736054 	train_auc	 0.6874113533224809
valid_accuracy	 0.8555726854035862 	train_accuracy	 0.8508138202063206
valid_loss	 0.38698859976293587 	train_loss	 0.3915980829608317
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 17
valid_auc	 0.6790739398686942 	train_auc	 0.6879742895922094
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8508891436056983
valid_loss	 0.38667791169347016 	train_loss	 0.39142094656708554
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 18
valid_auc	 0.6796243402615947 	train_auc	 0.6883875485724501
valid_accuracy	 0.8555678220397921 	train_accuracy	 0.8508678565580482
valid_loss	 0.3865735460497175 	train_loss	 0.3912426810734711
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 19
valid_auc	 0.6803034553948097 	train_auc	 0.6888123771878168
valid_accuracy	 0.8556602259518818 	train_accuracy	 0.8509530047486491
valid_loss	 0.3862273522277369 	train_loss	 0.39111823917853195
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 20
valid_auc	 0.6807979460397404 	train_auc	 0.6889275306486783
valid_accuracy	 0.8556796794070587 	train_accuracy	 0.8510659898477158
valid_loss	 0.3860877661859633 	train_loss	 0.3910507079717507
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 21
valid_auc	 0.681063572720677 	train_auc	 0.689444836669052
valid_accuracy	 0.8557088595898239 	train_accuracy	 0.851123301129851
valid_loss	 0.38596159432571037 	train_loss	 0.39082908183217
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 22
valid_auc	 0.6812253627731873 	train_auc	 0.6902217154359602
valid_accuracy	 0.8555970022225573 	train_accuracy	 0.851074177173735
valid_loss	 0.3862224805857664 	train_loss	 0.3905969268142636
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 23
valid_auc	 0.6815943941622433 	train_auc	 0.6905244120157137
valid_accuracy	 0.8557185863174123 	train_accuracy	 0.8510905518257738
valid_loss	 0.38591888774898225 	train_loss	 0.3904900606806598
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 24
valid_auc	 0.6822190099893767 	train_auc	 0.6907682456064171
valid_accuracy	 0.8555386418570269 	train_accuracy	 0.8512035369248403
valid_loss	 0.38566907637373454 	train_loss	 0.3904133135061717
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 25
valid_auc	 0.6822967725882743 	train_auc	 0.6912806797792379
valid_accuracy	 0.8556991328622355 	train_accuracy	 0.8511413132470935
valid_loss	 0.3856380454749508 	train_loss	 0.3902296095160029
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 26
valid_auc	 0.6826673379070719 	train_auc	 0.6918386385684329
valid_accuracy	 0.8556894061346471 	train_accuracy	 0.8511724250859669
valid_loss	 0.38548368043817527 	train_loss	 0.3900622682978796
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 27
valid_auc	 0.6829347309429509 	train_auc	 0.6913776481323785
valid_accuracy	 0.8557720833191486 	train_accuracy	 0.8512919600458491
valid_loss	 0.38550248008571836 	train_loss	 0.3901283231176148
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 28
valid_auc	 0.6833301231596823 	train_auc	 0.6921377615613211
valid_accuracy	 0.8556796794070587 	train_accuracy	 0.8512755853938104
valid_loss	 0.3854256867128538 	train_loss	 0.38991521369828275
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 29
valid_auc	 0.6833724118144855 	train_auc	 0.6929393670171834
valid_accuracy	 0.8556602259518818 	train_accuracy	 0.8512690355329949
valid_loss	 0.3852992990759869 	train_loss	 0.3896422476945965
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 30
valid_auc	 0.683809049740155 	train_auc	 0.6931822351116735
valid_accuracy	 0.8556796794070587 	train_accuracy	 0.8512935975110529
valid_loss	 0.38513159197231134 	train_loss	 0.38958618048715293
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 31
valid_auc	 0.6841638066991441 	train_auc	 0.69305505189417
valid_accuracy	 0.8556602259518818 	train_accuracy	 0.8512706729981988
valid_loss	 0.3850435682729471 	train_loss	 0.38952833557493505
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 32
valid_auc	 0.6843668581598239 	train_auc	 0.6936777352736596
valid_accuracy	 0.8555872754949688 	train_accuracy	 0.8513721958408383
valid_loss	 0.3850738544355003 	train_loss	 0.3894176358439727
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 33
valid_auc	 0.6844418845933561 	train_auc	 0.6937188383153334
valid_accuracy	 0.8555970022225573 	train_accuracy	 0.851388570492877
valid_loss	 0.38494873297576915 	train_loss	 0.3893665874881762
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 34
valid_auc	 0.6846671994781452 	train_auc	 0.6943622097457866
valid_accuracy	 0.8556359091329109 	train_accuracy	 0.8514098575405272
valid_loss	 0.38501280895554235 	train_loss	 0.38914195220255915
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 35
valid_auc	 0.684927096035491 	train_auc	 0.6943474383556889
valid_accuracy	 0.8556650893156761 	train_accuracy	 0.8513214344195186
valid_loss	 0.38481924435422077 	train_loss	 0.38910623979257286
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 36
valid_auc	 0.6852287207659473 	train_auc	 0.6947641315320167
valid_accuracy	 0.8555678220397921 	train_accuracy	 0.8513803831668577
valid_loss	 0.3846814173887321 	train_loss	 0.38902124879214395
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 37
valid_auc	 0.685455181215965 	train_auc	 0.6949841029415985
valid_accuracy	 0.8556699526794703 	train_accuracy	 0.8513459963975766
valid_loss	 0.38458270892298485 	train_loss	 0.38889448533780613
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 38
valid_auc	 0.6856420161368298 	train_auc	 0.6952809199328384
valid_accuracy	 0.8555970022225573 	train_accuracy	 0.8514065826101196
valid_loss	 0.38467576092130185 	train_loss	 0.3888015138752169
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 39
valid_auc	 0.685417690207867 	train_auc	 0.695439546395275
valid_accuracy	 0.8556310457691166 	train_accuracy	 0.8514426068446046
valid_loss	 0.38482872088063774 	train_loss	 0.38873470304984326
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 40
valid_auc	 0.6859743786214213 	train_auc	 0.695507196471292
valid_accuracy	 0.8555240517656443 	train_accuracy	 0.8514245947273621
valid_loss	 0.38445010020150855 	train_loss	 0.38869446114547745
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 41
valid_auc	 0.6859889669403814 	train_auc	 0.6962931914056293
valid_accuracy	 0.8555678220397921 	train_accuracy	 0.8514033076797118
valid_loss	 0.3845964730306542 	train_loss	 0.38843366034144106
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 42
valid_auc	 0.6863441786984344 	train_auc	 0.696093852406815
valid_accuracy	 0.85551918840185 	train_accuracy	 0.85137710823645
valid_loss	 0.38429368056140006 	train_loss	 0.388523962259784
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 43
valid_auc	 0.6865484463708822 	train_auc	 0.6969153924223029
valid_accuracy	 0.8556018655863514 	train_accuracy	 0.8514426068446046
valid_loss	 0.3844954394423572 	train_loss	 0.38823278942323836
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 44
valid_auc	 0.6863429217069567 	train_auc	 0.6964526398144736
valid_accuracy	 0.85551918840185 	train_accuracy	 0.851462256427051
valid_loss	 0.38426214983942014 	train_loss	 0.388300677938736
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 45
valid_auc	 0.6867792587626077 	train_auc	 0.6965545320030181
valid_accuracy	 0.8555824121311747 	train_accuracy	 0.8514753561486819
valid_loss	 0.384337560052194 	train_loss	 0.3882965218803789
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 46
valid_auc	 0.6868122378691501 	train_auc	 0.6970547336190741
valid_accuracy	 0.855616455677734 	train_accuracy	 0.85152120517439
valid_loss	 0.38447518235911776 	train_loss	 0.3881262791730767
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 47
valid_auc	 0.6869491276011039 	train_auc	 0.6972384054639124
valid_accuracy	 0.85551918840185 	train_accuracy	 0.8514393319141969
valid_loss	 0.3840268083108175 	train_loss	 0.3880545354243603
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 48
valid_auc	 0.68701059746148 	train_auc	 0.6969508047840101
valid_accuracy	 0.8555678220397921 	train_accuracy	 0.8514655313574586
valid_loss	 0.38407127835653115 	train_loss	 0.38808421885672656
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 49
valid_auc	 0.6871142024305217 	train_auc	 0.6974447771681799
valid_accuracy	 0.8555726854035862 	train_accuracy	 0.8515293925004094
valid_loss	 0.384260277178795 	train_loss	 0.3879894535935042
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 50
valid_auc	 0.687403744209542 	train_auc	 0.6977269236732557
valid_accuracy	 0.8556115923139399 	train_accuracy	 0.8514295071229736
valid_loss	 0.38395814244397614 	train_loss	 0.38788889365927554
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 51
valid_auc	 0.6874544317614802 	train_auc	 0.6979228898058142
valid_accuracy	 0.855543505220821 	train_accuracy	 0.851557229408875
valid_loss	 0.3840970062543716 	train_loss	 0.3877672748407387
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 52
valid_auc	 0.687713341468994 	train_auc	 0.6982268007901145
valid_accuracy	 0.855543505220821 	train_accuracy	 0.8515081054527591
valid_loss	 0.3838307557483471 	train_loss	 0.3876881227039736
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 53
valid_auc	 0.6875912124603603 	train_auc	 0.6980870541514356
valid_accuracy	 0.8555337784932326 	train_accuracy	 0.8516129032258064
valid_loss	 0.38378973252140813 	train_loss	 0.3876881677048857
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 54
valid_auc	 0.6879074199576094 	train_auc	 0.6988183416202933
valid_accuracy	 0.8556067289501457 	train_accuracy	 0.8515998035041755
valid_loss	 0.38378272664849333 	train_loss	 0.38747742551515546
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 55
valid_auc	 0.6881515807162264 	train_auc	 0.6986521090343167
valid_accuracy	 0.8555289151294384 	train_accuracy	 0.8516145406910103
valid_loss	 0.3836118125754742 	train_loss	 0.38749551197313703
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 56
valid_auc	 0.6883408053663771 	train_auc	 0.6989235231250744
valid_accuracy	 0.8555726854035862 	train_accuracy	 0.8516702145079417
valid_loss	 0.38357116718626555 	train_loss	 0.38744457469073973
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 57
valid_auc	 0.6882901898968835 	train_auc	 0.6988457383525283
valid_accuracy	 0.8556894061346471 	train_accuracy	 0.8515474046176519
valid_loss	 0.38365195387336165 	train_loss	 0.3873656022022273
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 58
valid_auc	 0.6882131543446903 	train_auc	 0.6990734478028444
valid_accuracy	 0.8556407724967051 	train_accuracy	 0.8515768789913214
valid_loss	 0.38353415417323633 	train_loss	 0.3873415068421569
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 59
valid_auc	 0.6885767664357839 	train_auc	 0.6991408682561735
valid_accuracy	 0.8557137229536181 	train_accuracy	 0.851606353364991
valid_loss	 0.38347883944630623 	train_loss	 0.3872701057050983
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 60
valid_auc	 0.6886451899067721 	train_auc	 0.6996896592701005
valid_accuracy	 0.8557088595898239 	train_accuracy	 0.8516292778778451
valid_loss	 0.3835347124915697 	train_loss	 0.3871029671924093
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 61
valid_auc	 0.6887875584788936 	train_auc	 0.6996106746918297
valid_accuracy	 0.8557088595898239 	train_accuracy	 0.8516718519731455
valid_loss	 0.38331712517961164 	train_loss	 0.38710173700505324
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 62
valid_auc	 0.6888349886318519 	train_auc	 0.6999566022789452
valid_accuracy	 0.8557039962260297 	train_accuracy	 0.8516456525298838
valid_loss	 0.38372267275774796 	train_loss	 0.3870062662016287
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 63
valid_auc	 0.6888545168478661 	train_auc	 0.700171919809939
valid_accuracy	 0.8557769466829427 	train_accuracy	 0.851714426068446
valid_loss	 0.383406381161802 	train_loss	 0.386876324947049
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 64
valid_auc	 0.6890028742937091 	train_auc	 0.7003278287802835
valid_accuracy	 0.8557234496812065 	train_accuracy	 0.8517422629769117
valid_loss	 0.3834205035819845 	train_loss	 0.3868225012120943
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 65
valid_auc	 0.6891373400261045 	train_auc	 0.7006753424138328
valid_accuracy	 0.8557234496812065 	train_accuracy	 0.8517422629769117
valid_loss	 0.383278944186426 	train_loss	 0.38673152625050033
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 66
valid_auc	 0.6893313549519798 	train_auc	 0.7006543173760313
valid_accuracy	 0.8558061268657079 	train_accuracy	 0.8517177009988538
valid_loss	 0.38322972226487095 	train_loss	 0.3866882384920333
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 67
valid_auc	 0.6892782646518812 	train_auc	 0.7006559620394277
valid_accuracy	 0.8557477665001775 	train_accuracy	 0.8517700998853774
valid_loss	 0.38323563322585247 	train_loss	 0.38666510350349054
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 68
valid_auc	 0.6892684897745844 	train_auc	 0.7007465705207523
valid_accuracy	 0.8558255803208847 	train_accuracy	 0.8517553626985427
valid_loss	 0.38325181815446085 	train_loss	 0.38662818664987453
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 69
valid_auc	 0.6895184943804901 	train_auc	 0.7011821710295368
valid_accuracy	 0.8557720833191486 	train_accuracy	 0.851871622728017
valid_loss	 0.38316100174065587 	train_loss	 0.3864858715832587
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 70
valid_auc	 0.6894986774517882 	train_auc	 0.7011909046508248
valid_accuracy	 0.8558158535932964 	train_accuracy	 0.8517733748157852
valid_loss	 0.38308030775169155 	train_loss	 0.38645970708367816
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 71
valid_auc	 0.6893514336940767 	train_auc	 0.7015124791226048
valid_accuracy	 0.8557818100467369 	train_accuracy	 0.8517602750941542
valid_loss	 0.3832573571089467 	train_loss	 0.3864098522772638
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 72
valid_auc	 0.689829721009521 	train_auc	 0.7014007368776165
valid_accuracy	 0.8558498971398557 	train_accuracy	 0.8517962993286393
valid_loss	 0.3833050151563331 	train_loss	 0.3863646470819038
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 73
valid_auc	 0.6897428030785894 	train_auc	 0.701257039056653
valid_accuracy	 0.8558109902295021 	train_accuracy	 0.851824136237105
valid_loss	 0.3830622182182147 	train_loss	 0.38641366809537314
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 74
valid_auc	 0.6895557677053482 	train_auc	 0.7016013583032552
valid_accuracy	 0.8558742139588268 	train_accuracy	 0.8518044866546586
valid_loss	 0.383290808868469 	train_loss	 0.38630616646830074
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 75
valid_auc	 0.6896470321215475 	train_auc	 0.7018693030678607
valid_accuracy	 0.8558498971398557 	train_accuracy	 0.8517782872113968
valid_loss	 0.38321700506147377 	train_loss	 0.3862157239391378
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 76
valid_auc	 0.689999030515049 	train_auc	 0.701724165822039
valid_accuracy	 0.8558401704122673 	train_accuracy	 0.851824136237105
valid_loss	 0.38300795135559085 	train_loss	 0.3862472988408536
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 77
valid_auc	 0.6897518085978397 	train_auc	 0.7020381771117168
valid_accuracy	 0.8558888040502094 	train_accuracy	 0.8518896348452596
valid_loss	 0.3833573537788979 	train_loss	 0.3861204347593854
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 78
valid_auc	 0.6899667224549051 	train_auc	 0.7021768208268035
valid_accuracy	 0.8558158535932964 	train_accuracy	 0.8519502210578025
valid_loss	 0.38297782020027277 	train_loss	 0.38610924106498745
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 79
valid_auc	 0.6901718915886845 	train_auc	 0.702205251446986
valid_accuracy	 0.855927710960563 	train_accuracy	 0.8518765351236286
valid_loss	 0.382849446146352 	train_loss	 0.3860712584348989
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 80
valid_auc	 0.6900813417746772 	train_auc	 0.7027257523715462
valid_accuracy	 0.8559423010519456 	train_accuracy	 0.8519371213361716
valid_loss	 0.38283567879298824 	train_loss	 0.38591520036885335
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 81
valid_auc	 0.6902646069393009 	train_auc	 0.7027856048820585
valid_accuracy	 0.8558936674140035 	train_accuracy	 0.8519977075487146
valid_loss	 0.3834704141976462 	train_loss	 0.3858617289492713
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 82
valid_auc	 0.690374377685594 	train_auc	 0.7026783662417384
valid_accuracy	 0.8558790773226209 	train_accuracy	 0.8518634354019977
valid_loss	 0.38277886288571655 	train_loss	 0.38590414216058105
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 83
valid_auc	 0.6901835109341707 	train_auc	 0.7028536355724849
valid_accuracy	 0.8560395683278297 	train_accuracy	 0.851968233175045
valid_loss	 0.38299776167011834 	train_loss	 0.3858394247059894
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 84
valid_auc	 0.6901908056201493 	train_auc	 0.7032670074481723
valid_accuracy	 0.8560347049640354 	train_accuracy	 0.8519862452922875
valid_loss	 0.38278831560292054 	train_loss	 0.3856695574621327
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 85
valid_auc	 0.6900488256039953 	train_auc	 0.7033143914351306
valid_accuracy	 0.8559374376881513 	train_accuracy	 0.8520681185524808
valid_loss	 0.3832239289076339 	train_loss	 0.38561666407877837
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 86
valid_auc	 0.6902107642248382 	train_auc	 0.7032197231089944
valid_accuracy	 0.8560055247812702 	train_accuracy	 0.8519518585230064
valid_loss	 0.3831470681382703 	train_loss	 0.38568197586447694
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 87
valid_auc	 0.6906495342783874 	train_auc	 0.7033205148545854
valid_accuracy	 0.8559860713260934 	train_accuracy	 0.8520222695267725
valid_loss	 0.382741209024247 	train_loss	 0.3856434519873727
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 88
valid_auc	 0.6904223432397657 	train_auc	 0.7032038937001414
valid_accuracy	 0.855903394141592 	train_accuracy	 0.852089405600131
valid_loss	 0.38394717803379624 	train_loss	 0.3856281921498182
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 89
valid_auc	 0.6904250671520724 	train_auc	 0.703311183061604
valid_accuracy	 0.8559179842329746 	train_accuracy	 0.8519534959882102
valid_loss	 0.38319932492926867 	train_loss	 0.3856243368317534
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 90
valid_auc	 0.6902597858394763 	train_auc	 0.7035781417459734
valid_accuracy	 0.8560347049640354 	train_accuracy	 0.8520795808089078
valid_loss	 0.3832229549077783 	train_loss	 0.38555258174060697
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 91
valid_auc	 0.6903127310174151 	train_auc	 0.7040279639142285
valid_accuracy	 0.8560930653295659 	train_accuracy	 0.8520255444571803
valid_loss	 0.3828387555928029 	train_loss	 0.3853587962742556
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 92
valid_auc	 0.6905370101358659 	train_auc	 0.7035870339909056
valid_accuracy	 0.8561319722399194 	train_accuracy	 0.8519665957098411
valid_loss	 0.38319413573028094 	train_loss	 0.3855325587094463
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 93
valid_auc	 0.690688886985538 	train_auc	 0.7040188754666165
valid_accuracy	 0.8560055247812702 	train_accuracy	 0.8520959554609464
valid_loss	 0.38257729323971046 	train_loss	 0.38539031678756885
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 94
valid_auc	 0.6907622432697813 	train_auc	 0.7040252722946695
valid_accuracy	 0.856146562331302 	train_accuracy	 0.8521172425085967
valid_loss	 0.3828044657066032 	train_loss	 0.3853604089579929
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 95
valid_auc	 0.6907090116766036 	train_auc	 0.7041590308406463
valid_accuracy	 0.8560395683278297 	train_accuracy	 0.8520713934828885
valid_loss	 0.38290116710282596 	train_loss	 0.38530122919029486
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 96
valid_auc	 0.6904204153933433 	train_auc	 0.7042657297995646
valid_accuracy	 0.856073611874389 	train_accuracy	 0.8520681185524808
valid_loss	 0.38271782009050986 	train_loss	 0.3852733391049518
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 97
valid_auc	 0.6908223361927256 	train_auc	 0.7039108846016678
valid_accuracy	 0.8561514256950963 	train_accuracy	 0.8521352546258392
valid_loss	 0.38261225444362124 	train_loss	 0.38533684200393586
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 98
valid_auc	 0.6908500187233433 	train_auc	 0.7043954257773056
valid_accuracy	 0.8561903326054499 	train_accuracy	 0.8521745537907319
valid_loss	 0.3830182878908456 	train_loss	 0.38510389404046247
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 99
valid_auc	 0.6909509238075597 	train_auc	 0.7047069855943533
valid_accuracy	 0.8560347049640354 	train_accuracy	 0.8520746684132963
valid_loss	 0.38282019958256125 	train_loss	 0.38507149877574764
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 100
valid_auc	 0.6906401232594872 	train_auc	 0.7041843120209421
valid_accuracy	 0.8561903326054499 	train_accuracy	 0.8521172425085967
valid_loss	 0.3825763785108738 	train_loss	 0.3852481698098585
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 101
valid_auc	 0.6908691323456413 	train_auc	 0.7045345935721604
valid_accuracy	 0.8560590217830064 	train_accuracy	 0.852100867856558
valid_loss	 0.3826793486834509 	train_loss	 0.3851331984322422
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 102
valid_auc	 0.6907428123124175 	train_auc	 0.7044794963191863
valid_accuracy	 0.8561660157864789 	train_accuracy	 0.8520861306697233
valid_loss	 0.38253319900582106 	train_loss	 0.3851232162554187
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 103
valid_auc	 0.6908925292733747 	train_auc	 0.7046118865343519
valid_accuracy	 0.8560784752381833 	train_accuracy	 0.8522122154904208
valid_loss	 0.3828927675849873 	train_loss	 0.38508664471568216
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 104
valid_auc	 0.691048910845076 	train_auc	 0.7049818606720948
valid_accuracy	 0.8561027920571542 	train_accuracy	 0.8521565416734894
valid_loss	 0.3828667886898385 	train_loss	 0.38497802375603146
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 105
valid_auc	 0.690821294299858 	train_auc	 0.7050467988612074
valid_accuracy	 0.8562243761520093 	train_accuracy	 0.8521188799738005
valid_loss	 0.38264713114260335 	train_loss	 0.38494803245827025
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 106
valid_auc	 0.6911941229882773 	train_auc	 0.705031286045176
valid_accuracy	 0.8561319722399194 	train_accuracy	 0.852197478303586
valid_loss	 0.3825230351659801 	train_loss	 0.38495342132080995
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 107
valid_auc	 0.6909264611509308 	train_auc	 0.7051754386146973
valid_accuracy	 0.8561854692416557 	train_accuracy	 0.8521581791386933
valid_loss	 0.3826529571685618 	train_loss	 0.38488813443917647
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 108
valid_auc	 0.6909090200710973 	train_auc	 0.7052991021438069
valid_accuracy	 0.8561903326054499 	train_accuracy	 0.8521581791386933
valid_loss	 0.38263140062518197 	train_loss	 0.3848200594305529
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 109
valid_auc	 0.6910653523433842 	train_auc	 0.7054574745466267
valid_accuracy	 0.8561416989675079 	train_accuracy	 0.8522515146553136
valid_loss	 0.38282713562491905 	train_loss	 0.38472555037991396
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 110
valid_auc	 0.691111752569352 	train_auc	 0.7057660552433787
valid_accuracy	 0.8561173821485368 	train_accuracy	 0.8522073030948092
valid_loss	 0.3827708481271821 	train_loss	 0.38470847171068756
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 111
valid_auc	 0.6911278729992404 	train_auc	 0.7056576023990743
valid_accuracy	 0.8562097860606267 	train_accuracy	 0.8521598166038972
valid_loss	 0.382461508464914 	train_loss	 0.3847182065112802
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 112
valid_auc	 0.6911020646121878 	train_auc	 0.7056421609515433
valid_accuracy	 0.8560784752381833 	train_accuracy	 0.8521270672998199
valid_loss	 0.38267300403693616 	train_loss	 0.38469022178575907
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 113
valid_auc	 0.6912113642858235 	train_auc	 0.7056298645315291
valid_accuracy	 0.8560930653295659 	train_accuracy	 0.8522171278860324
valid_loss	 0.38243334288846625 	train_loss	 0.38470344566102416
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 114
valid_auc	 0.6908577085704536 	train_auc	 0.706291218332916
valid_accuracy	 0.8560784752381833 	train_accuracy	 0.8522384149336827
valid_loss	 0.38270546704751496 	train_loss	 0.38447525670348415
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 115
valid_auc	 0.6908980045716431 	train_auc	 0.7059031191716856
valid_accuracy	 0.8560882019657716 	train_accuracy	 0.852136892091043
valid_loss	 0.383150385124145 	train_loss	 0.384590840429309
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 116
valid_auc	 0.6910955240636597 	train_auc	 0.7059112554551971
valid_accuracy	 0.8561319722399194 	train_accuracy	 0.8522351400032749
valid_loss	 0.3825735043528018 	train_loss	 0.3845712495771439
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 117
valid_auc	 0.6912652461526367 	train_auc	 0.7062392885070974
valid_accuracy	 0.8561562890588905 	train_accuracy	 0.8522515146553136
valid_loss	 0.3826140937963892 	train_loss	 0.38446049583246816
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 118
valid_auc	 0.6911684419181592 	train_auc	 0.7063065811283692
valid_accuracy	 0.8561514256950963 	train_accuracy	 0.8521598166038972
valid_loss	 0.3830668611786803 	train_loss	 0.3844289849852234
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 119
valid_auc	 0.6909603469837912 	train_auc	 0.7063871982729644
valid_accuracy	 0.8562243761520093 	train_accuracy	 0.8522629769117406
valid_loss	 0.38242134315971066 	train_loss	 0.38440553972839564
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 120
valid_auc	 0.6913136226628983 	train_auc	 0.70648361895388
valid_accuracy	 0.8561271088761253 	train_accuracy	 0.8523039135418372
valid_loss	 0.38275631534065924 	train_loss	 0.3843056203546741
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 121
valid_auc	 0.6913848767818188 	train_auc	 0.7068977769703313
valid_accuracy	 0.8562486929709803 	train_accuracy	 0.852172916325528
valid_loss	 0.38238417379391604 	train_loss	 0.3842770457052674
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 122
valid_auc	 0.6914161930143258 	train_auc	 0.706648967218583
valid_accuracy	 0.8562097860606267 	train_accuracy	 0.8523219256590797
valid_loss	 0.38234963385461657 	train_loss	 0.38427509693996253
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 123
valid_auc	 0.6912811010357764 	train_auc	 0.7067059586133058
valid_accuracy	 0.8561757425140673 	train_accuracy	 0.852318650728672
valid_loss	 0.38245328017934266 	train_loss	 0.384247719150317
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 124
valid_auc	 0.6916157493858389 	train_auc	 0.7069020991294804
valid_accuracy	 0.856049295055418 	train_accuracy	 0.8523710496151957
valid_loss	 0.3828507770711376 	train_loss	 0.3842214025146867
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 125
valid_auc	 0.6913912857056969 	train_auc	 0.7065811416611354
valid_accuracy	 0.8561076554209485 	train_accuracy	 0.8522204028164402
valid_loss	 0.3828642257707493 	train_loss	 0.3842882695996947
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 126
valid_auc	 0.6914694602179543 	train_auc	 0.7069684184220542
valid_accuracy	 0.8561514256950963 	train_accuracy	 0.8522384149336827
valid_loss	 0.3829774491785643 	train_loss	 0.38417642926446594
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 127
valid_auc	 0.691492011397481 	train_auc	 0.7073259055211787
valid_accuracy	 0.8562486929709803 	train_accuracy	 0.8522318650728672
valid_loss	 0.38299045697977435 	train_loss	 0.3840351594513807
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 128
valid_auc	 0.6913686841737586 	train_auc	 0.706924231366017
valid_accuracy	 0.8561222455123311 	train_accuracy	 0.8523497625675455
valid_loss	 0.3830992350423429 	train_loss	 0.38415922540606146
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 129
valid_auc	 0.6916803579436922 	train_auc	 0.7071672216451534
valid_accuracy	 0.8562146494244209 	train_accuracy	 0.8523448501719338
valid_loss	 0.3825516892797893 	train_loss	 0.3840806671732607
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 130
valid_auc	 0.6915042266436562 	train_auc	 0.7073560567756346
valid_accuracy	 0.8563167800640992 	train_accuracy	 0.8523628622891763
valid_loss	 0.38236296876742343 	train_loss	 0.3840150128256021
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 131
valid_auc	 0.69166620633139 	train_auc	 0.7073366431395605
valid_accuracy	 0.8562486929709803 	train_accuracy	 0.8523841493368266
valid_loss	 0.3823469171943052 	train_loss	 0.38399598034069843
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 132
valid_auc	 0.6915243439637415 	train_auc	 0.707355909362366
valid_accuracy	 0.8561416989675079 	train_accuracy	 0.8524299983625347
valid_loss	 0.38242708599062697 	train_loss	 0.3840039103474289
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 133
valid_auc	 0.6916513133133306 	train_auc	 0.7074509740206599
valid_accuracy	 0.8562438296071861 	train_accuracy	 0.8523481251023416
valid_loss	 0.38227765228119803 	train_loss	 0.38398531450366163
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 134
valid_auc	 0.6917782306831488 	train_auc	 0.7077467213922001
valid_accuracy	 0.8562341028795977 	train_accuracy	 0.8523006386114295
valid_loss	 0.38254211458149473 	train_loss	 0.38389144201878034
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 135
valid_auc	 0.6915681419464427 	train_auc	 0.7074497353903021
valid_accuracy	 0.8563070533365107 	train_accuracy	 0.8523956115932536
valid_loss	 0.3825179804682748 	train_loss	 0.3839713242098543
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 136
valid_auc	 0.6915575762682475 	train_auc	 0.7077832892670379
valid_accuracy	 0.8562632830623629 	train_accuracy	 0.8524250859669232
valid_loss	 0.3824684166968874 	train_loss	 0.38382676517890696
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 137
valid_auc	 0.6915192573171679 	train_auc	 0.707990477344193
valid_accuracy	 0.8562097860606267 	train_accuracy	 0.8523006386114295
valid_loss	 0.3826102548871032 	train_loss	 0.38379330151173235
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 138
valid_auc	 0.6914166749041362 	train_auc	 0.7081517465839982
valid_accuracy	 0.8563021899727166 	train_accuracy	 0.8525085966923203
valid_loss	 0.3822498218491384 	train_loss	 0.3836867260436677
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 139
valid_auc	 0.6917244827384342 	train_auc	 0.7082023486559192
valid_accuracy	 0.8562486929709803 	train_accuracy	 0.8523137383330605
valid_loss	 0.38231850067055084 	train_loss	 0.3836963550757108
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 140
valid_auc	 0.6916913001162507 	train_auc	 0.7077735748751361
valid_accuracy	 0.8562243761520093 	train_accuracy	 0.8522973636810218
valid_loss	 0.38223458532010496 	train_loss	 0.3838820245483058
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 141
valid_auc	 0.6915300454649539 	train_auc	 0.7081924200424009
valid_accuracy	 0.8561514256950963 	train_accuracy	 0.8524234485017194
valid_loss	 0.3826797277261948 	train_loss	 0.38368481798545157
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 142
valid_auc	 0.6917909089609118 	train_auc	 0.7081175094644155
valid_accuracy	 0.8562584196985688 	train_accuracy	 0.8523808744064189
valid_loss	 0.3823032839578251 	train_loss	 0.3837163838729615
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 143
valid_auc	 0.6916909689007673 	train_auc	 0.7079132591389488
valid_accuracy	 0.8563313701554818 	train_accuracy	 0.8524332732929425
valid_loss	 0.38248011742278415 	train_loss	 0.38376067277595804
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 144
valid_auc	 0.6914038069911497 	train_auc	 0.7080104338917771
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.852451285410185
valid_loss	 0.3825256248501768 	train_loss	 0.3836708833191985
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 145
valid_auc	 0.6915278133980672 	train_auc	 0.7081202613159912
valid_accuracy	 0.8562341028795977 	train_accuracy	 0.8524201735713116
valid_loss	 0.3827768836972548 	train_loss	 0.3836697724627087
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 146
valid_auc	 0.6920355692231104 	train_auc	 0.7084476551864919
valid_accuracy	 0.8562924632451281 	train_accuracy	 0.8525495333224169
valid_loss	 0.38257218931741815 	train_loss	 0.3835699481186424
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 147
valid_auc	 0.6914478926335412 	train_auc	 0.7089863079148806
valid_accuracy	 0.8562146494244209 	train_accuracy	 0.8523874242672344
valid_loss	 0.3823609359541281 	train_loss	 0.383412060586008
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 148
valid_auc	 0.6916726278912342 	train_auc	 0.7087387649355434
valid_accuracy	 0.8562730097899514 	train_accuracy	 0.8524676600622236
valid_loss	 0.3828814907546489 	train_loss	 0.38344539339819156
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 149
valid_auc	 0.6917448520120317 	train_auc	 0.70868141021699
valid_accuracy	 0.8562146494244209 	train_accuracy	 0.8524905845750778
valid_loss	 0.38245465372716786 	train_loss	 0.3834864443096895
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 150
valid_auc	 0.6917013107691936 	train_auc	 0.7087874374611972
valid_accuracy	 0.8562097860606267 	train_accuracy	 0.8524725724578353
valid_loss	 0.38327505126712963 	train_loss	 0.3834792237642694
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 151
valid_auc	 0.6918424227327453 	train_auc	 0.7088086578888734
valid_accuracy	 0.8562243761520093 	train_accuracy	 0.8525806451612903
valid_loss	 0.38276533011344027 	train_loss	 0.3834539881055435
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 152
valid_auc	 0.6917839657845446 	train_auc	 0.7091712162894507
valid_accuracy	 0.8562584196985688 	train_accuracy	 0.8525953823481252
valid_loss	 0.38238426211313237 	train_loss	 0.3833175195863253
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 153
valid_auc	 0.6915176376160177 	train_auc	 0.7092818206918999
valid_accuracy	 0.8562000593330383 	train_accuracy	 0.8525708203700672
valid_loss	 0.3822970752478 	train_loss	 0.3832876816979531
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 154
valid_auc	 0.6912909920299465 	train_auc	 0.7092343503470502
valid_accuracy	 0.8562097860606267 	train_accuracy	 0.852464385131816
valid_loss	 0.3825227730341946 	train_loss	 0.3832671921305529
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 155
valid_auc	 0.6916781607214404 	train_auc	 0.7092642622673822
valid_accuracy	 0.8561562890588905 	train_accuracy	 0.852536433600786
valid_loss	 0.38276263251660025 	train_loss	 0.3832547708216099
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 156
valid_auc	 0.6916796334816175 	train_auc	 0.7091711863212252
valid_accuracy	 0.8561368356037137 	train_accuracy	 0.8524545603405927
valid_loss	 0.3822702455797705 	train_loss	 0.38326646598446895
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 157
valid_auc	 0.6918514761155048 	train_auc	 0.7090121377174329
valid_accuracy	 0.8561951959692441 	train_accuracy	 0.8525871950221058
valid_loss	 0.3825888688083773 	train_loss	 0.3832630294213425
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 158
valid_auc	 0.6916762204305055 	train_auc	 0.7093856491930494
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.8525184214835435
valid_loss	 0.3822163514641294 	train_loss	 0.3832324655379666
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 159
valid_auc	 0.6917643329388992 	train_auc	 0.7099265801610464
valid_accuracy	 0.8563508236106585 	train_accuracy	 0.8526756181431144
valid_loss	 0.38225771381328355 	train_loss	 0.38300465541716683
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 160
valid_auc	 0.6911339829676401 	train_auc	 0.7095521334318957
valid_accuracy	 0.8562924632451281 	train_accuracy	 0.8524250859669232
valid_loss	 0.38263080033424557 	train_loss	 0.383169666863557
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 161
valid_auc	 0.6918755464828126 	train_auc	 0.7094159958690477
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.8526477812346488
valid_loss	 0.38248389754078527 	train_loss	 0.38317800901959365
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 162
valid_auc	 0.6919294476864835 	train_auc	 0.7101002859716687
valid_accuracy	 0.8562097860606267 	train_accuracy	 0.8526526936302603
valid_loss	 0.382792359656876 	train_loss	 0.3829510753738697
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 163
valid_auc	 0.6919125305206213 	train_auc	 0.709672131126052
valid_accuracy	 0.8563313701554818 	train_accuracy	 0.8526625184214836
valid_loss	 0.3822423577722521 	train_loss	 0.3830768994859223
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 164
valid_auc	 0.691751127013811 	train_auc	 0.7097082848292456
valid_accuracy	 0.8563459602468644 	train_accuracy	 0.8523956115932536
valid_loss	 0.3822446378362141 	train_loss	 0.38313928971327316
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 165
valid_auc	 0.6918675521280568 	train_auc	 0.7098347723384568
valid_accuracy	 0.8562778731537455 	train_accuracy	 0.8525953823481252
valid_loss	 0.38302561672367286 	train_loss	 0.3830089941705915
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 166
valid_auc	 0.6919910326107356 	train_auc	 0.7097364065201965
valid_accuracy	 0.8562292395158035 	train_accuracy	 0.8525888324873097
valid_loss	 0.38253381898776945 	train_loss	 0.38305622535626643
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 167
valid_auc	 0.6914688487137611 	train_auc	 0.7098152846421254
valid_accuracy	 0.8562827365175397 	train_accuracy	 0.8525216964139513
valid_loss	 0.3824817643623103 	train_loss	 0.38299793660717807
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 168
valid_auc	 0.6920367496329735 	train_auc	 0.7102090860314869
valid_accuracy	 0.8562584196985688 	train_accuracy	 0.8525888324873097
valid_loss	 0.38222445422712364 	train_loss	 0.382892250575212
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 169
valid_auc	 0.6919050319360937 	train_auc	 0.7100216497172821
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.8526183068609792
valid_loss	 0.38272695988432753 	train_loss	 0.3829224411481148
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 170
valid_auc	 0.6916118657407048 	train_auc	 0.7103904746859955
valid_accuracy	 0.8563021899727166 	train_accuracy	 0.8527280170296381
valid_loss	 0.38230101468369204 	train_loss	 0.38280670732712146
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 171
valid_auc	 0.6919686383277921 	train_auc	 0.7100168427569019
valid_accuracy	 0.8562632830623629 	train_accuracy	 0.8526494186998527
valid_loss	 0.38228565666183983 	train_loss	 0.3829230054629941
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 172
valid_auc	 0.6917906976913824 	train_auc	 0.7100934539129333
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.8526035696741444
valid_loss	 0.38227177184603406 	train_loss	 0.38290978237767115
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 173
valid_auc	 0.6919575892281542 	train_auc	 0.7101519777089607
valid_accuracy	 0.8561903326054499 	train_accuracy	 0.8526641558866874
valid_loss	 0.3821848911219391 	train_loss	 0.3828722135631945
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 174
valid_auc	 0.6919716543032319 	train_auc	 0.7105925122712692
valid_accuracy	 0.8562681464261571 	train_accuracy	 0.8526674308170952
valid_loss	 0.3825083255120042 	train_loss	 0.38271282353246516
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 175
valid_auc	 0.692059770544979 	train_auc	 0.7103061609887518
valid_accuracy	 0.8562632830623629 	train_accuracy	 0.8527493040772883
valid_loss	 0.3823443224366698 	train_loss	 0.3827982381075465
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 176
valid_auc	 0.6918963364766557 	train_auc	 0.7108288963036746
valid_accuracy	 0.8562438296071861 	train_accuracy	 0.8525986572785328
valid_loss	 0.3823499111001986 	train_loss	 0.3826416830885254
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 177
valid_auc	 0.6919414693726278 	train_auc	 0.7108128863571104
valid_accuracy	 0.8562341028795977 	train_accuracy	 0.852583920091698
valid_loss	 0.38228023082319745 	train_loss	 0.38268589392094504
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 178
valid_auc	 0.6921396623999456 	train_auc	 0.7108549588640196
valid_accuracy	 0.8562438296071861 	train_accuracy	 0.8527705911249386
valid_loss	 0.38264308598710967 	train_loss	 0.38260364400060104
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 179
valid_auc	 0.6918450601078276 	train_auc	 0.7105247672976307
valid_accuracy	 0.8562584196985688 	train_accuracy	 0.8527542164729
valid_loss	 0.3827441398121319 	train_loss	 0.38277747747400404
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 180
valid_auc	 0.6919951080928145 	train_auc	 0.7103500168214774
valid_accuracy	 0.8563410968830701 	train_accuracy	 0.8526887178647454
valid_loss	 0.38222747375285554 	train_loss	 0.3827571192391834
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 181
valid_auc	 0.6922146655718125 	train_auc	 0.7109527932239315
valid_accuracy	 0.8562730097899514 	train_accuracy	 0.8527525790076961
valid_loss	 0.38273177985806434 	train_loss	 0.3825755311662712
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 182
valid_auc	 0.6920868221388189 	train_auc	 0.7109653135875542
valid_accuracy	 0.8563410968830701 	train_accuracy	 0.8525871950221058
valid_loss	 0.3823160753475226 	train_loss	 0.38257165635988727
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 183
valid_auc	 0.6920273677150871 	train_auc	 0.7108893415812546
valid_accuracy	 0.8562584196985688 	train_accuracy	 0.8527820533813657
valid_loss	 0.382276281829732 	train_loss	 0.3825435068388885
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 184
valid_auc	 0.6919603667475912 	train_auc	 0.7113968321896774
valid_accuracy	 0.8562584196985688 	train_accuracy	 0.852801702963812
valid_loss	 0.38238545126813295 	train_loss	 0.3823991799596549
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 185
valid_auc	 0.6914730898993087 	train_auc	 0.7111530007840473
valid_accuracy	 0.8562438296071861 	train_accuracy	 0.8527820533813657
valid_loss	 0.3825424907058811 	train_loss	 0.38251208104003426
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 186
valid_auc	 0.6919389031227202 	train_auc	 0.711201954751346
valid_accuracy	 0.8563702770658354 	train_accuracy	 0.8525708203700672
valid_loss	 0.38220057405047725 	train_loss	 0.38247179746851295
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 187
valid_auc	 0.6921342551635876 	train_auc	 0.7115024915815691
valid_accuracy	 0.8562341028795977 	train_accuracy	 0.852790240707385
valid_loss	 0.38225276012389997 	train_loss	 0.3823486631333603
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 188
valid_auc	 0.6921246670497037 	train_auc	 0.711304309404818
valid_accuracy	 0.8562535563347745 	train_accuracy	 0.8527804159161618
valid_loss	 0.38251379721487166 	train_loss	 0.3824259527309085
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 189
valid_auc	 0.6922812558703997 	train_auc	 0.7116301522217232
valid_accuracy	 0.8563070533365107 	train_accuracy	 0.8527362043556574
valid_loss	 0.3826086935329507 	train_loss	 0.38230119862492373
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 190
valid_auc	 0.6920886747438048 	train_auc	 0.7117437387740139
valid_accuracy	 0.8563216434278933 	train_accuracy	 0.8528098902898313
valid_loss	 0.3824820108712444 	train_loss	 0.382240036526536
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 191
valid_auc	 0.6921061303741451 	train_auc	 0.7114542431606697
valid_accuracy	 0.8562827365175397 	train_accuracy	 0.852778778450958
valid_loss	 0.382918595831756 	train_loss	 0.38237203943444165
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 192
valid_auc	 0.6920855754858591 	train_auc	 0.7114257844089896
valid_accuracy	 0.8563362335192759 	train_accuracy	 0.8527247420992304
valid_loss	 0.3823350196305318 	train_loss	 0.3823830943945911
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 193
valid_auc	 0.6920941045717391 	train_auc	 0.7117968055451193
valid_accuracy	 0.8563897305210122 	train_accuracy	 0.8526363189782217
valid_loss	 0.3828532668791196 	train_loss	 0.38225661941149536
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 194
valid_auc	 0.6920791097958594 	train_auc	 0.711721838218567
valid_accuracy	 0.8561611524226846 	train_accuracy	 0.8528049778942197
valid_loss	 0.382282887539316 	train_loss	 0.3822145646443279
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 195
valid_auc	 0.6915796984950049 	train_auc	 0.7118405602205693
valid_accuracy	 0.8563167800640992 	train_accuracy	 0.8527132798428033
valid_loss	 0.3822445388310791 	train_loss	 0.382216183674099
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 196
valid_auc	 0.692063329675521 	train_auc	 0.7120320465520341
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.8527771409857541
valid_loss	 0.38230760843151806 	train_loss	 0.382121757355109
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 197
valid_auc	 0.6920773992497685 	train_auc	 0.7118657276081664
valid_accuracy	 0.8563119167003049 	train_accuracy	 0.8528049778942197
valid_loss	 0.38270202455769003 	train_loss	 0.3822104307085107
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 198
valid_auc	 0.6918763505897666 	train_auc	 0.7122297451942634
valid_accuracy	 0.8563994572486006 	train_accuracy	 0.8527918781725888
valid_loss	 0.38270100453284656 	train_loss	 0.38206279427205053
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 199
valid_auc	 0.6921416636689911 	train_auc	 0.7122661945367994
valid_accuracy	 0.8562000593330383 	train_accuracy	 0.8527525790076961
valid_loss	 0.38254363280928927 	train_loss	 0.3820771428970298
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 200
valid_auc	 0.6921570080399418 	train_auc	 0.7118627059581134
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.8528491894547241
valid_loss	 0.38268276379037697 	train_loss	 0.3821782810222989
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 201
valid_auc	 0.6920323975955387 	train_auc	 0.712295987850938
valid_accuracy	 0.8563265067916875 	train_accuracy	 0.8528360897330932
valid_loss	 0.3825356065701961 	train_loss	 0.38203600911406943
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 202
valid_auc	 0.6922142938638003 	train_auc	 0.7120496610389846
valid_accuracy	 0.8562049226968325 	train_accuracy	 0.8528295398722777
valid_loss	 0.3827008821060171 	train_loss	 0.3821084390697401
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 203
valid_auc	 0.6919219893073036 	train_auc	 0.7124370838197921
valid_accuracy	 0.8563313701554818 	train_accuracy	 0.8527443916816768
valid_loss	 0.3828661138980127 	train_loss	 0.38198792071091764
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 204
valid_auc	 0.6921327722563465 	train_auc	 0.7125324941524369
valid_accuracy	 0.856384867157218 	train_accuracy	 0.8528360897330932
valid_loss	 0.3823613704047858 	train_loss	 0.3819676070329769
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 205
valid_auc	 0.692036574835438 	train_auc	 0.7120276483375608
valid_accuracy	 0.8563265067916875 	train_accuracy	 0.8528819387588014
valid_loss	 0.3823482567146439 	train_loss	 0.3820621312669051
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 206
valid_auc	 0.6921443428767803 	train_auc	 0.7123649816624985
valid_accuracy	 0.8562438296071861 	train_accuracy	 0.8528082528246275
valid_loss	 0.3824244967828669 	train_loss	 0.38197112623128104
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 207
valid_auc	 0.6920596976967182 	train_auc	 0.7126555057908326
valid_accuracy	 0.8563654137020411 	train_accuracy	 0.8528590142459472
valid_loss	 0.3823060063765005 	train_loss	 0.38187372309519324
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 208
valid_auc	 0.6920074347652391 	train_auc	 0.7125610660740169
valid_accuracy	 0.8562924632451281 	train_accuracy	 0.8526952677255608
valid_loss	 0.38220079390131667 	train_loss	 0.38196200764784766
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 209
valid_auc	 0.6921459257230286 	train_auc	 0.7125313965701345
valid_accuracy	 0.856287599881334 	train_accuracy	 0.852778778450958
valid_loss	 0.38254953005136333 	train_loss	 0.3819325824749257
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 210
valid_auc	 0.6916153141150864 	train_auc	 0.7131162328041789
valid_accuracy	 0.8562681464261571 	train_accuracy	 0.8529867365318486
valid_loss	 0.3824277986748244 	train_loss	 0.38172403841837144
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 211
valid_auc	 0.6921377825127594 	train_auc	 0.7132118201594171
valid_accuracy	 0.8561757425140673 	train_accuracy	 0.8529130505976747
valid_loss	 0.382575905599883 	train_loss	 0.38165721328803176
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 212
valid_auc	 0.6917831736434678 	train_auc	 0.7129838606396176
valid_accuracy	 0.8562341028795977 	train_accuracy	 0.8528524643851318
valid_loss	 0.3825189390360489 	train_loss	 0.3817671959785289
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 213
valid_auc	 0.6917543667990197 	train_auc	 0.7127481507181147
valid_accuracy	 0.8562827365175397 	train_accuracy	 0.8529179629932864
valid_loss	 0.3822449369441881 	train_loss	 0.3818190233905726
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 214
valid_auc	 0.692159419403534 	train_auc	 0.7128305621350038
valid_accuracy	 0.8563508236106585 	train_accuracy	 0.8529605370885869
valid_loss	 0.38241965785783055 	train_loss	 0.3817565546218702
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 215
valid_auc	 0.6920466810239453 	train_auc	 0.7129630271493401
valid_accuracy	 0.8563167800640992 	train_accuracy	 0.8528672015719666
valid_loss	 0.38255303261855556 	train_loss	 0.3817507073300207
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 216
valid_auc	 0.6921299729111492 	train_auc	 0.7130581203613681
valid_accuracy	 0.8561514256950963 	train_accuracy	 0.8528590142459472
valid_loss	 0.38236875665015607 	train_loss	 0.3817197728970956
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 217
valid_auc	 0.692211093039488 	train_auc	 0.7130578728464145
valid_accuracy	 0.8562049226968325 	train_accuracy	 0.8530735221876535
valid_loss	 0.38220970897603634 	train_loss	 0.38166612464451544
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 218
valid_auc	 0.6919588555051528 	train_auc	 0.7132638184297492
valid_accuracy	 0.8562243761520093 	train_accuracy	 0.8528197150810545
valid_loss	 0.382327130795561 	train_loss	 0.38168672062046916
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 219
valid_auc	 0.6918762734337898 	train_auc	 0.713141711538311
valid_accuracy	 0.8563265067916875 	train_accuracy	 0.8528344522678893
valid_loss	 0.38272253692279556 	train_loss	 0.38160597187453577
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 220
valid_auc	 0.6919279721502228 	train_auc	 0.7132246781854559
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.8528606517111511
valid_loss	 0.3822907759651428 	train_loss	 0.38166374184913016
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 221
valid_auc	 0.6922348026116636 	train_auc	 0.7137675790549599
valid_accuracy	 0.8562535563347745 	train_accuracy	 0.8530276731619453
valid_loss	 0.38222871804187486 	train_loss	 0.3814803067488794
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 222
valid_auc	 0.6921755969824523 	train_auc	 0.7133639604063637
valid_accuracy	 0.8563313701554818 	train_accuracy	 0.8528704765023744
valid_loss	 0.38274311860980187 	train_loss	 0.3815972388005546
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 223
valid_auc	 0.6919308412804165 	train_auc	 0.7136777797685048
valid_accuracy	 0.8563362335192759 	train_accuracy	 0.8529310627149173
valid_loss	 0.38295607962614087 	train_loss	 0.3815922875813936
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 224
valid_auc	 0.6921697612719603 	train_auc	 0.7132183066915844
valid_accuracy	 0.8562778731537455 	train_accuracy	 0.8529769117406255
valid_loss	 0.3826902643522495 	train_loss	 0.3816195784298449
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 225
valid_auc	 0.6917248404703018 	train_auc	 0.7135881192500286
valid_accuracy	 0.8563119167003049 	train_accuracy	 0.8530014737186835
valid_loss	 0.38278929057490824 	train_loss	 0.38149551442953017
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 226
valid_auc	 0.6917312117734614 	train_auc	 0.7136079303371873
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.8529130505976747
valid_loss	 0.38261117235003406 	train_loss	 0.38147292380189923
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 227
valid_auc	 0.6919592602389862 	train_auc	 0.7138769782892826
valid_accuracy	 0.8563265067916875 	train_accuracy	 0.852983461601441
valid_loss	 0.38276134139507373 	train_loss	 0.3814054054354302
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 228
valid_auc	 0.6920485746000951 	train_auc	 0.7137846841876351
valid_accuracy	 0.8563410968830701 	train_accuracy	 0.8530522351400033
valid_loss	 0.3837264789278131 	train_loss	 0.38141556489418604
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 229
valid_auc	 0.6923019128994143 	train_auc	 0.7139143642365094
valid_accuracy	 0.8561708791502731 	train_accuracy	 0.853102996561323
valid_loss	 0.3822882150096175 	train_loss	 0.38137998898084247
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 230
valid_auc	 0.692024282816194 	train_auc	 0.7138775112465704
valid_accuracy	 0.856287599881334 	train_accuracy	 0.8530817095136728
valid_loss	 0.38282307301500706 	train_loss	 0.3813389009259394
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 231
valid_auc	 0.6921978175208576 	train_auc	 0.7141374111523917
valid_accuracy	 0.8562438296071861 	train_accuracy	 0.8528524643851318
valid_loss	 0.38270045108372974 	train_loss	 0.38130515227767586
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 232
valid_auc	 0.6918879206358383 	train_auc	 0.7140530814840579
valid_accuracy	 0.8562632830623629 	train_accuracy	 0.8529965613230719
valid_loss	 0.38270946166141717 	train_loss	 0.3812515918834512
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 233
valid_auc	 0.6920511976161245 	train_auc	 0.7140619638169914
valid_accuracy	 0.8562535563347745 	train_accuracy	 0.8530031111838874
valid_loss	 0.38252161839586957 	train_loss	 0.38128931192819204
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 234
valid_auc	 0.6918796253153371 	train_auc	 0.7141577915091649
valid_accuracy	 0.8563459602468644 	train_accuracy	 0.8529294252497135
valid_loss	 0.3825272522365308 	train_loss	 0.3812555037790422
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 235
valid_auc	 0.6920172632496662 	train_auc	 0.7140285404313192
valid_accuracy	 0.8562535563347745 	train_accuracy	 0.8530767971180613
valid_loss	 0.3824727334957738 	train_loss	 0.38126255085030414
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 236
valid_auc	 0.6918335036549925 	train_auc	 0.7140690872293702
valid_accuracy	 0.8563021899727166 	train_accuracy	 0.853116096282954
valid_loss	 0.3825711942685328 	train_loss	 0.3813585185536606
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 237
valid_auc	 0.6918695006515152 	train_auc	 0.714156595904692
valid_accuracy	 0.8561757425140673 	train_accuracy	 0.8529572621581791
valid_loss	 0.38245153107659396 	train_loss	 0.3812214050803087
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 238
valid_auc	 0.6920065356970828 	train_auc	 0.7147130797906185
valid_accuracy	 0.8563265067916875 	train_accuracy	 0.8529818241362371
valid_loss	 0.3824132053308537 	train_loss	 0.3811048110866008
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 239
valid_auc	 0.6922746115537836 	train_auc	 0.714660700663091
valid_accuracy	 0.8562000593330383 	train_accuracy	 0.8529638120189946
valid_loss	 0.3828230188492501 	train_loss	 0.38107979320176494
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 240
valid_auc	 0.6911128115016288 	train_auc	 0.7142987427353952
valid_accuracy	 0.8563654137020411 	train_accuracy	 0.8529998362534796
valid_loss	 0.38249478740660076 	train_loss	 0.381188880554254
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 241
valid_auc	 0.6919409984914245 	train_auc	 0.7145155565348168
valid_accuracy	 0.856287599881334 	train_accuracy	 0.85304241034878
valid_loss	 0.3825287406298762 	train_loss	 0.38113254232057153
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 242
valid_auc	 0.6917317061077841 	train_auc	 0.7146343995919828
valid_accuracy	 0.8563021899727166 	train_accuracy	 0.8528295398722777
valid_loss	 0.3824924300401927 	train_loss	 0.3810743412105798
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 243
valid_auc	 0.6918100806895099 	train_auc	 0.714359105486879
valid_accuracy	 0.8562000593330383 	train_accuracy	 0.853102996561323
valid_loss	 0.38255049568586375 	train_loss	 0.38119539943465147
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 244
valid_auc	 0.692126291920113 	train_auc	 0.7149021068380808
valid_accuracy	 0.8561854692416557 	train_accuracy	 0.8531079089569347
valid_loss	 0.38247650990382553 	train_loss	 0.3809096217727472
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 245
valid_auc	 0.6923433020074261 	train_auc	 0.7148670856889157
valid_accuracy	 0.8562681464261571 	train_accuracy	 0.8529818241362371
valid_loss	 0.3832268713169451 	train_loss	 0.3809896447750463
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 246
valid_auc	 0.691988075603139 	train_auc	 0.715021851042639
valid_accuracy	 0.8562389662433919 	train_accuracy	 0.8531079089569347
valid_loss	 0.38283687456357957 	train_loss	 0.38091978641254454
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 247
valid_auc	 0.6917252206980186 	train_auc	 0.7146252136183279
valid_accuracy	 0.8564189107037774 	train_accuracy	 0.8530604224660226
valid_loss	 0.3836801296339383 	train_loss	 0.3810557437545208
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 248
valid_auc	 0.6914961326370744 	train_auc	 0.7150354558992372
valid_accuracy	 0.8562049226968325 	train_accuracy	 0.8530653348616342
valid_loss	 0.38265084752764916 	train_loss	 0.3808719473054036
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 249
valid_auc	 0.6920196259839329 	train_auc	 0.714752483468176
valid_accuracy	 0.8562243761520093 	train_accuracy	 0.85304241034878
valid_loss	 0.38257183801520683 	train_loss	 0.38098329513165147
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 250
valid_auc	 0.691913448159819 	train_auc	 0.7150061708415592
valid_accuracy	 0.8561562890588905 	train_accuracy	 0.8530620599312264
valid_loss	 0.38281483361271823 	train_loss	 0.3809223409023846
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 251
valid_auc	 0.6919263421105545 	train_auc	 0.7150832650465407
valid_accuracy	 0.856146562331302 	train_accuracy	 0.853248730964467
valid_loss	 0.3824225146111622 	train_loss	 0.38086356400185656
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 252
valid_auc	 0.6920961089040492 	train_auc	 0.7153651336884249
valid_accuracy	 0.8561660157864789 	train_accuracy	 0.8530080235794989
valid_loss	 0.3825046020480594 	train_loss	 0.38081952298157506
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 253
valid_auc	 0.6917772511085701 	train_auc	 0.715245564163048
valid_accuracy	 0.8561514256950963 	train_accuracy	 0.8529294252497135
valid_loss	 0.3826813806695604 	train_loss	 0.38082399187722554
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 254
valid_auc	 0.6920197483230622 	train_auc	 0.7151674911297399
valid_accuracy	 0.8561708791502731 	train_accuracy	 0.8531963320779433
valid_loss	 0.38272990492326314 	train_loss	 0.38083629379873746
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 255
valid_auc	 0.6919726458436879 	train_auc	 0.715229862427914
valid_accuracy	 0.8563751404296296 	train_accuracy	 0.8530653348616342
valid_loss	 0.38312657471127026 	train_loss	 0.38086736997554166
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 256
valid_auc	 0.6919697045353224 	train_auc	 0.7153021027303881
valid_accuracy	 0.8561368356037137 	train_accuracy	 0.8531291960045849
valid_loss	 0.3824938491837107 	train_loss	 0.3808139064139057
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 257
valid_auc	 0.6914191890785458 	train_auc	 0.7153705795663069
valid_accuracy	 0.8561951959692441 	train_accuracy	 0.852994923857868
valid_loss	 0.38249248846222594 	train_loss	 0.380822238786486
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 258
valid_auc	 0.6919353079030922 	train_auc	 0.7153287626812892
valid_accuracy	 0.8562146494244209 	train_accuracy	 0.8530145734403144
valid_loss	 0.382493043939271 	train_loss	 0.38081320571639415
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 259
valid_auc	 0.6920275094868011 	train_auc	 0.7152195188193904
valid_accuracy	 0.8561708791502731 	train_accuracy	 0.8531619453086622
valid_loss	 0.3831167057794394 	train_loss	 0.3807792860640146
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 260
valid_auc	 0.6918016765273888 	train_auc	 0.7155748001452222
valid_accuracy	 0.8562049226968325 	train_accuracy	 0.8531242836089733
valid_loss	 0.38337773264210395 	train_loss	 0.38069122562903934
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 261
valid_auc	 0.6917620591350324 	train_auc	 0.7160962913090464
valid_accuracy	 0.8562681464261571 	train_accuracy	 0.8530800720484689
valid_loss	 0.38256926126603924 	train_loss	 0.3805879998064656
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 262
valid_auc	 0.6918736634366347 	train_auc	 0.7159059509481706
valid_accuracy	 0.856073611874389 	train_accuracy	 0.8531373833306042
valid_loss	 0.38251716858643103 	train_loss	 0.3805721394690518
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 263
valid_auc	 0.6920479695096122 	train_auc	 0.7159894276357247
valid_accuracy	 0.8561660157864789 	train_accuracy	 0.8532077943343704
valid_loss	 0.38257860537521404 	train_loss	 0.3805840780799948
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 264
valid_auc	 0.6915795398753355 	train_auc	 0.7155441689452534
valid_accuracy	 0.8561611524226846 	train_accuracy	 0.8532307188472245
valid_loss	 0.38257624508162524 	train_loss	 0.38067355031338074
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 265
valid_auc	 0.6918989979749467 	train_auc	 0.7157886178398903
valid_accuracy	 0.8562243761520093 	train_accuracy	 0.8529867365318486
valid_loss	 0.38276029351096275 	train_loss	 0.3806712236623754
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 266
valid_auc	 0.6922310755759316 	train_auc	 0.7159387931677188
valid_accuracy	 0.8562000593330383 	train_accuracy	 0.8530440478139839
valid_loss	 0.382676283459692 	train_loss	 0.3806056325189546
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 267
valid_auc	 0.6915676130546664 	train_auc	 0.7160815571813075
valid_accuracy	 0.8561319722399194 	train_accuracy	 0.8531062714917308
valid_loss	 0.38334499891796603 	train_loss	 0.3804992764871923
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 268
valid_auc	 0.6917527367593514 	train_auc	 0.7161163631166005
valid_accuracy	 0.8561611524226846 	train_accuracy	 0.8530374979531685
valid_loss	 0.3826568690980869 	train_loss	 0.38054156451126836
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 269
valid_auc	 0.6917067889392721 	train_auc	 0.7160099599448075
valid_accuracy	 0.8562632830623629 	train_accuracy	 0.8531095464221385
valid_loss	 0.3827648303690165 	train_loss	 0.3805111467332934
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 270
valid_auc	 0.6915077752442261 	train_auc	 0.7160104060375202
valid_accuracy	 0.8561903326054499 	train_accuracy	 0.8530522351400033
valid_loss	 0.38293842352859314 	train_loss	 0.3805005421887226
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 271
valid_auc	 0.6918094670793223 	train_auc	 0.7162277917349775
valid_accuracy	 0.8562341028795977 	train_accuracy	 0.8531619453086622
valid_loss	 0.38277539769708085 	train_loss	 0.3804686509298989
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 272
valid_auc	 0.6920186533974265 	train_auc	 0.7156256184338264
valid_accuracy	 0.8561271088761253 	train_accuracy	 0.8530325855575569
valid_loss	 0.38272455779459613 	train_loss	 0.380664853142035
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 273
valid_auc	 0.6911320530152233 	train_auc	 0.716183602050519
valid_accuracy	 0.8562292395158035 	train_accuracy	 0.8532438185688554
valid_loss	 0.3829352226062652 	train_loss	 0.380360954063614
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 274
valid_auc	 0.691858664161585 	train_auc	 0.7164319071242599
valid_accuracy	 0.8561125187847427 	train_accuracy	 0.8534550515801539
valid_loss	 0.3834814288165583 	train_loss	 0.38027632722873383
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 275
valid_auc	 0.6919295703127939 	train_auc	 0.7162673762774794
valid_accuracy	 0.8560444316916238 	train_accuracy	 0.8531766824954969
valid_loss	 0.38291879271545287 	train_loss	 0.3804185263311016
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 276
valid_auc	 0.6915485364787246 	train_auc	 0.7168100370106106
valid_accuracy	 0.8559957980536818 	train_accuracy	 0.8531373833306042
valid_loss	 0.3826191468568484 	train_loss	 0.38021885275837364
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 277
valid_auc	 0.6917548067603959 	train_auc	 0.7164744846575218
valid_accuracy	 0.8561319722399194 	train_accuracy	 0.8530325855575569
valid_loss	 0.3827744519693304 	train_loss	 0.38030307702421035
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 278
valid_auc	 0.6914413231754536 	train_auc	 0.7162245481997184
valid_accuracy	 0.8560882019657716 	train_accuracy	 0.8531553954478467
valid_loss	 0.38270961512847945 	train_loss	 0.38040723529503323
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 279
valid_auc	 0.69183740998743 	train_auc	 0.71654438920124
valid_accuracy	 0.8561416989675079 	train_accuracy	 0.8532143441951858
valid_loss	 0.38283220511552585 	train_loss	 0.38025606794103833
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 280
valid_auc	 0.6919497876676134 	train_auc	 0.7171300953582977
valid_accuracy	 0.8561660157864789 	train_accuracy	 0.8532159816603897
valid_loss	 0.3826816131055688 	train_loss	 0.38004784393010366
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 281
valid_auc	 0.691459979892693 	train_auc	 0.7169339941312162
valid_accuracy	 0.8561611524226846 	train_accuracy	 0.853212706729982
valid_loss	 0.38274605535333384 	train_loss	 0.3801233875987715
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 282
valid_auc	 0.6917834046327631 	train_auc	 0.716998446115162
valid_accuracy	 0.8561611524226846 	train_accuracy	 0.8532241689864091
valid_loss	 0.3833211416372063 	train_loss	 0.3801245233520502
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 283
valid_auc	 0.6917029055813192 	train_auc	 0.7170535609859481
valid_accuracy	 0.8561368356037137 	train_accuracy	 0.8532503684296708
valid_loss	 0.38324976835151053 	train_loss	 0.38007670951605677
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 284
valid_auc	 0.6918805736829078 	train_auc	 0.7164322163279452
valid_accuracy	 0.8560930653295659 	train_accuracy	 0.8532077943343704
valid_loss	 0.38273340330121364 	train_loss	 0.38027799543817115
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 285
valid_auc	 0.6918884149701611 	train_auc	 0.7169419093951059
valid_accuracy	 0.8561368356037137 	train_accuracy	 0.8532274439168168
valid_loss	 0.38296466053778094 	train_loss	 0.3800916076837276
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 286
valid_auc	 0.691763825872883 	train_auc	 0.7174344263305479
valid_accuracy	 0.856146562331302 	train_accuracy	 0.8531815948911086
valid_loss	 0.382800162644307 	train_loss	 0.37992310393575157
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt
epoch 287
valid_auc	 0.6920121445345414 	train_auc	 0.7171814413262354
valid_accuracy	 0.8561806058778615 	train_accuracy	 0.8532569182904863
valid_loss	 0.3828407995679077 	train_loss	 0.3800116790410168


Start testing ......................
 Best epoch: 245
/root/AKT/AKT-master/akt.py:74: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  qa_data = (qa_data-q_data)//self.n_question  # rt

test_auc	 0.681453146247266
test_accuracy	 0.8448171191147661
test_loss	 0.4060342778729808
